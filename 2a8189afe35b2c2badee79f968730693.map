{"version":3,"names":["RaulMap","hostRef","this","map","theme","default","red","orange","brown","green","dark","pink","prototype","componentDidLoad","initRaulMapControls","iconsConfig","getMarker","raulMapInit","emit","document","getElementById","initMapSateliteControl","initFullScreenControl","initZoomControls","_this","markerIcons","clusterIcons","Object","keys","forEach","color","getMarkerIcon","getClusterIcons","controlWrapper","createElement","toggle","id","activeToggle","toggles","label","name","style","marginTop","marginLeft","appendChild","index","addEventListener","e","detail","setMapTypeId","controls","google","maps","ControlPosition","TOP_LEFT","push","initFullscreenControl","fullscreenControl","variant","icon","marginRight","RIGHT_TOP","elementToSendFullscreen","getDiv","firstChild","isFullscreen","exitFullscreen","requestFullscreen","onfullscreenchange","element","fullscreenElement","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","zoomControls","marginBottom","classList","add","item","button","concat","setZoom","getZoom","RIGHT_BOTTOM","path","fillColor","fillOpacity","scale","strokeColor","strokeWeight","getIconSvg","size","textColor","textSize","url","window","btoa","width","height","render","h"],"sources":["node_modules/@realpage/raul3/collection/components/plugins/raul-map/raul-map.js"],"sourcesContent":["import { h } from \"@stencil/core\";\r\nexport class RaulMap {\r\n    constructor() {\r\n        /**\r\n         * Should be instance of Google maps\r\n         */\r\n        this.map = null;\r\n        this.theme = {\r\n            default: '#0076CC',\r\n            red: '#A50F15',\r\n            orange: '#A63602',\r\n            brown: '#81581A',\r\n            green: '#288081',\r\n            dark: '#2E3041',\r\n            pink: '#D9145B'\r\n        };\r\n    }\r\n    componentDidLoad() {\r\n        if (this.map) {\r\n            this.initRaulMapControls();\r\n        }\r\n        const iconsConfig = this.getMarker();\r\n        this.raulMapInit.emit(iconsConfig);\r\n    }\r\n    initRaulMapControls() {\r\n        if (document.getElementById('raul-map-toggle'))\r\n            return;\r\n        this.initMapSateliteControl(this.map);\r\n        this.initFullScreenControl(this.map);\r\n        this.initZoomControls(this.map);\r\n    }\r\n    getMarker() {\r\n        let markerIcons = {};\r\n        let clusterIcons = {};\r\n        Object.keys(this.theme).forEach(color => {\r\n            markerIcons[color] = this.getMarkerIcon(color);\r\n            clusterIcons[color] = this.getClusterIcons(color);\r\n        });\r\n        return { markerIcons, clusterIcons };\r\n    }\r\n    initMapSateliteControl(map) {\r\n        const controlWrapper = document.createElement('div');\r\n        const toggle = document.createElement('raul-toggles');\r\n        toggle.id = 'raul-map-toggle';\r\n        toggle.activeToggle = 'map';\r\n        toggle.toggles = [\r\n            { label: 'Map', name: 'map' },\r\n            { label: 'Satelite', name: 'satelite' },\r\n        ];\r\n        toggle.style.marginTop = '10px';\r\n        toggle.style.marginLeft = '10px';\r\n        controlWrapper.appendChild(toggle);\r\n        controlWrapper.index = 1;\r\n        toggle.addEventListener('raulToggleChange', (e) => {\r\n            toggle.activeToggle = e.detail;\r\n            if (toggle.activeToggle === 'map') {\r\n                map.setMapTypeId('roadmap');\r\n            }\r\n            else {\r\n                map.setMapTypeId('hybrid');\r\n            }\r\n        });\r\n        map.controls[google.maps.ControlPosition.TOP_LEFT].push(controlWrapper);\r\n    }\r\n    initFullScreenControl(map) {\r\n        const initFullscreenControl = (map) => {\r\n            const fullscreenControl = document.createElement('raul-button');\r\n            fullscreenControl.variant = 'control';\r\n            fullscreenControl.icon = 'expand';\r\n            fullscreenControl.id = 'raul-map-full-screen';\r\n            fullscreenControl.style.marginTop = '10px';\r\n            fullscreenControl.style.marginRight = '10px';\r\n            map.controls[google.maps.ControlPosition.RIGHT_TOP].push(fullscreenControl);\r\n            const elementToSendFullscreen = map.getDiv().firstChild;\r\n            fullscreenControl.addEventListener('click', () => {\r\n                if (isFullscreen(elementToSendFullscreen)) {\r\n                    exitFullscreen();\r\n                }\r\n                else {\r\n                    requestFullscreen(elementToSendFullscreen);\r\n                }\r\n            });\r\n            document['onwebkitfullscreenchange'] =\r\n                document['onmsfullscreenchange'] =\r\n                    document['onmozfullscreenchange'] =\r\n                        document.onfullscreenchange = () => {\r\n                            if (isFullscreen(elementToSendFullscreen)) {\r\n                                fullscreenControl.icon = 'collapse';\r\n                            }\r\n                            else {\r\n                                fullscreenControl.icon = 'expand';\r\n                            }\r\n                        };\r\n        };\r\n        const isFullscreen = (element) => {\r\n            return (document.fullscreenElement ||\r\n                document['webkitFullscreenElement'] ||\r\n                document['mozFullScreenElement'] ||\r\n                document['msFullscreenElement']) == element;\r\n        };\r\n        const requestFullscreen = (element) => {\r\n            if (element.requestFullscreen) {\r\n                element.requestFullscreen();\r\n            }\r\n            else if (element.webkitRequestFullScreen) {\r\n                element.webkitRequestFullScreen();\r\n            }\r\n            else if (element.mozRequestFullScreen) {\r\n                element.mozRequestFullScreen();\r\n            }\r\n            else if (element.msRequestFullscreen) {\r\n                element.msRequestFullscreen();\r\n            }\r\n        };\r\n        const exitFullscreen = () => {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            }\r\n            else if (document['webkitExitFullscreen']) {\r\n                document['webkitExitFullscreen']();\r\n            }\r\n            else if (document['mozCancelFullScreen']) {\r\n                document['mozCancelFullScreen']();\r\n            }\r\n            else if (document['msCancelFullScreen']) {\r\n                document['msCancelFullScreen']();\r\n            }\r\n        };\r\n        return initFullscreenControl(map);\r\n    }\r\n    initZoomControls(map) {\r\n        const zoomControls = document.createElement('div');\r\n        zoomControls.style.marginBottom = '10px';\r\n        zoomControls.style.marginRight = '10px';\r\n        zoomControls.classList.add('r-flex', 'r-flex-col');\r\n        ['zoom-in', 'zoom-out'].map((item) => {\r\n            const button = document.createElement('raul-button');\r\n            button.variant = 'control';\r\n            button.id = `raul-map-${item}`;\r\n            button.icon = item;\r\n            button.style.marginTop = '.5rem';\r\n            zoomControls.appendChild(button);\r\n            button.addEventListener('click', () => item === 'zoom-in' ? map.setZoom(map.getZoom() + 1) : map.setZoom(map.getZoom() - 1));\r\n            return button;\r\n        });\r\n        map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(zoomControls);\r\n    }\r\n    getMarkerIcon(color) {\r\n        return {\r\n            path: 'M12,2C8.134,2,5,5.134,5,9c0,5,7,13,7,13s7-8,7-13C19,5.134,15.866,2,12,2z M12,11.5\\n' +\r\n                '\\t\\tc-1.38,0-2.5-1.119-2.5-2.5s1.12-2.5,2.5-2.5c1.381,0,2.5,1.119,2.5,2.5S13.381,11.5,12,11.5z',\r\n            fillColor: this.theme[color],\r\n            fillOpacity: 1,\r\n            scale: 1.5,\r\n            strokeColor: '#ffffff',\r\n            strokeWeight: 1\r\n        };\r\n    }\r\n    getClusterIcons(color) {\r\n        const getIconSvg = (size, color) => {\r\n            return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${size}\" height=\"${size}\">\r\n                  <circle cx=\"${size / 2}\" cy=\"${size / 2}\" r=\"${size / 2}\" fill=\"${this.theme[color] || this.theme.default}\" stroke=\"white\"/>\r\n                </svg>`;\r\n        };\r\n        return [\r\n            {\r\n                textColor: '#ffffff',\r\n                textSize: 12,\r\n                url: 'data:image/svg+xml;base64,' + window.btoa(getIconSvg(16, color)),\r\n                width: '16',\r\n                height: '16',\r\n            },\r\n            {\r\n                textColor: '#ffffff',\r\n                url: 'data:image/svg+xml;base64,' + window.btoa(getIconSvg(20, color)),\r\n                width: '20',\r\n                height: '20',\r\n            },\r\n            {\r\n                textColor: '#ffffff',\r\n                url: 'data:image/svg+xml;base64,' + window.btoa(getIconSvg(24, color)),\r\n                width: '24',\r\n                height: '24',\r\n            },\r\n            {\r\n                textColor: '#ffffff',\r\n                url: 'data:image/svg+xml;base64,' + window.btoa(getIconSvg(30, color)),\r\n                width: '30',\r\n                height: '30',\r\n            },\r\n        ];\r\n    }\r\n    render() {\r\n        return (h(\"slot\", null));\r\n    }\r\n    static get is() { return \"raul-map\"; }\r\n    static get properties() { return {\r\n        \"map\": {\r\n            \"type\": \"any\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"any\",\r\n                \"resolved\": \"any\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Should be instance of Google maps\"\r\n            },\r\n            \"attribute\": \"map\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"null\"\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"method\": \"raulMapInit\",\r\n            \"name\": \"raulMapInit\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"event.detail contains config for marker and cluster icons\"\r\n            },\r\n            \"complexType\": {\r\n                \"original\": \"any\",\r\n                \"resolved\": \"any\",\r\n                \"references\": {}\r\n            }\r\n        }]; }\r\n    static get watchers() { return [{\r\n            \"propName\": \"map\",\r\n            \"methodName\": \"initRaulMapControls\"\r\n        }]; }\r\n}\r\n"],"mappings":"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"}
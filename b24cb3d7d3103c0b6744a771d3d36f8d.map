{"version":3,"names":["raulFilterMenuCss","RaulDropdownMenu","hostRef","this","items","text","value","icon","selectedItem","isActive","prototype","updateValue","updateSelectedItem","componentWillLoad","_this","defaultItem","find","item","handleClickEvent","e","detail","raulFilterMenuChange","emit","activState","render","h","textUnderline","border","textSize","variant","onRaulMenuOpen","onRaulMenuClose","onRaulMenuClick","class"],"sources":["node_modules/@realpage/raul3/collection/components/elements/raul-filter-menu/raul-filter-menu.css?tag=raul-filter-menu","node_modules/@realpage/raul3/collection/components/elements/raul-filter-menu/raul-filter-menu.js"],"sourcesContent":["raul-filter-menu {\n  display: inline-block;\n}\n\nraul-filter-menu .r-filter-menu {\n  border-width: 1px;\n  border-color: #C6CCD0;\n  border-radius: 0.125rem;\n  padding-left: 0.25rem;\n  padding-right: 0.25rem;\n  height: 40px;\n}\n\nraul-filter-menu .r-filter-menu:hover {\n  cursor: pointer;\n}\n\nbody[modality=keyboard] raul-filter-menu .r-filter-menu:focus {\n  outline: none;\n  border: 1px solid #0076CC;\n}\n\nraul-filter-menu .r-filter-menu--active .r-filter-menu__selected-icon {\n  color: #0076CC;\n}\n\nraul-filter-menu .r-filter-menu__selected-icon {\n  color: #202737;\n  padding-left: 0.25rem;\n  padding-right: 0.25rem;\n}\n\nraul-filter-menu .r-filter-menu__down-arrow {\n  color: #C6CCD0;\n  padding-left: 0.25rem;\n  padding-right: 0.25rem;\n}","import { h } from \"@stencil/core\";\r\nexport class RaulDropdownMenu {\r\n    constructor() {\r\n        this.items = [\r\n            {\r\n                text: 'Table',\r\n                value: 'table',\r\n                icon: 'list-bullets-3'\r\n            },\r\n            {\r\n                text: 'Cards',\r\n                value: 'cards',\r\n                icon: 'content-view-module-2'\r\n            },\r\n            {\r\n                text: 'Workflow',\r\n                value: 'workflow',\r\n                icon: 'content-view-module-1'\r\n            }\r\n        ];\r\n        this.selectedItem = this.items[0];\r\n        this.isActive = false;\r\n        /**\r\n         * The value of the select.\r\n         */\r\n        this.value = null;\r\n    }\r\n    updateValue() {\r\n        this.updateSelectedItem();\r\n    }\r\n    componentWillLoad() {\r\n        if (this.value) {\r\n            this.updateSelectedItem();\r\n        }\r\n        else {\r\n            this.selectedItem = this.items[0];\r\n        }\r\n    }\r\n    updateSelectedItem() {\r\n        const defaultItem = this.items.find(item => item.value === this.value);\r\n        if (defaultItem)\r\n            this.selectedItem = defaultItem;\r\n    }\r\n    handleClickEvent(e) {\r\n        this.selectedItem = e.detail;\r\n        this.raulFilterMenuChange.emit(this.selectedItem.value);\r\n    }\r\n    activState() {\r\n        this.isActive = !this.isActive;\r\n    }\r\n    render() {\r\n        return (h(\"raul-menu\", { items: this.items, textUnderline: false, border: true, textSize: \"sm\", variant: \"items\", onRaulMenuOpen: () => this.activState(), onRaulMenuClose: () => this.activState(), onRaulMenuClick: e => this.handleClickEvent(e) },\r\n            h(\"button\", { class: {\r\n                    'r-filter-menu': true,\r\n                    'r-filter-menu--active': this.isActive\r\n                } },\r\n                h(\"raul-icon\", { icon: this.selectedItem.icon, class: \"r-filter-menu__selected-icon\" }),\r\n                h(\"raul-icon\", { icon: \"arrow-down-v\", class: \"r-filter-menu__down-arrow\" }))));\r\n    }\r\n    static get is() { return \"raul-filter-menu\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"raul-filter-menu.scss\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"raul-filter-menu.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"items\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"MenuItemInterface[]\",\r\n                \"resolved\": \"MenuItemInterface[]\",\r\n                \"references\": {\r\n                    \"MenuItemInterface\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../../utils/interfaces/\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"defaultValue\": \"[\\r\\n    {\\r\\n      text: 'Table',\\r\\n      value: 'table',\\r\\n      icon: 'list-bullets-3'\\r\\n    },\\r\\n    {\\r\\n      text: 'Cards',\\r\\n      value: 'cards',\\r\\n      icon: 'content-view-module-2'\\r\\n    },\\r\\n    {\\r\\n      text: 'Workflow',\\r\\n      value: 'workflow',\\r\\n      icon: 'content-view-module-1'\\r\\n    }\\r\\n  ]\"\r\n        },\r\n        \"value\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"The value of the select.\"\r\n            },\r\n            \"attribute\": \"value\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"null\"\r\n        }\r\n    }; }\r\n    static get states() { return {\r\n        \"selectedItem\": {},\r\n        \"isActive\": {}\r\n    }; }\r\n    static get events() { return [{\r\n            \"method\": \"raulFilterMenuChange\",\r\n            \"name\": \"raulFilterMenuChange\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Event emitted when an item is selected.\"\r\n            },\r\n            \"complexType\": {\r\n                \"original\": \"any\",\r\n                \"resolved\": \"any\",\r\n                \"references\": {}\r\n            }\r\n        }]; }\r\n    static get watchers() { return [{\r\n            \"propName\": \"value\",\r\n            \"methodName\": \"updateValue\"\r\n        }]; }\r\n}\r\n"],"mappings":"0EAAA,IAAMA,kBAAoB,unB,ICCbC,iBAAgB,WACzB,SAAAA,EAAAC,G,8FACIC,KAAKC,MAAQ,CACT,CACIC,KAAM,QACNC,MAAO,QACPC,KAAM,kBAEV,CACIF,KAAM,QACNC,MAAO,QACPC,KAAM,yBAEV,CACIF,KAAM,WACNC,MAAO,WACPC,KAAM,0BAGdJ,KAAKK,aAAeL,KAAKC,MAAM,GAC/BD,KAAKM,SAAW,MAIhBN,KAAKG,MAAQ,I,CAEjBL,EAAAS,UAAAC,YAAA,WACIR,KAAKS,oB,EAETX,EAAAS,UAAAG,kBAAA,WACI,GAAIV,KAAKG,MAAO,CACZH,KAAKS,oB,KAEJ,CACDT,KAAKK,aAAeL,KAAKC,MAAM,E,GAGvCH,EAAAS,UAAAE,mBAAA,eAAAE,EAAAX,KACI,IAAMY,EAAcZ,KAAKC,MAAMY,MAAK,SAAAC,GAAQ,OAAAA,EAAKX,QAAUQ,EAAKR,KAApB,IAC5C,GAAIS,EACAZ,KAAKK,aAAeO,C,EAE5Bd,EAAAS,UAAAQ,iBAAA,SAAiBC,GACbhB,KAAKK,aAAeW,EAAEC,OACtBjB,KAAKkB,qBAAqBC,KAAKnB,KAAKK,aAAaF,M,EAErDL,EAAAS,UAAAa,WAAA,WACIpB,KAAKM,UAAYN,KAAKM,Q,EAE1BR,EAAAS,UAAAc,OAAA,eAAAV,EAAAX,KACI,OAAQsB,EAAE,YAAa,CAAErB,MAAOD,KAAKC,MAAOsB,cAAe,MAAOC,OAAQ,KAAMC,SAAU,KAAMC,QAAS,QAASC,eAAgB,WAAM,OAAAhB,EAAKS,YAAL,EAAmBQ,gBAAiB,WAAM,OAAAjB,EAAKS,YAAL,EAAmBS,gBAAiB,SAAAb,GAAK,OAAAL,EAAKI,iBAAiBC,EAAtB,GACvNM,EAAE,SAAU,CAAEQ,MAAO,CACb,gBAAiB,KACjB,wBAAyB9B,KAAKM,WAElCgB,EAAE,YAAa,CAAElB,KAAMJ,KAAKK,aAAaD,KAAM0B,MAAO,iCACtDR,EAAE,YAAa,CAAElB,KAAM,eAAgB0B,MAAO,+B,kIAxDjC,G"}
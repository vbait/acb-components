{"version":3,"names":["sanitizeDOMString","untrustedString","IonicSafeString","value","isSanitizerEnabled","documentFragment_1","document","createDocumentFragment","workingDiv","createElement","appendChild","innerHTML","blockedTags","forEach","blockedTag","getElementsToRemove","querySelectorAll","elementIndex","length","element","parentNode","removeChild","childElements","getElementChildren","childIndex","sanitizeElement","dfChildren","fragmentDiv","getInnerDiv","querySelector","err","console","error","nodeType","i","attributes","attribute","item","attributeName","name","allowedAttributes","includes","toLowerCase","removeAttribute","attributeValue","el","children","childNodes","_a","win","window","config","Ionic","get","sanitizerEnabled","undefined","this"],"sources":["node_modules/@ionic/core/dist/collection/utils/sanitization/index.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nexport const sanitizeDOMString = (untrustedString) => {\n  try {\n    if (untrustedString instanceof IonicSafeString) {\n      return untrustedString.value;\n    }\n    if (!isSanitizerEnabled() || typeof untrustedString !== 'string' || untrustedString === '') {\n      return untrustedString;\n    }\n    /**\n     * Create a document fragment\n     * separate from the main DOM,\n     * create a div to do our work in\n     */\n    const documentFragment = document.createDocumentFragment();\n    const workingDiv = document.createElement('div');\n    documentFragment.appendChild(workingDiv);\n    workingDiv.innerHTML = untrustedString;\n    /**\n     * Remove any elements\n     * that are blocked\n     */\n    blockedTags.forEach((blockedTag) => {\n      const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n      for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n        const element = getElementsToRemove[elementIndex];\n        if (element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        else {\n          documentFragment.removeChild(element);\n        }\n        /**\n         * We still need to sanitize\n         * the children of this element\n         * as they are left behind\n         */\n        const childElements = getElementChildren(element);\n        /* eslint-disable-next-line */\n        for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\n          sanitizeElement(childElements[childIndex]);\n        }\n      }\n    });\n    /**\n     * Go through remaining elements and remove\n     * non-allowed attribs\n     */\n    // IE does not support .children on document fragments, only .childNodes\n    const dfChildren = getElementChildren(documentFragment);\n    /* eslint-disable-next-line */\n    for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n      sanitizeElement(dfChildren[childIndex]);\n    }\n    // Append document fragment to div\n    const fragmentDiv = document.createElement('div');\n    fragmentDiv.appendChild(documentFragment);\n    // First child is always the div we did our work in\n    const getInnerDiv = fragmentDiv.querySelector('div');\n    return getInnerDiv !== null ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n  }\n  catch (err) {\n    console.error(err);\n    return '';\n  }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\n// TODO(FW-2832): type (using Element triggers other type errors as well)\nconst sanitizeElement = (element) => {\n  // IE uses childNodes, so ignore nodes that are not elements\n  if (element.nodeType && element.nodeType !== 1) {\n    return;\n  }\n  for (let i = element.attributes.length - 1; i >= 0; i--) {\n    const attribute = element.attributes.item(i);\n    const attributeName = attribute.name;\n    // remove non-allowed attribs\n    if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n      element.removeAttribute(attributeName);\n      continue;\n    }\n    // clean up any allowed attribs\n    // that attempt to do any JS funny-business\n    const attributeValue = attribute.value;\n    /* eslint-disable-next-line */\n    if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n      element.removeAttribute(attributeName);\n    }\n  }\n  /**\n   * Sanitize any nested children\n   */\n  const childElements = getElementChildren(element);\n  /* eslint-disable-next-line */\n  for (let i = 0; i < childElements.length; i++) {\n    sanitizeElement(childElements[i]);\n  }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\n// TODO(FW-2832): type\nconst getElementChildren = (el) => {\n  return el.children != null ? el.children : el.childNodes;\n};\nconst isSanitizerEnabled = () => {\n  var _a;\n  const win = window;\n  const config = (_a = win === null || win === void 0 ? void 0 : win.Ionic) === null || _a === void 0 ? void 0 : _a.config;\n  if (config) {\n    if (config.get) {\n      return config.get('sanitizerEnabled', true);\n    }\n    else {\n      return config.sanitizerEnabled === true || config.sanitizerEnabled === undefined;\n    }\n  }\n  return true;\n};\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\nexport class IonicSafeString {\n  constructor(value) {\n    this.value = value;\n  }\n}\n"],"mappings":";;;AAOY,IAACA,kBAAoB,SAACC,GAChC,IACE,GAAIA,aAA2BC,gBAAiB,CAC9C,OAAOD,EAAgBE,K,CAEzB,IAAKC,6BAA+BH,IAAoB,UAAYA,IAAoB,GAAI,CAC1F,OAAOA,C,CAOT,IAAMI,EAAmBC,SAASC,yBAClC,IAAMC,EAAaF,SAASG,cAAc,OAC1CJ,EAAiBK,YAAYF,GAC7BA,EAAWG,UAAYV,EAKvBW,YAAYC,SAAQ,SAACC,GACnB,IAAMC,EAAsBV,EAAiBW,iBAAiBF,GAC9D,IAAK,IAAIG,EAAeF,EAAoBG,OAAS,EAAGD,GAAgB,EAAGA,IAAgB,CACzF,IAAME,EAAUJ,EAAoBE,GACpC,GAAIE,EAAQC,WAAY,CACtBD,EAAQC,WAAWC,YAAYF,E,KAE5B,CACHd,EAAiBgB,YAAYF,E,CAO/B,IAAMG,EAAgBC,mBAAmBJ,GAEzC,IAAK,IAAIK,EAAa,EAAGA,EAAaF,EAAcJ,OAAQM,IAAc,CACxEC,gBAAgBH,EAAcE,G,EAGxC,IAMI,IAAME,EAAaH,mBAAmBlB,GAEtC,IAAK,IAAImB,EAAa,EAAGA,EAAaE,EAAWR,OAAQM,IAAc,CACrEC,gBAAgBC,EAAWF,G,CAG7B,IAAMG,EAAcrB,SAASG,cAAc,OAC3CkB,EAAYjB,YAAYL,GAExB,IAAMuB,EAAcD,EAAYE,cAAc,OAC9C,OAAOD,IAAgB,KAAOA,EAAYjB,UAAYgB,EAAYhB,S,CAEpE,MAAOmB,GACLC,QAAQC,MAAMF,GACd,MAAO,E,CAEX,EAOA,IAAML,gBAAkB,SAACN,GAEvB,GAAIA,EAAQc,UAAYd,EAAQc,WAAa,EAAG,CAC9C,M,CAEF,IAAK,IAAIC,EAAIf,EAAQgB,WAAWjB,OAAS,EAAGgB,GAAK,EAAGA,IAAK,CACvD,IAAME,EAAYjB,EAAQgB,WAAWE,KAAKH,GAC1C,IAAMI,EAAgBF,EAAUG,KAEhC,IAAKC,kBAAkBC,SAASH,EAAcI,eAAgB,CAC5DvB,EAAQwB,gBAAgBL,GACxB,Q,CAIF,IAAMM,EAAiBR,EAAUjC,MAEjC,GAAIyC,GAAkB,MAAQA,EAAeF,cAAcD,SAAS,eAAgB,CAClFtB,EAAQwB,gBAAgBL,E,EAM5B,IAAMhB,EAAgBC,mBAAmBJ,GAEzC,IAAK,IAAIe,EAAI,EAAGA,EAAIZ,EAAcJ,OAAQgB,IAAK,CAC7CT,gBAAgBH,EAAcY,G,CAElC,EAMA,IAAMX,mBAAqB,SAACsB,GAC1B,OAAOA,EAAGC,UAAY,KAAOD,EAAGC,SAAWD,EAAGE,UAChD,EACA,IAAM3C,mBAAqB,WACzB,IAAI4C,EACJ,IAAMC,EAAMC,OACZ,IAAMC,GAAUH,EAAKC,IAAQ,MAAQA,SAAa,OAAS,EAAIA,EAAIG,SAAW,MAAQJ,SAAY,OAAS,EAAIA,EAAGG,OAClH,GAAIA,EAAQ,CACV,GAAIA,EAAOE,IAAK,CACd,OAAOF,EAAOE,IAAI,mBAAoB,K,KAEnC,CACH,OAAOF,EAAOG,mBAAqB,MAAQH,EAAOG,mBAAqBC,S,EAG3E,OAAO,IACT,EACA,IAAMf,kBAAoB,CAAC,QAAS,KAAM,OAAQ,MAAO,OAAQ,QACjE,IAAM5B,YAAc,CAAC,SAAU,QAAS,SAAU,OAAQ,OAAQ,SAAU,SACrE,IAAAV,gBAAA,WACL,SAAAA,EAAYC,GACVqD,KAAKrD,MAAQA,CACjB,CACA,OAAAD,CAAA,CAJO,U"}
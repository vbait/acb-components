{"version":3,"names":["iosEnterAnimation","baseEl","position","baseAnimation","createAnimation","wrapperAnimation","root","getElementRoot","wrapperEl","querySelector","bottom","top","addElement","fromTo","concat","topPosition","Math","floor","clientHeight","style","easing","duration","addAnimation","iosLeaveAnimation","mdEnterAnimation","mdLeaveAnimation","toastIosCss","toastMdCss","Toast","class_1","hostRef","_this","this","presented","config","getNumber","keyboardClose","translucent","animated","dispatchCancelHandler","ev","role","detail","isCancel","cancelButton","getButtons","find","b","callButtonHandler","prototype","connectedCallback","prepareOverlay","el","present","_a","sent","durationTimeout","setTimeout","dismiss","undefined","data","clearTimeout","onDidDismiss","eventMethod","onWillDismiss","buttons","map","text","buttonClick","button","shouldDismiss","Promise","resolve","handler","safeCall","rtn","console","error","e_1","renderButtons","side","length","mode","getIonMode","buttonGroupsClasses","h","class","type","buttonClass","tabIndex","onClick","part","icon","slot","render","allButtons","startButtons","filter","endButtons","wrapperClass","Host","Object","assign","tabindex","htmlAttributes","zIndex","overlayIndex","createColorClasses","color","_b","getClassMap","cssClass","onIonToastWillDismiss","lazy","header","message","innerHTML","sanitizeDOMString"],"sources":["node_modules/@ionic/core/dist/collection/components/toast/animations/ios.enter.js","node_modules/@ionic/core/dist/collection/components/toast/animations/ios.leave.js","node_modules/@ionic/core/dist/collection/components/toast/animations/md.enter.js","node_modules/@ionic/core/dist/collection/components/toast/animations/md.leave.js","node_modules/@ionic/core/dist/collection/components/toast/toast.ios.css?tag=ion-toast&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/toast/toast.md.css?tag=ion-toast&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/toast/toast.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from '../../../utils/animation/animation';\nimport { getElementRoot } from '../../../utils/helpers';\n/**\n * iOS Toast Enter Animation\n */\nexport const iosEnterAnimation = (baseEl, position) => {\n  const baseAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  const root = getElementRoot(baseEl);\n  const wrapperEl = root.querySelector('.toast-wrapper');\n  const bottom = `calc(-10px - var(--ion-safe-area-bottom, 0px))`;\n  const top = `calc(10px + var(--ion-safe-area-top, 0px))`;\n  wrapperAnimation.addElement(wrapperEl);\n  switch (position) {\n    case 'top':\n      wrapperAnimation.fromTo('transform', 'translateY(-100%)', `translateY(${top})`);\n      break;\n    case 'middle':\n      const topPosition = Math.floor(baseEl.clientHeight / 2 - wrapperEl.clientHeight / 2);\n      wrapperEl.style.top = `${topPosition}px`;\n      wrapperAnimation.fromTo('opacity', 0.01, 1);\n      break;\n    default:\n      wrapperAnimation.fromTo('transform', 'translateY(100%)', `translateY(${bottom})`);\n      break;\n  }\n  return baseAnimation.easing('cubic-bezier(.155,1.105,.295,1.12)').duration(400).addAnimation(wrapperAnimation);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from '../../../utils/animation/animation';\nimport { getElementRoot } from '../../../utils/helpers';\n/**\n * iOS Toast Leave Animation\n */\nexport const iosLeaveAnimation = (baseEl, position) => {\n  const baseAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  const root = getElementRoot(baseEl);\n  const wrapperEl = root.querySelector('.toast-wrapper');\n  const bottom = `calc(-10px - var(--ion-safe-area-bottom, 0px))`;\n  const top = `calc(10px + var(--ion-safe-area-top, 0px))`;\n  wrapperAnimation.addElement(wrapperEl);\n  switch (position) {\n    case 'top':\n      wrapperAnimation.fromTo('transform', `translateY(${top})`, 'translateY(-100%)');\n      break;\n    case 'middle':\n      wrapperAnimation.fromTo('opacity', 0.99, 0);\n      break;\n    default:\n      wrapperAnimation.fromTo('transform', `translateY(${bottom})`, 'translateY(100%)');\n      break;\n  }\n  return baseAnimation.easing('cubic-bezier(.36,.66,.04,1)').duration(300).addAnimation(wrapperAnimation);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from '../../../utils/animation/animation';\nimport { getElementRoot } from '../../../utils/helpers';\n/**\n * MD Toast Enter Animation\n */\nexport const mdEnterAnimation = (baseEl, position) => {\n  const baseAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  const root = getElementRoot(baseEl);\n  const wrapperEl = root.querySelector('.toast-wrapper');\n  const bottom = `calc(8px + var(--ion-safe-area-bottom, 0px))`;\n  const top = `calc(8px + var(--ion-safe-area-top, 0px))`;\n  wrapperAnimation.addElement(wrapperEl);\n  switch (position) {\n    case 'top':\n      wrapperEl.style.top = top;\n      wrapperAnimation.fromTo('opacity', 0.01, 1);\n      break;\n    case 'middle':\n      const topPosition = Math.floor(baseEl.clientHeight / 2 - wrapperEl.clientHeight / 2);\n      wrapperEl.style.top = `${topPosition}px`;\n      wrapperAnimation.fromTo('opacity', 0.01, 1);\n      break;\n    default:\n      wrapperEl.style.bottom = bottom;\n      wrapperAnimation.fromTo('opacity', 0.01, 1);\n      break;\n  }\n  return baseAnimation.easing('cubic-bezier(.36,.66,.04,1)').duration(400).addAnimation(wrapperAnimation);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from '../../../utils/animation/animation';\nimport { getElementRoot } from '../../../utils/helpers';\n/**\n * md Toast Leave Animation\n */\nexport const mdLeaveAnimation = (baseEl) => {\n  const baseAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  const root = getElementRoot(baseEl);\n  const wrapperEl = root.querySelector('.toast-wrapper');\n  wrapperAnimation.addElement(wrapperEl).fromTo('opacity', 0.99, 0);\n  return baseAnimation.easing('cubic-bezier(.36,.66,.04,1)').duration(300).addAnimation(wrapperAnimation);\n};\n",":host {\n  /**\n   * @prop --background: Background of the toast\n   * @prop --color: Color of the toast text\n   *\n   * @prop --border-color: Border color of the toast\n   * @prop --border-radius: Border radius of the toast\n   * @prop --border-width: Border width of the toast\n   * @prop --border-style: Border style of the toast\n   *\n   * @prop --white-space: White space of the toast message\n   *\n   * @prop --box-shadow: Box shadow of the toast\n   *\n   * @prop --min-width: Minimum width of the toast\n   * @prop --width: Width of the toast\n   * @prop --max-width: Maximum width of the toast\n   *\n   * @prop --min-height: Minimum height of the toast\n   * @prop --height: Height of the toast\n   * @prop --max-height: Maximum height of the toast\n   *\n   * @prop --button-color: Color of the button text\n   *\n   * @prop --start: Position from the left if direction is left-to-right, and from the right if direction is right-to-left\n   * @prop --end: Position from the right if direction is left-to-right, and from the left if direction is right-to-left\n   */\n  --border-width: 0;\n  --border-style: none;\n  --border-color: initial;\n  --box-shadow: none;\n  --min-width: auto;\n  --width: auto;\n  --min-height: auto;\n  --height: auto;\n  --max-height: auto;\n  --white-space: normal;\n  left: 0;\n  top: 0;\n  display: block;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  outline: none;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  contain: strict;\n  z-index: 1001;\n  pointer-events: none;\n}\n:host-context([dir=rtl]) {\n  left: unset;\n  right: unset;\n  right: 0;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n:host(.ion-color) {\n  --button-color: inherit;\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-color) .toast-button-cancel {\n  color: inherit;\n}\n\n:host(.ion-color) .toast-wrapper {\n  background: var(--ion-color-base);\n}\n\n.toast-wrapper {\n  border-radius: var(--border-radius);\n  left: var(--start);\n  right: var(--end);\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  background: var(--background);\n  box-shadow: var(--box-shadow);\n}\n[dir=rtl] .toast-wrapper, :host-context([dir=rtl]) .toast-wrapper {\n  left: unset;\n  right: unset;\n  left: var(--end);\n  right: var(--start);\n}\n\n.toast-container {\n  display: flex;\n  align-items: center;\n  pointer-events: auto;\n  height: inherit;\n  min-height: inherit;\n  max-height: inherit;\n  contain: content;\n}\n\n.toast-content {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.toast-icon {\n  margin-left: 16px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .toast-icon {\n    margin-left: unset;\n    -webkit-margin-start: 16px;\n    margin-inline-start: 16px;\n  }\n}\n\n.toast-message {\n  flex: 1;\n  white-space: var(--white-space);\n}\n\n.toast-button-group {\n  display: flex;\n}\n\n.toast-button {\n  border: 0;\n  outline: none;\n  color: var(--button-color);\n  z-index: 0;\n}\n\n.toast-icon,\n.toast-button-icon {\n  font-size: 1.4em;\n}\n\n.toast-button-inner {\n  display: flex;\n  align-items: center;\n}\n\n@media (any-hover: hover) {\n  .toast-button:hover {\n    cursor: pointer;\n  }\n}\n:host {\n  --background: var(--ion-color-step-50, #f2f2f2);\n  --border-radius: 14px;\n  --button-color: var(--ion-color-primary, #3880ff);\n  --color: var(--ion-color-step-850, #262626);\n  --max-width: 700px;\n  --start: 10px;\n  --end: 10px;\n  font-size: 14px;\n}\n\n.toast-wrapper {\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: auto;\n  margin-bottom: auto;\n  display: block;\n  position: absolute;\n  z-index: 10;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .toast-wrapper {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: auto;\n    margin-inline-start: auto;\n    -webkit-margin-end: auto;\n    margin-inline-end: auto;\n  }\n}\n\n@supports (backdrop-filter: blur(0)) {\n  :host(.toast-translucent) .toast-wrapper {\n    background: rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8);\n    backdrop-filter: saturate(180%) blur(20px);\n  }\n}\n.toast-wrapper.toast-top {\n  transform: translate3d(0,  -100%,  0);\n  top: 0;\n}\n\n.toast-wrapper.toast-middle {\n  opacity: 0.01;\n}\n\n.toast-wrapper.toast-bottom {\n  transform: translate3d(0,  100%,  0);\n  bottom: 0;\n}\n\n.toast-content {\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-top: 15px;\n  padding-bottom: 15px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .toast-content {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 15px;\n    padding-inline-start: 15px;\n    -webkit-padding-end: 15px;\n    padding-inline-end: 15px;\n  }\n}\n\n.toast-header {\n  margin-bottom: 2px;\n  font-weight: 500;\n}\n\n.toast-button {\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  height: 44px;\n  transition: background-color, opacity 100ms linear;\n  border: 0;\n  background-color: transparent;\n  font-family: var(--ion-font-family);\n  font-size: 17px;\n  font-weight: 500;\n  overflow: hidden;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .toast-button {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 15px;\n    padding-inline-start: 15px;\n    -webkit-padding-end: 15px;\n    padding-inline-end: 15px;\n  }\n}\n\n.toast-button.ion-activated {\n  opacity: 0.4;\n}\n\n@media (any-hover: hover) {\n  .toast-button:hover {\n    opacity: 0.6;\n  }\n}",":host {\n  /**\n   * @prop --background: Background of the toast\n   * @prop --color: Color of the toast text\n   *\n   * @prop --border-color: Border color of the toast\n   * @prop --border-radius: Border radius of the toast\n   * @prop --border-width: Border width of the toast\n   * @prop --border-style: Border style of the toast\n   *\n   * @prop --white-space: White space of the toast message\n   *\n   * @prop --box-shadow: Box shadow of the toast\n   *\n   * @prop --min-width: Minimum width of the toast\n   * @prop --width: Width of the toast\n   * @prop --max-width: Maximum width of the toast\n   *\n   * @prop --min-height: Minimum height of the toast\n   * @prop --height: Height of the toast\n   * @prop --max-height: Maximum height of the toast\n   *\n   * @prop --button-color: Color of the button text\n   *\n   * @prop --start: Position from the left if direction is left-to-right, and from the right if direction is right-to-left\n   * @prop --end: Position from the right if direction is left-to-right, and from the left if direction is right-to-left\n   */\n  --border-width: 0;\n  --border-style: none;\n  --border-color: initial;\n  --box-shadow: none;\n  --min-width: auto;\n  --width: auto;\n  --min-height: auto;\n  --height: auto;\n  --max-height: auto;\n  --white-space: normal;\n  left: 0;\n  top: 0;\n  display: block;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  outline: none;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  contain: strict;\n  z-index: 1001;\n  pointer-events: none;\n}\n:host-context([dir=rtl]) {\n  left: unset;\n  right: unset;\n  right: 0;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n:host(.ion-color) {\n  --button-color: inherit;\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-color) .toast-button-cancel {\n  color: inherit;\n}\n\n:host(.ion-color) .toast-wrapper {\n  background: var(--ion-color-base);\n}\n\n.toast-wrapper {\n  border-radius: var(--border-radius);\n  left: var(--start);\n  right: var(--end);\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  background: var(--background);\n  box-shadow: var(--box-shadow);\n}\n[dir=rtl] .toast-wrapper, :host-context([dir=rtl]) .toast-wrapper {\n  left: unset;\n  right: unset;\n  left: var(--end);\n  right: var(--start);\n}\n\n.toast-container {\n  display: flex;\n  align-items: center;\n  pointer-events: auto;\n  height: inherit;\n  min-height: inherit;\n  max-height: inherit;\n  contain: content;\n}\n\n.toast-content {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.toast-icon {\n  margin-left: 16px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .toast-icon {\n    margin-left: unset;\n    -webkit-margin-start: 16px;\n    margin-inline-start: 16px;\n  }\n}\n\n.toast-message {\n  flex: 1;\n  white-space: var(--white-space);\n}\n\n.toast-button-group {\n  display: flex;\n}\n\n.toast-button {\n  border: 0;\n  outline: none;\n  color: var(--button-color);\n  z-index: 0;\n}\n\n.toast-icon,\n.toast-button-icon {\n  font-size: 1.4em;\n}\n\n.toast-button-inner {\n  display: flex;\n  align-items: center;\n}\n\n@media (any-hover: hover) {\n  .toast-button:hover {\n    cursor: pointer;\n  }\n}\n:host {\n  --background: var(--ion-color-step-800, #333333);\n  --border-radius: 4px;\n  --box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2), 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12);\n  --button-color: var(--ion-color-primary, #3880ff);\n  --color: var(--ion-color-step-50, #f2f2f2);\n  --max-width: 700px;\n  --start: 8px;\n  --end: 8px;\n  font-size: 14px;\n}\n\n.toast-wrapper {\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: auto;\n  margin-bottom: auto;\n  display: block;\n  position: absolute;\n  opacity: 0.01;\n  z-index: 10;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .toast-wrapper {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: auto;\n    margin-inline-start: auto;\n    -webkit-margin-end: auto;\n    margin-inline-end: auto;\n  }\n}\n\n.toast-content {\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .toast-content {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 16px;\n    padding-inline-start: 16px;\n    -webkit-padding-end: 16px;\n    padding-inline-end: 16px;\n  }\n}\n\n.toast-header {\n  margin-bottom: 2px;\n  font-weight: 500;\n  line-height: 20px;\n}\n\n.toast-message {\n  line-height: 20px;\n}\n\n.toast-button-group-start {\n  margin-left: 8px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .toast-button-group-start {\n    margin-left: unset;\n    -webkit-margin-start: 8px;\n    margin-inline-start: 8px;\n  }\n}\n\n.toast-button-group-end {\n  margin-right: 8px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .toast-button-group-end {\n    margin-right: unset;\n    -webkit-margin-end: 8px;\n    margin-inline-end: 8px;\n  }\n}\n\n.toast-button {\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  position: relative;\n  background-color: transparent;\n  font-family: var(--ion-font-family);\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: 0.84px;\n  text-transform: uppercase;\n  overflow: hidden;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .toast-button {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 15px;\n    padding-inline-start: 15px;\n    -webkit-padding-end: 15px;\n    padding-inline-end: 15px;\n  }\n}\n\n.toast-button-cancel {\n  color: var(--ion-color-step-100, #e6e6e6);\n}\n\n.toast-button-icon-only {\n  border-radius: 50%;\n  padding-left: 9px;\n  padding-right: 9px;\n  padding-top: 9px;\n  padding-bottom: 9px;\n  width: 36px;\n  height: 36px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .toast-button-icon-only {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 9px;\n    padding-inline-start: 9px;\n    -webkit-padding-end: 9px;\n    padding-inline-end: 9px;\n  }\n}\n\n@media (any-hover: hover) {\n  .toast-button:hover {\n    background-color: rgba(var(--ion-color-primary-rgb, 56, 128, 255), 0.08);\n  }\n\n  .toast-button-cancel:hover {\n    background-color: rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.08);\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { h, Host } from '@stencil/core';\nimport { config } from '../../global/config';\nimport { getIonMode } from '../../global/ionic-global';\nimport { dismiss, eventMethod, isCancel, prepareOverlay, present, safeCall } from '../../utils/overlays';\nimport { sanitizeDOMString } from '../../utils/sanitization';\nimport { createColorClasses, getClassMap } from '../../utils/theme';\nimport { iosEnterAnimation } from './animations/ios.enter';\nimport { iosLeaveAnimation } from './animations/ios.leave';\nimport { mdEnterAnimation } from './animations/md.enter';\nimport { mdLeaveAnimation } from './animations/md.leave';\n// TODO(FW-2832): types\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part button - Any button element that is displayed inside of the toast.\n * @part container - The element that wraps all child elements.\n * @part header - The header text of the toast.\n * @part message - The body text of the toast.\n * @part icon - The icon that appears next to the toast content.\n */\nexport class Toast {\n  constructor() {\n    this.presented = false;\n    /**\n     * How many milliseconds to wait before hiding the toast. By default, it will show\n     * until `dismiss()` is called.\n     */\n    this.duration = config.getNumber('toastDuration', 0);\n    /**\n     * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\n     */\n    this.keyboardClose = false;\n    /**\n     * The position of the toast on the screen.\n     */\n    this.position = 'bottom';\n    /**\n     * If `true`, the toast will be translucent.\n     * Only applies when the mode is `\"ios\"` and the device supports\n     * [`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\n     */\n    this.translucent = false;\n    /**\n     * If `true`, the toast will animate.\n     */\n    this.animated = true;\n    this.dispatchCancelHandler = (ev) => {\n      const role = ev.detail.role;\n      if (isCancel(role)) {\n        const cancelButton = this.getButtons().find((b) => b.role === 'cancel');\n        this.callButtonHandler(cancelButton);\n      }\n    };\n  }\n  connectedCallback() {\n    prepareOverlay(this.el);\n  }\n  /**\n   * Present the toast overlay after it has been created.\n   */\n  async present() {\n    await present(this, 'toastEnter', iosEnterAnimation, mdEnterAnimation, this.position);\n    if (this.duration > 0) {\n      this.durationTimeout = setTimeout(() => this.dismiss(undefined, 'timeout'), this.duration);\n    }\n  }\n  /**\n   * Dismiss the toast overlay after it has been presented.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the toast.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the toast.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   */\n  dismiss(data, role) {\n    if (this.durationTimeout) {\n      clearTimeout(this.durationTimeout);\n    }\n    return dismiss(this, data, role, 'toastLeave', iosLeaveAnimation, mdLeaveAnimation, this.position);\n  }\n  /**\n   * Returns a promise that resolves when the toast did dismiss.\n   */\n  onDidDismiss() {\n    return eventMethod(this.el, 'ionToastDidDismiss');\n  }\n  /**\n   * Returns a promise that resolves when the toast will dismiss.\n   */\n  onWillDismiss() {\n    return eventMethod(this.el, 'ionToastWillDismiss');\n  }\n  getButtons() {\n    const buttons = this.buttons\n      ? this.buttons.map((b) => {\n        return typeof b === 'string' ? { text: b } : b;\n      })\n      : [];\n    return buttons;\n  }\n  async buttonClick(button) {\n    const role = button.role;\n    if (isCancel(role)) {\n      return this.dismiss(undefined, role);\n    }\n    const shouldDismiss = await this.callButtonHandler(button);\n    if (shouldDismiss) {\n      return this.dismiss(undefined, role);\n    }\n    return Promise.resolve();\n  }\n  async callButtonHandler(button) {\n    if (button === null || button === void 0 ? void 0 : button.handler) {\n      // a handler has been provided, execute it\n      // pass the handler the values from the inputs\n      try {\n        const rtn = await safeCall(button.handler);\n        if (rtn === false) {\n          // if the return value of the handler is false then do not dismiss\n          return false;\n        }\n      }\n      catch (e) {\n        console.error(e);\n      }\n    }\n    return true;\n  }\n  renderButtons(buttons, side) {\n    if (buttons.length === 0) {\n      return;\n    }\n    const mode = getIonMode(this);\n    const buttonGroupsClasses = {\n      'toast-button-group': true,\n      [`toast-button-group-${side}`]: true,\n    };\n    return (h(\"div\", { class: buttonGroupsClasses }, buttons.map((b) => (h(\"button\", { type: \"button\", class: buttonClass(b), tabIndex: 0, onClick: () => this.buttonClick(b), part: \"button\" }, h(\"div\", { class: \"toast-button-inner\" }, b.icon && (h(\"ion-icon\", { icon: b.icon, slot: b.text === undefined ? 'icon-only' : undefined, class: \"toast-button-icon\" })), b.text), mode === 'md' && (h(\"ion-ripple-effect\", { type: b.icon !== undefined && b.text === undefined ? 'unbounded' : 'bounded' })))))));\n  }\n  render() {\n    const allButtons = this.getButtons();\n    const startButtons = allButtons.filter((b) => b.side === 'start');\n    const endButtons = allButtons.filter((b) => b.side !== 'start');\n    const mode = getIonMode(this);\n    const wrapperClass = {\n      'toast-wrapper': true,\n      [`toast-${this.position}`]: true,\n    };\n    const role = allButtons.length > 0 ? 'dialog' : 'status';\n    return (h(Host, Object.assign({ \"aria-live\": \"polite\", \"aria-atomic\": \"true\", role: role, tabindex: \"-1\" }, this.htmlAttributes, { style: {\n        zIndex: `${60000 + this.overlayIndex}`,\n      }, class: createColorClasses(this.color, Object.assign(Object.assign({ [mode]: true }, getClassMap(this.cssClass)), { 'overlay-hidden': true, 'toast-translucent': this.translucent })), onIonToastWillDismiss: this.dispatchCancelHandler }), h(\"div\", { class: wrapperClass }, h(\"div\", { class: \"toast-container\", part: \"container\" }, this.renderButtons(startButtons, 'start'), this.icon !== undefined && (h(\"ion-icon\", { class: \"toast-icon\", part: \"icon\", icon: this.icon, lazy: false, \"aria-hidden\": \"true\" })), h(\"div\", { class: \"toast-content\" }, this.header !== undefined && (h(\"div\", { class: \"toast-header\", part: \"header\" }, this.header)), this.message !== undefined && (h(\"div\", { class: \"toast-message\", part: \"message\", innerHTML: sanitizeDOMString(this.message) }))), this.renderButtons(endButtons, 'end')))));\n  }\n  static get is() { return \"ion-toast\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"toast.ios.scss\"],\n      \"md\": [\"toast.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"toast.ios.css\"],\n      \"md\": [\"toast.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"overlayIndex\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": true,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"\"\n        },\n        \"attribute\": \"overlay-index\",\n        \"reflect\": false\n      },\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": true\n      },\n      \"enterAnimation\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"AnimationBuilder\",\n          \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n          \"references\": {\n            \"AnimationBuilder\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Animation to use when the toast is presented.\"\n        }\n      },\n      \"leaveAnimation\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"AnimationBuilder\",\n          \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n          \"references\": {\n            \"AnimationBuilder\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Animation to use when the toast is dismissed.\"\n        }\n      },\n      \"cssClass\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | string[]\",\n          \"resolved\": \"string | string[] | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Additional classes to apply for custom CSS. If multiple classes are\\nprovided they should be separated by spaces.\"\n        },\n        \"attribute\": \"css-class\",\n        \"reflect\": false\n      },\n      \"duration\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"How many milliseconds to wait before hiding the toast. By default, it will show\\nuntil `dismiss()` is called.\"\n        },\n        \"attribute\": \"duration\",\n        \"reflect\": false,\n        \"defaultValue\": \"config.getNumber('toastDuration', 0)\"\n      },\n      \"header\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Header to be shown in the toast.\"\n        },\n        \"attribute\": \"header\",\n        \"reflect\": false\n      },\n      \"message\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | IonicSafeString\",\n          \"resolved\": \"IonicSafeString | string | undefined\",\n          \"references\": {\n            \"IonicSafeString\": {\n              \"location\": \"import\",\n              \"path\": \"../../utils/sanitization\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Message to be shown in the toast.\"\n        },\n        \"attribute\": \"message\",\n        \"reflect\": false\n      },\n      \"keyboardClose\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the keyboard will be automatically dismissed when the overlay is presented.\"\n        },\n        \"attribute\": \"keyboard-close\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"position\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"ToastPosition\",\n          \"resolved\": \"\\\"bottom\\\" | \\\"middle\\\" | \\\"top\\\"\",\n          \"references\": {\n            \"ToastPosition\": {\n              \"location\": \"import\",\n              \"path\": \"./toast-interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The position of the toast on the screen.\"\n        },\n        \"attribute\": \"position\",\n        \"reflect\": false,\n        \"defaultValue\": \"'bottom'\"\n      },\n      \"buttons\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"(ToastButton | string)[]\",\n          \"resolved\": \"(string | ToastButton)[] | undefined\",\n          \"references\": {\n            \"ToastButton\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"An array of buttons for the toast.\"\n        }\n      },\n      \"translucent\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the toast will be translucent.\\nOnly applies when the mode is `\\\"ios\\\"` and the device supports\\n[`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\"\n        },\n        \"attribute\": \"translucent\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"animated\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the toast will animate.\"\n        },\n        \"attribute\": \"animated\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"icon\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The name of the icon to display, or the path to a valid SVG file. See `ion-icon`.\\nhttps://ionic.io/ionicons\"\n        },\n        \"attribute\": \"icon\",\n        \"reflect\": false\n      },\n      \"htmlAttributes\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"ToastAttributes\",\n          \"resolved\": \"undefined | { [key: string]: any; }\",\n          \"references\": {\n            \"ToastAttributes\": {\n              \"location\": \"import\",\n              \"path\": \"./toast-interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Additional attributes to pass to the toast.\"\n        }\n      }\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"didPresent\",\n        \"name\": \"ionToastDidPresent\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted after the toast has presented.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"willPresent\",\n        \"name\": \"ionToastWillPresent\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted before the toast has presented.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"willDismiss\",\n        \"name\": \"ionToastWillDismiss\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted before the toast has dismissed.\"\n        },\n        \"complexType\": {\n          \"original\": \"OverlayEventDetail\",\n          \"resolved\": \"OverlayEventDetail<any>\",\n          \"references\": {\n            \"OverlayEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        }\n      }, {\n        \"method\": \"didDismiss\",\n        \"name\": \"ionToastDidDismiss\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted after the toast has dismissed.\"\n        },\n        \"complexType\": {\n          \"original\": \"OverlayEventDetail\",\n          \"resolved\": \"OverlayEventDetail<any>\",\n          \"references\": {\n            \"OverlayEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"present\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"ToastPresentOptions\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Present the toast overlay after it has been created.\",\n          \"tags\": []\n        }\n      },\n      \"dismiss\": {\n        \"complexType\": {\n          \"signature\": \"(data?: any, role?: string) => Promise<boolean>\",\n          \"parameters\": [{\n              \"tags\": [{\n                  \"name\": \"param\",\n                  \"text\": \"data Any data to emit in the dismiss events.\"\n                }],\n              \"text\": \"Any data to emit in the dismiss events.\"\n            }, {\n              \"tags\": [{\n                  \"name\": \"param\",\n                  \"text\": \"role The role of the element that is dismissing the toast.\\nThis can be useful in a button handler for determining which button was\\nclicked to dismiss the toast.\\nSome examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\"\n                }],\n              \"text\": \"The role of the element that is dismissing the toast.\\nThis can be useful in a button handler for determining which button was\\nclicked to dismiss the toast.\\nSome examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"ToastDismissOptions\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Dismiss the toast overlay after it has been presented.\",\n          \"tags\": [{\n              \"name\": \"param\",\n              \"text\": \"data Any data to emit in the dismiss events.\"\n            }, {\n              \"name\": \"param\",\n              \"text\": \"role The role of the element that is dismissing the toast.\\nThis can be useful in a button handler for determining which button was\\nclicked to dismiss the toast.\\nSome examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\"\n            }]\n        }\n      },\n      \"onDidDismiss\": {\n        \"complexType\": {\n          \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"OverlayEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            },\n            \"T\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<OverlayEventDetail<T>>\"\n        },\n        \"docs\": {\n          \"text\": \"Returns a promise that resolves when the toast did dismiss.\",\n          \"tags\": []\n        }\n      },\n      \"onWillDismiss\": {\n        \"complexType\": {\n          \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"OverlayEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            },\n            \"T\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<OverlayEventDetail<T>>\"\n        },\n        \"docs\": {\n          \"text\": \"Returns a promise that resolves when the toast will dismiss.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n}\nconst buttonClass = (button) => {\n  return Object.assign({ 'toast-button': true, 'toast-button-icon-only': button.icon !== undefined && button.text === undefined, [`toast-button-${button.role}`]: button.role !== undefined, 'ion-focusable': true, 'ion-activatable': true }, getClassMap(button.cssClass));\n};\n"],"mappings":"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"}
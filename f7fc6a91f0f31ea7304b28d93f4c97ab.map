{"version":3,"names":["appCss","App","class_1","prototype","componentDidLoad","_this","this","rIC","__awaiter","isHybrid","isPlatform","window","config","getBoolean","import","then","module","startTapClick","startStatusTap","needInputShims","platform_1","startInputShims","hardwareBackButtonModule","_a","sent","startHardwareBackButton","blockHardwareBackButton","startKeyboardAssist","focusVisible","startFocusVisible","setFocus","elements","render","mode","getIonMode","h","Host","class","needsShimsIOS","isAndroidMobileWeb","callback","requestIdleCallback","setTimeout"],"sources":["node_modules/@ionic/core/dist/collection/components/app/app.css?tag=ion-app","node_modules/@ionic/core/dist/collection/components/app/app.js"],"sourcesContent":["html.plt-mobile ion-app {\n  user-select: none;\n}\n\n/**\n * This works around a WebKit issue\n * where user-select: none was causing\n * contenteditable to not be selectable,\n * even though inputs and textareas are selectable.\n */\nhtml.plt-mobile ion-app [contenteditable] {\n  user-select: text;\n}\n\nion-app.force-statusbar-padding {\n  --ion-safe-area-top: 20px;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Build, Host, h } from '@stencil/core';\nimport { config } from '../../global/config';\nimport { getIonMode } from '../../global/ionic-global';\nimport { isPlatform } from '../../utils/platform';\nexport class App {\n  componentDidLoad() {\n    if (Build.isBrowser) {\n      rIC(async () => {\n        const isHybrid = isPlatform(window, 'hybrid');\n        if (!config.getBoolean('_testing')) {\n          import('../../utils/tap-click').then((module) => module.startTapClick(config));\n        }\n        if (config.getBoolean('statusTap', isHybrid)) {\n          import('../../utils/status-tap').then((module) => module.startStatusTap());\n        }\n        if (config.getBoolean('inputShims', needInputShims())) {\n          /**\n           * needInputShims() ensures that only iOS and Android\n           * platforms proceed into this block.\n           */\n          const platform = isPlatform(window, 'ios') ? 'ios' : 'android';\n          import('../../utils/input-shims/input-shims').then((module) => module.startInputShims(config, platform));\n        }\n        const hardwareBackButtonModule = await import('../../utils/hardware-back-button');\n        if (config.getBoolean('hardwareBackButton', isHybrid)) {\n          hardwareBackButtonModule.startHardwareBackButton();\n        }\n        else {\n          hardwareBackButtonModule.blockHardwareBackButton();\n        }\n        if (typeof window !== 'undefined') {\n          import('../../utils/keyboard/keyboard').then((module) => module.startKeyboardAssist(window));\n        }\n        import('../../utils/focus-visible').then((module) => (this.focusVisible = module.startFocusVisible()));\n      });\n    }\n  }\n  /**\n   * @internal\n   * Used to set focus on an element that uses `ion-focusable`.\n   * Do not use this if focusing the element as a result of a keyboard\n   * event as the focus utility should handle this for us. This method\n   * should be used when we want to programmatically focus an element as\n   * a result of another user action. (Ex: We focus the first element\n   * inside of a popover when the user presents it, but the popover is not always\n   * presented as a result of keyboard action.)\n   */\n  async setFocus(elements) {\n    if (this.focusVisible) {\n      this.focusVisible.setFocus(elements);\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'ion-page': true,\n        'force-statusbar-padding': config.getBoolean('_forceStatusbarPadding'),\n      } }));\n  }\n  static get is() { return \"ion-app\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"app.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"app.css\"]\n    };\n  }\n  static get methods() {\n    return {\n      \"setFocus\": {\n        \"complexType\": {\n          \"signature\": \"(elements: HTMLElement[]) => Promise<void>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"HTMLElement\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"\",\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": \"Used to set focus on an element that uses `ion-focusable`.\\nDo not use this if focusing the element as a result of a keyboard\\nevent as the focus utility should handle this for us. This method\\nshould be used when we want to programmatically focus an element as\\na result of another user action. (Ex: We focus the first element\\ninside of a popover when the user presents it, but the popover is not always\\npresented as a result of keyboard action.)\"\n            }]\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n}\nconst needInputShims = () => {\n  /**\n   * iOS always needs input shims\n   */\n  const needsShimsIOS = isPlatform(window, 'ios') && isPlatform(window, 'mobile');\n  if (needsShimsIOS) {\n    return true;\n  }\n  /**\n   * Android only needs input shims when running\n   * in the browser and only if the browser is using the\n   * new Chrome 108+ resize behavior: https://developer.chrome.com/blog/viewport-resize-behavior/\n   */\n  const isAndroidMobileWeb = isPlatform(window, 'android') && isPlatform(window, 'mobileweb');\n  if (isAndroidMobileWeb) {\n    return true;\n  }\n  return false;\n};\nconst rIC = (callback) => {\n  if ('requestIdleCallback' in window) {\n    window.requestIdleCallback(callback);\n  }\n  else {\n    setTimeout(callback, 32);\n  }\n};\n"],"mappings":"qnDAAA,IAAMA,OAAS,wS,ICOFC,IAAG,W,uCACdC,EAAAC,UAAAC,iBAAA,eAAAC,EAAAC,KACuB,CACnBC,KAAI,kBAAAC,UAAAH,OAAA,qB,iFACII,EAAWC,WAAWC,OAAQ,UACpC,IAAKC,OAAOC,WAAW,YAAa,CAClCC,OAAO,uBAAyBC,MAAK,SAACC,GAAW,OAAAA,EAAOC,cAAcL,OAArB,G,CAEnD,GAAIA,OAAOC,WAAW,YAAaJ,GAAW,CAC5CK,OAAO,4BAA0BC,MAAK,SAACC,GAAW,OAAAA,EAAOE,gBAAP,G,CAEpD,GAAIN,OAAOC,WAAW,aAAcM,kBAAmB,CAK/CC,EAAWV,WAAWC,OAAQ,OAAS,MAAQ,UACrDG,OAAO,6BAAuCC,MAAK,SAACC,GAAW,OAAAA,EAAOK,gBAAgBT,OAAQQ,EAA/B,G,CAEhC,SAAMN,OAAO,uC,OAAxCQ,EAA2BC,EAAAC,OACjC,GAAIZ,OAAOC,WAAW,qBAAsBJ,GAAW,CACrDa,EAAyBG,yB,KAEtB,CACHH,EAAyBI,yB,CAE3B,UAAWf,SAAW,YAAa,CACjCG,OAAO,0BAAiCC,MAAK,SAACC,GAAW,OAAAA,EAAOW,oBAAoBhB,OAA3B,G,CAE3DG,OAAO,+BAA6BC,MAAK,SAACC,GAAM,OAAMX,EAAKuB,aAAeZ,EAAOa,mBAAjC,I,sBAchD3B,EAAAC,UAAA2B,SAAN,SAAeC,G,qFACb,GAAIzB,KAAKsB,aAAc,CACrBtB,KAAKsB,aAAaE,SAASC,E,kBAG/B7B,EAAAC,UAAA6B,OAAA,W,MACE,IAAMC,EAAOC,WAAW5B,MACxB,OAAQ6B,EAAEC,KAAM,CAAEC,OAAKd,EAAA,GACnBA,EAACU,GAAO,KACRV,EAAA,YAAY,KACZA,EAAA,2BAA2BX,OAAOC,WAAW,0B,oIArDrC,GAkGhB,IAAMM,eAAiB,WAIrB,IAAMmB,EAAgB5B,WAAWC,OAAQ,QAAUD,WAAWC,OAAQ,UACtE,GAAI2B,EAAe,CACjB,OAAO,I,CAOT,IAAMC,EAAqB7B,WAAWC,OAAQ,YAAcD,WAAWC,OAAQ,aAC/E,GAAI4B,EAAoB,CACtB,OAAO,I,CAET,OAAO,KACT,EACA,IAAMhC,IAAM,SAACiC,GACX,GAAI,wBAAyB7B,OAAQ,CACnCA,OAAO8B,oBAAoBD,E,KAExB,CACHE,WAAWF,EAAU,G,CAEzB,E"}
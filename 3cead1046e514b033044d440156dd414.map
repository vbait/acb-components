{"version":3,"names":["menuIosCss","menuMdCss","iosEasing","mdEasing","iosEasingReverse","mdEasingReverse","focusableQueryString","Menu","class_1","hostRef","_this","this","lastOnEnd","blocker","GESTURE_CONTROLLER","createBlocker","disableScroll","isAnimating","_isOpen","inheritedAttributes","handleFocus","ev","lastOverlay","getOverlay","document","contains","el","trapKeyboardFocus","isPaneVisible","isEndSide","disabled","side","swipeGesture","maxEdgeStart","prototype","typeChanged","type","oldType","contentEl","undefined","classList","remove","concat","add","removeAttribute","menuInnerEl","animation","disabledChanged","updateState","ionMenuChange","emit","open","sideChanged","isEnd","swipeGestureChanged","connectedCallback","customElements","whenDefined","_c","sent","config","get","content","contentId","getElementById","console","error","menuController","_register","_b","import","gesture","createGesture","gestureName","gesturePriority","threshold","blurOnStart","canStart","onWillStart","onStart","onMove","onEnd","componentWillLoad","inheritAriaAttributes","componentDidLoad","disconnectedCallback","destroy","_unregister","backdropEl","onSplitPaneChanged","detail","isPane","onBackdropClick","timeStamp","shouldClose","composedPath","includes","preventDefault","stopPropagation","close","onKeydown","key","isOpen","Promise","resolve","isActive","_isActive","animated","setOpen","toggle","shouldOpen","_setOpen","focusFirstDescendant","firstInput","querySelector","focus","focusLastDescendant","inputs","Array","from","querySelectorAll","lastInput","length","doc","target","lastFocus","activeElement","beforeAnimation","loadAnimation","startAnimation","afterAnimation","width","offsetWidth","_createAnimation","getBoolean","duration","fill","isReversed","mode","getIonMode","easing","easingReverse","ani","direction","onFinish","getDirection","play","sync","canSwipe","isModalPresented","_getOpenSync","checkEdgeSide","window","currentX","assert","progressStart","delta","computeDelta","deltaX","stepValue","progressStep","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","currentTime","newStepValue","adjustedStepValue","getTimeGivenProgression","clamp","playTo","oneTimeCallback","progressEnd","SHOW_MENU","setAttribute","SHOW_BACKDROP","block","ionWillOpen","ionWillClose","_a","unblock","MENU_CONTENT_OPEN","ionDidOpen","focusedMenu","closest","addEventListener","stop","ionDidClose","removeEventListener","enable","forceClosing","_setActiveMenu","render","h","Host","role","class","part","ref","tappable","Math","max","win","posX","innerWidth"],"sources":["node_modules/@ionic/core/dist/collection/components/menu/menu.ios.css?tag=ion-menu&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu/menu.md.css?tag=ion-menu&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu/menu.js"],"sourcesContent":[":host {\n  /**\n   * @prop --background: Background of the menu\n   *\n   * @prop --min-width: Minimum width of the menu\n   * @prop --width: Width of the menu\n   * @prop --max-width: Maximum width of the menu\n   *\n   * @prop --min-height: Minimum height of the menu\n   * @prop --height: Height of the menu\n   * @prop --max-height: Maximum height of the menu\n   */\n  --width: 304px;\n  --min-width: auto;\n  --max-width: auto;\n  --height: 100%;\n  --min-height: auto;\n  --max-height: auto;\n  --background: var(--ion-background-color, #fff);\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: none;\n  position: absolute;\n  contain: strict;\n}\n\n:host(.show-menu) {\n  display: block;\n}\n\n.menu-inner {\n  left: 0;\n  right: auto;\n  top: 0;\n  bottom: 0;\n  transform: translateX(-9999px);\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  justify-content: space-between;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  contain: strict;\n}\n[dir=rtl] .menu-inner, :host-context([dir=rtl]) .menu-inner {\n  left: unset;\n  right: unset;\n  left: auto;\n  right: 0;\n}\n\n:host(.menu-side-start) .menu-inner {\n  --ion-safe-area-right: 0px;\n  /* stylelint-disable property-disallowed-list */\n  right: auto;\n  left: 0;\n}\n\n:host(.menu-side-end) .menu-inner {\n  --ion-safe-area-left: 0px;\n  right: 0;\n  left: auto;\n  /* stylelint-enable property-disallowed-list */\n}\n\nion-backdrop {\n  display: none;\n  opacity: 0.01;\n  z-index: -1;\n}\n\n@media (max-width: 340px) {\n  .menu-inner {\n    --width: 264px;\n  }\n}\n:host(.menu-type-reveal) {\n  z-index: 0;\n}\n\n:host(.menu-type-reveal.show-menu) .menu-inner {\n  transform: translate3d(0,  0,  0);\n}\n\n:host(.menu-type-overlay) {\n  z-index: 1000;\n}\n\n:host(.menu-type-overlay) .show-backdrop {\n  display: block;\n  cursor: pointer;\n}\n\n:host(.menu-pane-visible) {\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n}\n\n:host(.menu-pane-visible) .menu-inner {\n  left: 0;\n  right: 0;\n  width: auto;\n  /* stylelint-disable declaration-no-important */\n  transform: none !important;\n  box-shadow: none !important;\n}\n\n:host(.menu-pane-visible) ion-backdrop {\n  display: hidden !important;\n  /* stylelint-enable declaration-no-important */\n}\n\n:host(.menu-type-push) {\n  z-index: 1000;\n}\n\n:host(.menu-type-push) .show-backdrop {\n  display: block;\n}",":host {\n  /**\n   * @prop --background: Background of the menu\n   *\n   * @prop --min-width: Minimum width of the menu\n   * @prop --width: Width of the menu\n   * @prop --max-width: Maximum width of the menu\n   *\n   * @prop --min-height: Minimum height of the menu\n   * @prop --height: Height of the menu\n   * @prop --max-height: Maximum height of the menu\n   */\n  --width: 304px;\n  --min-width: auto;\n  --max-width: auto;\n  --height: 100%;\n  --min-height: auto;\n  --max-height: auto;\n  --background: var(--ion-background-color, #fff);\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: none;\n  position: absolute;\n  contain: strict;\n}\n\n:host(.show-menu) {\n  display: block;\n}\n\n.menu-inner {\n  left: 0;\n  right: auto;\n  top: 0;\n  bottom: 0;\n  transform: translateX(-9999px);\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  justify-content: space-between;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  contain: strict;\n}\n[dir=rtl] .menu-inner, :host-context([dir=rtl]) .menu-inner {\n  left: unset;\n  right: unset;\n  left: auto;\n  right: 0;\n}\n\n:host(.menu-side-start) .menu-inner {\n  --ion-safe-area-right: 0px;\n  /* stylelint-disable property-disallowed-list */\n  right: auto;\n  left: 0;\n}\n\n:host(.menu-side-end) .menu-inner {\n  --ion-safe-area-left: 0px;\n  right: 0;\n  left: auto;\n  /* stylelint-enable property-disallowed-list */\n}\n\nion-backdrop {\n  display: none;\n  opacity: 0.01;\n  z-index: -1;\n}\n\n@media (max-width: 340px) {\n  .menu-inner {\n    --width: 264px;\n  }\n}\n:host(.menu-type-reveal) {\n  z-index: 0;\n}\n\n:host(.menu-type-reveal.show-menu) .menu-inner {\n  transform: translate3d(0,  0,  0);\n}\n\n:host(.menu-type-overlay) {\n  z-index: 1000;\n}\n\n:host(.menu-type-overlay) .show-backdrop {\n  display: block;\n  cursor: pointer;\n}\n\n:host(.menu-pane-visible) {\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n}\n\n:host(.menu-pane-visible) .menu-inner {\n  left: 0;\n  right: 0;\n  width: auto;\n  /* stylelint-disable declaration-no-important */\n  transform: none !important;\n  box-shadow: none !important;\n}\n\n:host(.menu-pane-visible) ion-backdrop {\n  display: hidden !important;\n  /* stylelint-enable declaration-no-important */\n}\n\n:host(.menu-type-overlay) .menu-inner {\n  box-shadow: 4px 0px 16px rgba(0, 0, 0, 0.18);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Build, Host, h } from '@stencil/core';\nimport { config } from '../../global/config';\nimport { getIonMode } from '../../global/ionic-global';\nimport { getTimeGivenProgression } from '../../utils/animation/cubic-bezier';\nimport { GESTURE_CONTROLLER } from '../../utils/gesture';\nimport { inheritAriaAttributes, assert, clamp, isEndSide as isEnd } from '../../utils/helpers';\nimport { menuController } from '../../utils/menu-controller';\nimport { getOverlay } from '../../utils/overlays';\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst focusableQueryString = '[tabindex]:not([tabindex^=\"-\"]), input:not([type=hidden]):not([tabindex^=\"-\"]), textarea:not([tabindex^=\"-\"]), button:not([tabindex^=\"-\"]), select:not([tabindex^=\"-\"]), .ion-focusable:not([tabindex^=\"-\"])';\n/**\n * @part container - The container for the menu content.\n * @part backdrop - The backdrop that appears over the main content when the menu is open.\n */\nexport class Menu {\n  constructor() {\n    this.lastOnEnd = 0;\n    this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n    this.isAnimating = false;\n    this._isOpen = false;\n    this.inheritedAttributes = {};\n    this.handleFocus = (ev) => {\n      /**\n       * Overlays have their own focus trapping listener\n       * so we do not want the two listeners to conflict\n       * with each other. If the top-most overlay that is\n       * open does not contain this ion-menu, then ion-menu's\n       * focus trapping should not run.\n       */\n      const lastOverlay = getOverlay(document);\n      if (lastOverlay && !lastOverlay.contains(this.el)) {\n        return;\n      }\n      this.trapKeyboardFocus(ev, document);\n    };\n    this.isPaneVisible = false;\n    this.isEndSide = false;\n    /**\n     * If `true`, the menu is disabled.\n     */\n    this.disabled = false;\n    /**\n     * Which side of the view the menu should be placed.\n     */\n    this.side = 'start';\n    /**\n     * If `true`, swiping the menu is enabled.\n     */\n    this.swipeGesture = true;\n    /**\n     * The edge threshold for dragging the menu open.\n     * If a drag/swipe happens over this value, the menu is not triggered.\n     */\n    this.maxEdgeStart = 50;\n  }\n  typeChanged(type, oldType) {\n    const contentEl = this.contentEl;\n    if (contentEl) {\n      if (oldType !== undefined) {\n        contentEl.classList.remove(`menu-content-${oldType}`);\n      }\n      contentEl.classList.add(`menu-content-${type}`);\n      contentEl.removeAttribute('style');\n    }\n    if (this.menuInnerEl) {\n      // Remove effects of previous animations\n      this.menuInnerEl.removeAttribute('style');\n    }\n    this.animation = undefined;\n  }\n  disabledChanged() {\n    this.updateState();\n    this.ionMenuChange.emit({\n      disabled: this.disabled,\n      open: this._isOpen,\n    });\n  }\n  sideChanged() {\n    this.isEndSide = isEnd(this.side);\n  }\n  swipeGestureChanged() {\n    this.updateState();\n  }\n  async connectedCallback() {\n    // TODO: connectedCallback is fired in CE build\n    // before WC is defined. This needs to be fixed in Stencil.\n    if (typeof customElements !== 'undefined') {\n      await customElements.whenDefined('ion-menu');\n    }\n    if (this.type === undefined) {\n      this.type = config.get('menuType', 'overlay');\n    }\n    if (!Build.isBrowser) {\n      this.disabled = true;\n      return;\n    }\n    const content = this.contentId !== undefined ? document.getElementById(this.contentId) : null;\n    if (content === null) {\n      console.error('Menu: must have a \"content\" element to listen for drag events on.');\n      return;\n    }\n    if (this.el.contains(content)) {\n      console.error(`Menu: \"contentId\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.`);\n    }\n    this.contentEl = content;\n    // add menu's content classes\n    content.classList.add('menu-content');\n    this.typeChanged(this.type, undefined);\n    this.sideChanged();\n    // register this menu with the app's menu controller\n    menuController._register(this);\n    this.gesture = (await import('../../utils/gesture')).createGesture({\n      el: document,\n      gestureName: 'menu-swipe',\n      gesturePriority: 30,\n      threshold: 10,\n      blurOnStart: true,\n      canStart: (ev) => this.canStart(ev),\n      onWillStart: () => this.onWillStart(),\n      onStart: () => this.onStart(),\n      onMove: (ev) => this.onMove(ev),\n      onEnd: (ev) => this.onEnd(ev),\n    });\n    this.updateState();\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAriaAttributes(this.el);\n  }\n  async componentDidLoad() {\n    this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n    this.updateState();\n  }\n  disconnectedCallback() {\n    this.blocker.destroy();\n    menuController._unregister(this);\n    if (this.animation) {\n      this.animation.destroy();\n    }\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    this.animation = undefined;\n    this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n  }\n  onSplitPaneChanged(ev) {\n    this.isPaneVisible = ev.detail.isPane(this.el);\n    this.updateState();\n  }\n  onBackdropClick(ev) {\n    // TODO(FW-2832): type (CustomEvent triggers errors which should be sorted)\n    if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n      const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n      if (shouldClose) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.close();\n      }\n    }\n  }\n  onKeydown(ev) {\n    if (ev.key === 'Escape') {\n      this.close();\n    }\n  }\n  /**\n   * Returns `true` is the menu is open.\n   */\n  isOpen() {\n    return Promise.resolve(this._isOpen);\n  }\n  /**\n   * Returns `true` is the menu is active.\n   *\n   * A menu is active when it can be opened or closed, meaning it's enabled\n   * and it's not part of a `ion-split-pane`.\n   */\n  isActive() {\n    return Promise.resolve(this._isActive());\n  }\n  /**\n   * Opens the menu. If the menu is already open or it can't be opened,\n   * it returns `false`.\n   */\n  open(animated = true) {\n    return this.setOpen(true, animated);\n  }\n  /**\n   * Closes the menu. If the menu is already closed or it can't be closed,\n   * it returns `false`.\n   */\n  close(animated = true) {\n    return this.setOpen(false, animated);\n  }\n  /**\n   * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n  toggle(animated = true) {\n    return this.setOpen(!this._isOpen, animated);\n  }\n  /**\n   * Opens or closes the button.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n  setOpen(shouldOpen, animated = true) {\n    return menuController._setOpen(this, shouldOpen, animated);\n  }\n  focusFirstDescendant() {\n    const { el } = this;\n    const firstInput = el.querySelector(focusableQueryString);\n    if (firstInput) {\n      firstInput.focus();\n    }\n    else {\n      el.focus();\n    }\n  }\n  focusLastDescendant() {\n    const { el } = this;\n    const inputs = Array.from(el.querySelectorAll(focusableQueryString));\n    const lastInput = inputs.length > 0 ? inputs[inputs.length - 1] : null;\n    if (lastInput) {\n      lastInput.focus();\n    }\n    else {\n      el.focus();\n    }\n  }\n  trapKeyboardFocus(ev, doc) {\n    const target = ev.target;\n    if (!target) {\n      return;\n    }\n    /**\n     * If the target is inside the menu contents, let the browser\n     * focus as normal and keep a log of the last focused element.\n     */\n    if (this.el.contains(target)) {\n      this.lastFocus = target;\n    }\n    else {\n      /**\n       * Otherwise, we are about to have focus go out of the menu.\n       * Wrap the focus to either the first or last element.\n       */\n      /**\n       * Once we call `focusFirstDescendant`, another focus event\n       * will fire, which will cause `lastFocus` to be updated\n       * before we can run the code after that. We cache the value\n       * here to avoid that.\n       */\n      this.focusFirstDescendant();\n      /**\n       * If the cached last focused element is the same as the now-\n       * active element, that means the user was on the first element\n       * already and pressed Shift + Tab, so we need to wrap to the\n       * last descendant.\n       */\n      if (this.lastFocus === doc.activeElement) {\n        this.focusLastDescendant();\n      }\n    }\n  }\n  async _setOpen(shouldOpen, animated = true) {\n    // If the menu is disabled or it is currently being animated, let's do nothing\n    if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n      return false;\n    }\n    this.beforeAnimation(shouldOpen);\n    await this.loadAnimation();\n    await this.startAnimation(shouldOpen, animated);\n    this.afterAnimation(shouldOpen);\n    return true;\n  }\n  async loadAnimation() {\n    // Menu swipe animation takes the menu's inner width as parameter,\n    // If `offsetWidth` changes, we need to create a new animation.\n    const width = this.menuInnerEl.offsetWidth;\n    if (width === this.width && this.animation !== undefined) {\n      return;\n    }\n    this.width = width;\n    // Destroy existing animation\n    if (this.animation) {\n      this.animation.destroy();\n      this.animation = undefined;\n    }\n    // Create new animation\n    this.animation = await menuController._createAnimation(this.type, this);\n    if (!config.getBoolean('animated', true)) {\n      this.animation.duration(0);\n    }\n    this.animation.fill('both');\n  }\n  async startAnimation(shouldOpen, animated) {\n    const isReversed = !shouldOpen;\n    const mode = getIonMode(this);\n    const easing = mode === 'ios' ? iosEasing : mdEasing;\n    const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n    const ani = this.animation\n      .direction(isReversed ? 'reverse' : 'normal')\n      .easing(isReversed ? easingReverse : easing)\n      .onFinish(() => {\n      if (ani.getDirection() === 'reverse') {\n        ani.direction('normal');\n      }\n    });\n    if (animated) {\n      await ani.play();\n    }\n    else {\n      ani.play({ sync: true });\n    }\n  }\n  _isActive() {\n    return !this.disabled && !this.isPaneVisible;\n  }\n  canSwipe() {\n    return this.swipeGesture && !this.isAnimating && this._isActive();\n  }\n  canStart(detail) {\n    // Do not allow swipe gesture if a modal is open\n    const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n    if (isModalPresented || !this.canSwipe()) {\n      return false;\n    }\n    if (this._isOpen) {\n      return true;\n    }\n    else if (menuController._getOpenSync()) {\n      return false;\n    }\n    return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n  }\n  onWillStart() {\n    this.beforeAnimation(!this._isOpen);\n    return this.loadAnimation();\n  }\n  onStart() {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    // the cloned animation should not use an easing curve during seek\n    this.animation.progressStart(true, this._isOpen ? 1 : 0);\n  }\n  onMove(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n    const stepValue = delta / this.width;\n    this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n  }\n  onEnd(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const isOpen = this._isOpen;\n    const isEndSide = this.isEndSide;\n    const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n    const width = this.width;\n    const stepValue = delta / width;\n    const velocity = detail.velocityX;\n    const z = width / 2.0;\n    const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n    const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n    const shouldComplete = isOpen\n      ? isEndSide\n        ? shouldCompleteRight\n        : shouldCompleteLeft\n      : isEndSide\n        ? shouldCompleteLeft\n        : shouldCompleteRight;\n    let shouldOpen = !isOpen && shouldComplete;\n    if (isOpen && !shouldComplete) {\n      shouldOpen = true;\n    }\n    this.lastOnEnd = detail.currentTime;\n    // Account for rounding errors in JS\n    let newStepValue = shouldComplete ? 0.001 : -0.001;\n    /**\n     * stepValue can sometimes return a negative\n     * value, but you can't have a negative time value\n     * for the cubic bezier curve (at least with web animations)\n     */\n    const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n    /**\n     * Animation will be reversed here, so need to\n     * reverse the easing curve as well\n     *\n     * Additionally, we need to account for the time relative\n     * to the new easing curve, as `stepValue` is going to be given\n     * in terms of a linear curve.\n     */\n    newStepValue +=\n      getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n    const playTo = this._isOpen ? !shouldComplete : shouldComplete;\n    this.animation\n      .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n      .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n      .progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n  }\n  beforeAnimation(shouldOpen) {\n    assert(!this.isAnimating, '_before() should not be called while animating');\n    // this places the menu into the correct location before it animates in\n    // this css class doesn't actually kick off any animations\n    this.el.classList.add(SHOW_MENU);\n    /**\n     * We add a tabindex here so that focus trapping\n     * still works even if the menu does not have\n     * any focusable elements slotted inside. The\n     * focus trapping utility will fallback to focusing\n     * the menu so focus does not leave when the menu\n     * is open.\n     */\n    this.el.setAttribute('tabindex', '0');\n    if (this.backdropEl) {\n      this.backdropEl.classList.add(SHOW_BACKDROP);\n    }\n    this.blocker.block();\n    this.isAnimating = true;\n    if (shouldOpen) {\n      this.ionWillOpen.emit();\n    }\n    else {\n      this.ionWillClose.emit();\n    }\n  }\n  afterAnimation(isOpen) {\n    var _a;\n    assert(this.isAnimating, '_before() should be called while animating');\n    // keep opening/closing the menu disabled for a touch more yet\n    // only add listeners/css if it's enabled and isOpen\n    // and only remove listeners/css if it's not open\n    // emit opened/closed events\n    this._isOpen = isOpen;\n    this.isAnimating = false;\n    if (!this._isOpen) {\n      this.blocker.unblock();\n    }\n    if (isOpen) {\n      // add css class and hide content behind menu from screen readers\n      if (this.contentEl) {\n        this.contentEl.classList.add(MENU_CONTENT_OPEN);\n        /**\n         * When the menu is open and overlaying the main\n         * content, the main content should not be announced\n         * by the screenreader as the menu is the main\n         * focus. This is useful with screenreaders that have\n         * \"read from top\" gestures that read the entire\n         * page from top to bottom when activated.\n         */\n        this.contentEl.setAttribute('aria-hidden', 'true');\n      }\n      // emit open event\n      this.ionDidOpen.emit();\n      /**\n       * Move focus to the menu to prepare focus trapping, as long as\n       * it isn't already focused. Use the host element instead of the\n       * first descendant to avoid the scroll position jumping around.\n       */\n      const focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\n      if (focusedMenu !== this.el) {\n        this.el.focus();\n      }\n      // start focus trapping\n      document.addEventListener('focus', this.handleFocus, true);\n    }\n    else {\n      // remove css classes and unhide content from screen readers\n      this.el.classList.remove(SHOW_MENU);\n      /**\n       * Remove tabindex from the menu component\n       * so that is cannot be tabbed to.\n       */\n      this.el.removeAttribute('tabindex');\n      if (this.contentEl) {\n        this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n        /**\n         * Remove aria-hidden so screen readers\n         * can announce the main content again\n         * now that the menu is not the main focus.\n         */\n        this.contentEl.removeAttribute('aria-hidden');\n      }\n      if (this.backdropEl) {\n        this.backdropEl.classList.remove(SHOW_BACKDROP);\n      }\n      if (this.animation) {\n        this.animation.stop();\n      }\n      // emit close event\n      this.ionDidClose.emit();\n      // undo focus trapping so multiple menus don't collide\n      document.removeEventListener('focus', this.handleFocus, true);\n    }\n  }\n  updateState() {\n    const isActive = this._isActive();\n    if (this.gesture) {\n      this.gesture.enable(isActive && this.swipeGesture);\n    }\n    // Close menu immediately\n    if (!isActive && this._isOpen) {\n      // close if this menu is open, and should not be enabled\n      this.forceClosing();\n    }\n    if (!this.disabled) {\n      menuController._setActiveMenu(this);\n    }\n    assert(!this.isAnimating, 'can not be animating');\n  }\n  forceClosing() {\n    assert(this._isOpen, 'menu cannot be closed');\n    this.isAnimating = true;\n    const ani = this.animation.direction('reverse');\n    ani.play({ sync: true });\n    this.afterAnimation(false);\n  }\n  render() {\n    const { isEndSide, type, disabled, isPaneVisible, inheritedAttributes } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"navigation\", \"aria-label\": inheritedAttributes['aria-label'] || 'menu', class: {\n        [mode]: true,\n        [`menu-type-${type}`]: true,\n        'menu-enabled': !disabled,\n        'menu-side-end': isEndSide,\n        'menu-side-start': !isEndSide,\n        'menu-pane-visible': isPaneVisible,\n      } }, h(\"div\", { class: \"menu-inner\", part: \"container\", ref: (el) => (this.menuInnerEl = el) }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: (el) => (this.backdropEl = el), class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\n  }\n  static get is() { return \"ion-menu\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"menu.ios.scss\"],\n      \"md\": [\"menu.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"menu.ios.css\"],\n      \"md\": [\"menu.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"contentId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The `id` of the main content. When using\\na router this is typically `ion-router-outlet`.\\nWhen not using a router, this is typically\\nyour main view's `ion-content`. This is not the\\nid of the `ion-content` inside of your `ion-menu`.\"\n        },\n        \"attribute\": \"content-id\",\n        \"reflect\": true\n      },\n      \"menuId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"An id for the menu.\"\n        },\n        \"attribute\": \"menu-id\",\n        \"reflect\": true\n      },\n      \"type\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The display type of the menu.\\nAvailable options: `\\\"overlay\\\"`, `\\\"reveal\\\"`, `\\\"push\\\"`.\"\n        },\n        \"attribute\": \"type\",\n        \"reflect\": false\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the menu is disabled.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"side\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Side\",\n          \"resolved\": \"\\\"end\\\" | \\\"start\\\"\",\n          \"references\": {\n            \"Side\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Which side of the view the menu should be placed.\"\n        },\n        \"attribute\": \"side\",\n        \"reflect\": true,\n        \"defaultValue\": \"'start'\"\n      },\n      \"swipeGesture\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, swiping the menu is enabled.\"\n        },\n        \"attribute\": \"swipe-gesture\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"maxEdgeStart\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The edge threshold for dragging the menu open.\\nIf a drag/swipe happens over this value, the menu is not triggered.\"\n        },\n        \"attribute\": \"max-edge-start\",\n        \"reflect\": false,\n        \"defaultValue\": \"50\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"isPaneVisible\": {},\n      \"isEndSide\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"ionWillOpen\",\n        \"name\": \"ionWillOpen\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the menu is about to be opened.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionWillClose\",\n        \"name\": \"ionWillClose\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the menu is about to be closed.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionDidOpen\",\n        \"name\": \"ionDidOpen\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the menu is open.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionDidClose\",\n        \"name\": \"ionDidClose\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the menu is closed.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionMenuChange\",\n        \"name\": \"ionMenuChange\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Emitted when the menu state is changed.\"\n        },\n        \"complexType\": {\n          \"original\": \"MenuChangeEventDetail\",\n          \"resolved\": \"MenuChangeEventDetail\",\n          \"references\": {\n            \"MenuChangeEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"isOpen\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<boolean>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Returns `true` is the menu is open.\",\n          \"tags\": []\n        }\n      },\n      \"isActive\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<boolean>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Returns `true` is the menu is active.\\n\\nA menu is active when it can be opened or closed, meaning it's enabled\\nand it's not part of a `ion-split-pane`.\",\n          \"tags\": []\n        }\n      },\n      \"open\": {\n        \"complexType\": {\n          \"signature\": \"(animated?: boolean) => Promise<boolean>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Opens the menu. If the menu is already open or it can't be opened,\\nit returns `false`.\",\n          \"tags\": []\n        }\n      },\n      \"close\": {\n        \"complexType\": {\n          \"signature\": \"(animated?: boolean) => Promise<boolean>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Closes the menu. If the menu is already closed or it can't be closed,\\nit returns `false`.\",\n          \"tags\": []\n        }\n      },\n      \"toggle\": {\n        \"complexType\": {\n          \"signature\": \"(animated?: boolean) => Promise<boolean>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\\nIf the operation can't be completed successfully, it returns `false`.\",\n          \"tags\": []\n        }\n      },\n      \"setOpen\": {\n        \"complexType\": {\n          \"signature\": \"(shouldOpen: boolean, animated?: boolean) => Promise<boolean>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }, {\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Opens or closes the button.\\nIf the operation can't be completed successfully, it returns `false`.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"type\",\n        \"methodName\": \"typeChanged\"\n      }, {\n        \"propName\": \"disabled\",\n        \"methodName\": \"disabledChanged\"\n      }, {\n        \"propName\": \"side\",\n        \"methodName\": \"sideChanged\"\n      }, {\n        \"propName\": \"swipeGesture\",\n        \"methodName\": \"swipeGestureChanged\"\n      }];\n  }\n  static get listeners() {\n    return [{\n        \"name\": \"ionSplitPaneVisible\",\n        \"method\": \"onSplitPaneChanged\",\n        \"target\": \"body\",\n        \"capture\": false,\n        \"passive\": false\n      }, {\n        \"name\": \"click\",\n        \"method\": \"onBackdropClick\",\n        \"target\": undefined,\n        \"capture\": true,\n        \"passive\": false\n      }, {\n        \"name\": \"keydown\",\n        \"method\": \"onKeydown\",\n        \"target\": undefined,\n        \"capture\": false,\n        \"passive\": false\n      }];\n  }\n}\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n  return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n  if (isEndSide) {\n    return posX >= win.innerWidth - maxEdgeStart;\n  }\n  else {\n    return posX <= maxEdgeStart;\n  }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\n"],"mappings":"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"}
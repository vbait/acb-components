{"version":3,"names":["cloneMap","WeakMap","relocateInput","componentEl","inputEl","shouldRelocate","inputRelativeY","disabledClonedInput","has","addClone","removeClone","isFocused","input","getRootNode","activeElement","parentEl","parentNode","clonedEl","cloneNode","classList","add","tabIndex","disabled","appendChild","set","doc","ownerDocument","tx","dir","style","pointerEvents","transform","concat","clone","get","delete","remove","enableHideCaretOnScroll","scrollEl","scrollHideCaret","shouldHideCaret","onBlur","hideCaret","showCaret","addEventListener","removeEventListener","SKIP_SELECTOR","enableInputBlurring","focused","didScroll","document","onScroll","onFocusin","onTouchend","ev","active","matches","tapped","target","closest","setTimeout","blur","SCROLL_ASSIST_SPEED","getScrollData","contentEl","keyboardHeight","_a","itemEl","calcScrollData","getBoundingClientRect","defaultView","innerHeight","inputRect","contentRect","platformHeight","inputTop","top","inputBottom","bottom","visibleAreaTop","visibleAreaBottom","Math","min","safeAreaTop","safeAreaBottom","distanceToBottom","distanceToTop","desiredScrollAmount","round","scrollAmount","distance","abs","duration","scrollDuration","max","scrollPadding","inputSafeY","enableScrollAssist","footerEl","disableClonedInput","coord","touchStart","pointerCoord","touchEnd","endCoord","hasPointerMoved","jsSetFocus","capture","passive","scrollData","focus","raf","click","window","scrollContent_1","__awaiter","scrollContentTimeout_1","undefined","clearTimeout","doubleKeyboardEventListener_1","scrollByPoint","_c","sent","getScrollElement","totalScrollAmount","scrollHeight","clientHeight","scrollTop","type","threshold","startCoord","deltaX","x","deltaY","y","PADDING_TIMER_KEY","enableScrollPadding","setScrollPadding","onFocusout","_b","tagName","parentElement","el","findClosestIonContent","timer","setProperty","INPUT_BLURRING","SCROLL_PADDING","startInputShims","config","platform","isIOS","isAndroid","getNumber","scrollAssist","getBoolean","inputBlurring","inputs","Array","from","querySelectorAll","hideCaretMap","scrollAssistMap","registerInput","Promise","resolve","componentOnReady","inputRoot","shadowRoot","querySelector","rmFn","isDateInput","unregisterInput","fn","_i","inputs_1","length","detail"],"sources":["node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/common.js","node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/hide-caret.js","node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/input-blurring.js","node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/scroll-data.js","node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/scroll-assist.js","node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/scroll-padding.js","node_modules/@ionic/core/dist/collection/utils/input-shims/input-shims.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst cloneMap = new WeakMap();\nexport const relocateInput = (componentEl, inputEl, shouldRelocate, inputRelativeY = 0, disabledClonedInput = false) => {\n  if (cloneMap.has(componentEl) === shouldRelocate) {\n    return;\n  }\n  if (shouldRelocate) {\n    addClone(componentEl, inputEl, inputRelativeY, disabledClonedInput);\n  }\n  else {\n    removeClone(componentEl, inputEl);\n  }\n};\n// TODO(FW-2832): type\nexport const isFocused = (input) => {\n  return input === input.getRootNode().activeElement;\n};\nconst addClone = (componentEl, inputEl, inputRelativeY, disabledClonedInput = false) => {\n  // this allows for the actual input to receive the focus from\n  // the user's touch event, but before it receives focus, it\n  // moves the actual input to a location that will not screw\n  // up the app's layout, and does not allow the native browser\n  // to attempt to scroll the input into place (messing up headers/footers)\n  // the cloned input fills the area of where native input should be\n  // while the native input fakes out the browser by relocating itself\n  // before it receives the actual focus event\n  // We hide the focused input (with the visible caret) invisible by making it scale(0),\n  const parentEl = inputEl.parentNode;\n  // DOM WRITES\n  const clonedEl = inputEl.cloneNode(false);\n  clonedEl.classList.add('cloned-input');\n  clonedEl.tabIndex = -1;\n  /**\n   * Making the cloned input disabled prevents\n   * Chrome for Android from still scrolling\n   * the entire page since this cloned input\n   * will briefly be hidden by the keyboard\n   * even though it is not focused.\n   *\n   * This is not needed on iOS. While this\n   * does not cause functional issues on iOS,\n   * the input still appears slightly dimmed even\n   * if we set opacity: 1.\n   */\n  if (disabledClonedInput) {\n    clonedEl.disabled = true;\n  }\n  parentEl.appendChild(clonedEl);\n  cloneMap.set(componentEl, clonedEl);\n  const doc = componentEl.ownerDocument;\n  const tx = doc.dir === 'rtl' ? 9999 : -9999;\n  componentEl.style.pointerEvents = 'none';\n  inputEl.style.transform = `translate3d(${tx}px,${inputRelativeY}px,0) scale(0)`;\n};\nconst removeClone = (componentEl, inputEl) => {\n  const clone = cloneMap.get(componentEl);\n  if (clone) {\n    cloneMap.delete(componentEl);\n    clone.remove();\n  }\n  componentEl.style.pointerEvents = '';\n  inputEl.style.transform = '';\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { addEventListener, removeEventListener } from '../../helpers';\nimport { isFocused, relocateInput } from './common';\nexport const enableHideCaretOnScroll = (componentEl, inputEl, scrollEl) => {\n  if (!scrollEl || !inputEl) {\n    return () => {\n      return;\n    };\n  }\n  const scrollHideCaret = (shouldHideCaret) => {\n    if (isFocused(inputEl)) {\n      relocateInput(componentEl, inputEl, shouldHideCaret);\n    }\n  };\n  const onBlur = () => relocateInput(componentEl, inputEl, false);\n  const hideCaret = () => scrollHideCaret(true);\n  const showCaret = () => scrollHideCaret(false);\n  addEventListener(scrollEl, 'ionScrollStart', hideCaret);\n  addEventListener(scrollEl, 'ionScrollEnd', showCaret);\n  inputEl.addEventListener('blur', onBlur);\n  return () => {\n    removeEventListener(scrollEl, 'ionScrollStart', hideCaret);\n    removeEventListener(scrollEl, 'ionScrollEnd', showCaret);\n    inputEl.addEventListener('ionBlur', onBlur);\n  };\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { addEventListener, removeEventListener } from '../../helpers';\nconst SKIP_SELECTOR = 'input, textarea, [no-blur], [contenteditable]';\nexport const enableInputBlurring = () => {\n  let focused = true;\n  let didScroll = false;\n  const doc = document;\n  const onScroll = () => {\n    didScroll = true;\n  };\n  const onFocusin = () => {\n    focused = true;\n  };\n  const onTouchend = (ev) => {\n    // if app did scroll return early\n    if (didScroll) {\n      didScroll = false;\n      return;\n    }\n    const active = doc.activeElement;\n    if (!active) {\n      return;\n    }\n    // only blur if the active element is a text-input or a textarea\n    if (active.matches(SKIP_SELECTOR)) {\n      return;\n    }\n    // if the selected target is the active element, do not blur\n    const tapped = ev.target;\n    if (tapped === active) {\n      return;\n    }\n    if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n      return;\n    }\n    focused = false;\n    // TODO FW-2796: find a better way, why 50ms?\n    setTimeout(() => {\n      if (!focused) {\n        active.blur();\n      }\n    }, 50);\n  };\n  addEventListener(doc, 'ionScrollStart', onScroll);\n  doc.addEventListener('focusin', onFocusin, true);\n  doc.addEventListener('touchend', onTouchend, false);\n  return () => {\n    removeEventListener(doc, 'ionScrollStart', onScroll, true);\n    doc.removeEventListener('focusin', onFocusin, true);\n    doc.removeEventListener('touchend', onTouchend, false);\n  };\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst SCROLL_ASSIST_SPEED = 0.3;\nexport const getScrollData = (componentEl, contentEl, keyboardHeight) => {\n  var _a;\n  const itemEl = (_a = componentEl.closest('ion-item,[ion-item]')) !== null && _a !== void 0 ? _a : componentEl;\n  return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight // TODO(FW-2832): type\n  );\n};\nconst calcScrollData = (inputRect, contentRect, keyboardHeight, platformHeight) => {\n  // compute input's Y values relative to the body\n  const inputTop = inputRect.top;\n  const inputBottom = inputRect.bottom;\n  // compute visible area\n  const visibleAreaTop = contentRect.top;\n  const visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\n  // compute safe area\n  const safeAreaTop = visibleAreaTop + 15;\n  const safeAreaBottom = visibleAreaBottom * 0.75;\n  // figure out if each edge of the input is within the safe area\n  const distanceToBottom = safeAreaBottom - inputBottom;\n  const distanceToTop = safeAreaTop - inputTop;\n  // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n  const desiredScrollAmount = Math.round(distanceToBottom < 0 ? -distanceToBottom : distanceToTop > 0 ? -distanceToTop : 0);\n  // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n  // gets focus, so make sure we don't scroll the input above the visible area\n  const scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n  const distance = Math.abs(scrollAmount);\n  const duration = distance / SCROLL_ASSIST_SPEED;\n  const scrollDuration = Math.min(400, Math.max(150, duration));\n  return {\n    scrollAmount,\n    scrollDuration,\n    scrollPadding: keyboardHeight,\n    inputSafeY: -(inputTop - safeAreaTop) + 4,\n  };\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { getScrollElement, scrollByPoint } from '../../content';\nimport { pointerCoord, raf } from '../../helpers';\nimport { isFocused, relocateInput } from './common';\nimport { getScrollData } from './scroll-data';\nexport const enableScrollAssist = (componentEl, inputEl, contentEl, footerEl, keyboardHeight, disableClonedInput = false) => {\n  let coord;\n  const touchStart = (ev) => {\n    coord = pointerCoord(ev);\n  };\n  const touchEnd = (ev) => {\n    // input cover touchend/mouseup\n    if (!coord) {\n      return;\n    }\n    // get where the touchend/mouseup ended\n    const endCoord = pointerCoord(ev);\n    // focus this input if the pointer hasn't moved XX pixels\n    // and the input doesn't already have focus\n    if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\n      // begin the input focus process\n      jsSetFocus(componentEl, inputEl, contentEl, footerEl, keyboardHeight, disableClonedInput);\n    }\n  };\n  componentEl.addEventListener('touchstart', touchStart, { capture: true, passive: true });\n  componentEl.addEventListener('touchend', touchEnd, true);\n  return () => {\n    componentEl.removeEventListener('touchstart', touchStart, true);\n    componentEl.removeEventListener('touchend', touchEnd, true);\n  };\n};\nconst jsSetFocus = async (componentEl, inputEl, contentEl, footerEl, keyboardHeight, disableClonedInput = false) => {\n  if (!contentEl && !footerEl) {\n    return;\n  }\n  const scrollData = getScrollData(componentEl, (contentEl || footerEl), keyboardHeight);\n  if (contentEl && Math.abs(scrollData.scrollAmount) < 4) {\n    // the text input is in a safe position that doesn't\n    // require it to be scrolled into view, just set focus now\n    inputEl.focus();\n    return;\n  }\n  // temporarily move the focus to the focus holder so the browser\n  // doesn't freak out while it's trying to get the input in place\n  // at this point the native text input still does not have focus\n  relocateInput(componentEl, inputEl, true, scrollData.inputSafeY, disableClonedInput);\n  inputEl.focus();\n  /**\n   * Relocating/Focusing input causes the\n   * click event to be cancelled, so\n   * manually fire one here.\n   */\n  raf(() => componentEl.click());\n  if (typeof window !== 'undefined') {\n    let scrollContentTimeout;\n    const scrollContent = async () => {\n      // clean up listeners and timeouts\n      if (scrollContentTimeout !== undefined) {\n        clearTimeout(scrollContentTimeout);\n      }\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n      window.removeEventListener('ionKeyboardDidShow', scrollContent);\n      // scroll the input into place\n      if (contentEl) {\n        await scrollByPoint(contentEl, 0, scrollData.scrollAmount, scrollData.scrollDuration);\n      }\n      // the scroll view is in the correct position now\n      // give the native text input focus\n      relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n      // ensure this is the focused input\n      inputEl.focus();\n    };\n    const doubleKeyboardEventListener = () => {\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n      window.addEventListener('ionKeyboardDidShow', scrollContent);\n    };\n    if (contentEl) {\n      const scrollEl = await getScrollElement(contentEl);\n      /**\n       * scrollData will only consider the amount we need\n       * to scroll in order to properly bring the input\n       * into view. It will not consider the amount\n       * we can scroll in the content element.\n       * As a result, scrollData may request a greater\n       * scroll position than is currently available\n       * in the DOM. If this is the case, we need to\n       * wait for the webview to resize/the keyboard\n       * to show in order for additional scroll\n       * bandwidth to become available.\n       */\n      const totalScrollAmount = scrollEl.scrollHeight - scrollEl.clientHeight;\n      if (scrollData.scrollAmount > totalScrollAmount - scrollEl.scrollTop) {\n        /**\n         * On iOS devices, the system will show a \"Passwords\" bar above the keyboard\n         * after the initial keyboard is shown. This prevents the webview from resizing\n         * until the \"Passwords\" bar is shown, so we need to wait for that to happen first.\n         */\n        if (inputEl.type === 'password') {\n          // Add 50px to account for the \"Passwords\" bar\n          scrollData.scrollAmount += 50;\n          window.addEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n        }\n        else {\n          window.addEventListener('ionKeyboardDidShow', scrollContent);\n        }\n        /**\n         * This should only fire in 2 instances:\n         * 1. The app is very slow.\n         * 2. The app is running in a browser on an old OS\n         * that does not support Ionic Keyboard Events\n         */\n        scrollContentTimeout = setTimeout(scrollContent, 1000);\n        return;\n      }\n    }\n    scrollContent();\n  }\n};\nconst hasPointerMoved = (threshold, startCoord, endCoord) => {\n  if (startCoord && endCoord) {\n    const deltaX = startCoord.x - endCoord.x;\n    const deltaY = startCoord.y - endCoord.y;\n    const distance = deltaX * deltaX + deltaY * deltaY;\n    return distance > threshold * threshold;\n  }\n  return false;\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { findClosestIonContent } from '../../content';\nconst PADDING_TIMER_KEY = '$ionPaddingTimer';\nexport const enableScrollPadding = (keyboardHeight) => {\n  const doc = document;\n  // TODO(FW-2832): types\n  const onFocusin = (ev) => {\n    setScrollPadding(ev.target, keyboardHeight);\n  };\n  const onFocusout = (ev) => {\n    setScrollPadding(ev.target, 0);\n  };\n  doc.addEventListener('focusin', onFocusin);\n  doc.addEventListener('focusout', onFocusout);\n  return () => {\n    doc.removeEventListener('focusin', onFocusin);\n    doc.removeEventListener('focusout', onFocusout);\n  };\n};\nconst setScrollPadding = (input, keyboardHeight) => {\n  var _a, _b;\n  if (input.tagName !== 'INPUT') {\n    return;\n  }\n  if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\n    return;\n  }\n  if (((_b = (_a = input.parentElement) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.tagName) === 'ION-SEARCHBAR') {\n    return;\n  }\n  const el = findClosestIonContent(input);\n  if (el === null) {\n    return;\n  }\n  const timer = el[PADDING_TIMER_KEY];\n  if (timer) {\n    clearTimeout(timer);\n  }\n  if (keyboardHeight > 0) {\n    el.style.setProperty('--keyboard-offset', `${keyboardHeight}px`);\n  }\n  else {\n    el[PADDING_TIMER_KEY] = setTimeout(() => {\n      el.style.setProperty('--keyboard-offset', '0px');\n    }, 120);\n  }\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { findClosestIonContent } from '../content';\nimport { componentOnReady } from '../helpers';\nimport { enableHideCaretOnScroll } from './hacks/hide-caret';\nimport { enableInputBlurring } from './hacks/input-blurring';\nimport { enableScrollAssist } from './hacks/scroll-assist';\nimport { enableScrollPadding } from './hacks/scroll-padding';\nconst INPUT_BLURRING = true;\nconst SCROLL_ASSIST = true;\nconst SCROLL_PADDING = true;\nconst HIDE_CARET = true;\nexport const startInputShims = (config, platform) => {\n  const doc = document;\n  const isIOS = platform === 'ios';\n  const isAndroid = platform === 'android';\n  /**\n   * Hide Caret and Input Blurring are needed on iOS.\n   * Scroll Assist and Scroll Padding are needed on iOS and Android\n   * with Chrome web browser (not Chrome webview).\n   */\n  const keyboardHeight = config.getNumber('keyboardHeight', 290);\n  const scrollAssist = config.getBoolean('scrollAssist', true);\n  const hideCaret = config.getBoolean('hideCaretOnScroll', isIOS);\n  const inputBlurring = config.getBoolean('inputBlurring', isIOS);\n  const scrollPadding = config.getBoolean('scrollPadding', true);\n  const inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n  const hideCaretMap = new WeakMap();\n  const scrollAssistMap = new WeakMap();\n  const registerInput = async (componentEl) => {\n    await new Promise((resolve) => componentOnReady(componentEl, resolve));\n    const inputRoot = componentEl.shadowRoot || componentEl;\n    const inputEl = inputRoot.querySelector('input') || inputRoot.querySelector('textarea');\n    const scrollEl = findClosestIonContent(componentEl);\n    const footerEl = !scrollEl ? componentEl.closest('ion-footer') : null;\n    if (!inputEl) {\n      return;\n    }\n    if (HIDE_CARET && !!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n      const rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n      hideCaretMap.set(componentEl, rmFn);\n    }\n    /**\n     * date/datetime-locale inputs on mobile devices show date picker\n     * overlays instead of keyboards. As a result, scroll assist is\n     * not needed. This also works around a bug in iOS <16 where\n     * scroll assist causes the browser to lock up. See FW-1997.\n     */\n    const isDateInput = inputEl.type === 'date' || inputEl.type === 'datetime-local';\n    if (SCROLL_ASSIST &&\n      !isDateInput &&\n      (!!scrollEl || !!footerEl) &&\n      scrollAssist &&\n      !scrollAssistMap.has(componentEl)) {\n      const rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, footerEl, keyboardHeight, isAndroid);\n      scrollAssistMap.set(componentEl, rmFn);\n    }\n  };\n  const unregisterInput = (componentEl) => {\n    if (HIDE_CARET && hideCaret) {\n      const fn = hideCaretMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      hideCaretMap.delete(componentEl);\n    }\n    if (SCROLL_ASSIST && scrollAssist) {\n      const fn = scrollAssistMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      scrollAssistMap.delete(componentEl);\n    }\n  };\n  if (inputBlurring && INPUT_BLURRING) {\n    enableInputBlurring();\n  }\n  if (scrollPadding && SCROLL_PADDING) {\n    enableScrollPadding(keyboardHeight);\n  }\n  // Input might be already loaded in the DOM before ion-device-hacks did.\n  // At this point we need to look for all of the inputs not registered yet\n  // and register them.\n  for (const input of inputs) {\n    registerInput(input);\n  }\n  // TODO(FW-2832): types\n  doc.addEventListener('ionInputDidLoad', ((ev) => {\n    registerInput(ev.detail);\n  }));\n  doc.addEventListener('ionInputDidUnload', ((ev) => {\n    unregisterInput(ev.detail);\n  }));\n};\n"],"mappings":"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"}
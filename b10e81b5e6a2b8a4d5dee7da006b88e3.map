{"version":3,"names":["tabsCss","Tabs","class_1","hostRef","_this","this","transitioning","useRouter","onTabClicked","ev","_b","detail","href","tab","undefined","router","document","querySelector","push","select","prototype","componentWillLoad","el","closest","tabs","length","sent","ionNavWillLoad","emit","componentWillRender","tabBar","selectedTab","getTab","shouldSwitch","setActive","notifyRouter","tabSwitch","getSelected","Promise","resolve","setRouteId","id","changed","element","markVisible","getRouteId","tabId","_a","reject","leavingTab","ionTabsWillChange","active","ionTabsDidChange","navChanged","Object","defineProperty","Array","from","querySelectorAll","render","h","Host","onIonTabButtonClick","name","class","tabEl","find","t","console","error","concat"],"sources":["node_modules/@ionic/core/dist/collection/components/tabs/tabs.css?tag=ion-tabs&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/tabs/tabs.js"],"sourcesContent":[":host {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  contain: layout size style;\n  z-index: 0;\n}\n\n.tabs-inner {\n  position: relative;\n  flex: 1;\n  contain: layout size style;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\n/**\n * @slot - Content is placed between the named slots if provided without a slot.\n * @slot top - Content is placed at the top of the screen.\n * @slot bottom - Content is placed at the bottom of the screen.\n */\nexport class Tabs {\n  constructor() {\n    this.transitioning = false;\n    /** @internal */\n    this.useRouter = false;\n    this.onTabClicked = (ev) => {\n      const { href, tab } = ev.detail;\n      if (this.useRouter && href !== undefined) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n          router.push(href);\n        }\n      }\n      else {\n        this.select(tab);\n      }\n    };\n  }\n  async componentWillLoad() {\n    if (!this.useRouter) {\n      this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\n    }\n    if (!this.useRouter) {\n      const tabs = this.tabs;\n      if (tabs.length > 0) {\n        await this.select(tabs[0]);\n      }\n    }\n    this.ionNavWillLoad.emit();\n  }\n  componentWillRender() {\n    const tabBar = this.el.querySelector('ion-tab-bar');\n    if (tabBar) {\n      const tab = this.selectedTab ? this.selectedTab.tab : undefined;\n      tabBar.selectedTab = tab;\n    }\n  }\n  /**\n   * Select a tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  async select(tab) {\n    const selectedTab = getTab(this.tabs, tab);\n    if (!this.shouldSwitch(selectedTab)) {\n      return false;\n    }\n    await this.setActive(selectedTab);\n    await this.notifyRouter();\n    this.tabSwitch();\n    return true;\n  }\n  /**\n   * Get a specific tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  async getTab(tab) {\n    return getTab(this.tabs, tab);\n  }\n  /**\n   * Get the currently selected tab.\n   */\n  getSelected() {\n    return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n  }\n  /** @internal */\n  async setRouteId(id) {\n    const selectedTab = getTab(this.tabs, id);\n    if (!this.shouldSwitch(selectedTab)) {\n      return { changed: false, element: this.selectedTab };\n    }\n    await this.setActive(selectedTab);\n    return {\n      changed: true,\n      element: this.selectedTab,\n      markVisible: () => this.tabSwitch(),\n    };\n  }\n  /** @internal */\n  async getRouteId() {\n    var _a;\n    const tabId = (_a = this.selectedTab) === null || _a === void 0 ? void 0 : _a.tab;\n    return tabId !== undefined ? { id: tabId, element: this.selectedTab } : undefined;\n  }\n  setActive(selectedTab) {\n    if (this.transitioning) {\n      return Promise.reject('transitioning already happening');\n    }\n    this.transitioning = true;\n    this.leavingTab = this.selectedTab;\n    this.selectedTab = selectedTab;\n    this.ionTabsWillChange.emit({ tab: selectedTab.tab });\n    selectedTab.active = true;\n    return Promise.resolve();\n  }\n  tabSwitch() {\n    const selectedTab = this.selectedTab;\n    const leavingTab = this.leavingTab;\n    this.leavingTab = undefined;\n    this.transitioning = false;\n    if (!selectedTab) {\n      return;\n    }\n    if (leavingTab !== selectedTab) {\n      if (leavingTab) {\n        leavingTab.active = false;\n      }\n      this.ionTabsDidChange.emit({ tab: selectedTab.tab });\n    }\n  }\n  notifyRouter() {\n    if (this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        return router.navChanged('forward');\n      }\n    }\n    return Promise.resolve(false);\n  }\n  shouldSwitch(selectedTab) {\n    const leavingTab = this.selectedTab;\n    return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n  }\n  get tabs() {\n    return Array.from(this.el.querySelectorAll('ion-tab'));\n  }\n  render() {\n    return (h(Host, { onIonTabButtonClick: this.onTabClicked }, h(\"slot\", { name: \"top\" }), h(\"div\", { class: \"tabs-inner\" }, h(\"slot\", null)), h(\"slot\", { name: \"bottom\" })));\n  }\n  static get is() { return \"ion-tabs\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"tabs.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"tabs.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"useRouter\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"\"\n        },\n        \"attribute\": \"use-router\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"selectedTab\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"ionNavWillLoad\",\n        \"name\": \"ionNavWillLoad\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Emitted when the navigation will load a component.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionTabsWillChange\",\n        \"name\": \"ionTabsWillChange\",\n        \"bubbles\": false,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the navigation is about to transition to a new component.\"\n        },\n        \"complexType\": {\n          \"original\": \"{ tab: string }\",\n          \"resolved\": \"{ tab: string; }\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionTabsDidChange\",\n        \"name\": \"ionTabsDidChange\",\n        \"bubbles\": false,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the navigation has finished transitioning to a new component.\"\n        },\n        \"complexType\": {\n          \"original\": \"{ tab: string }\",\n          \"resolved\": \"{ tab: string; }\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"select\": {\n        \"complexType\": {\n          \"signature\": \"(tab: string | HTMLIonTabElement) => Promise<boolean>\",\n          \"parameters\": [{\n              \"tags\": [{\n                  \"name\": \"param\",\n                  \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n                }],\n              \"text\": \"The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"HTMLIonTabElement\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Select a tab by the value of its `tab` property or an element reference.\",\n          \"tags\": [{\n              \"name\": \"param\",\n              \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n            }]\n        }\n      },\n      \"getTab\": {\n        \"complexType\": {\n          \"signature\": \"(tab: string | HTMLIonTabElement) => Promise<HTMLIonTabElement | undefined>\",\n          \"parameters\": [{\n              \"tags\": [{\n                  \"name\": \"param\",\n                  \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n                }],\n              \"text\": \"The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"HTMLIonTabElement\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<HTMLIonTabElement | undefined>\"\n        },\n        \"docs\": {\n          \"text\": \"Get a specific tab by the value of its `tab` property or an element reference.\",\n          \"tags\": [{\n              \"name\": \"param\",\n              \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n            }]\n        }\n      },\n      \"getSelected\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<string | undefined>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<string | undefined>\"\n        },\n        \"docs\": {\n          \"text\": \"Get the currently selected tab.\",\n          \"tags\": []\n        }\n      },\n      \"setRouteId\": {\n        \"complexType\": {\n          \"signature\": \"(id: string) => Promise<RouteWrite>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"RouteWrite\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          },\n          \"return\": \"Promise<RouteWrite>\"\n        },\n        \"docs\": {\n          \"text\": \"\",\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }]\n        }\n      },\n      \"getRouteId\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<RouteID | undefined>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"RouteID\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          },\n          \"return\": \"Promise<RouteID | undefined>\"\n        },\n        \"docs\": {\n          \"text\": \"\",\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }]\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n}\nconst getTab = (tabs, tab) => {\n  const tabEl = typeof tab === 'string' ? tabs.find((t) => t.tab === tab) : tab;\n  if (!tabEl) {\n    console.error(`tab with id: \"${tabEl}\" does not exist`);\n  }\n  return tabEl;\n};\n"],"mappings":"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"}
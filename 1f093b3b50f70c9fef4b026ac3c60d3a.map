{"version":3,"names":["GestureController","this","gestureId","requestedStart","Map","disabledGestures","disabledScroll","Set","prototype","createGesture","config","_a","GestureDelegate","newID","name","priority","disableScroll","createBlocker","opts","BlockerDelegate","disable","start","gestureName","id","canStart","delete","set","capture","maxPriority","forEach","value","Math","max","capturedId","clear","event","CustomEvent","detail","document","dispatchEvent","release","undefined","disableGesture","get","add","enableGesture","size","body","classList","BACKDROP_NO_SCROLL","enableScroll","remove","isDisabled","isCaptured","isScrollDisabled","disabled","ctrl","captured","destroy","block","_i","_b","length","gesture","unblock","GESTURE_CONTROLLER"],"sources":["node_modules/@ionic/core/dist/collection/utils/gesture/gesture-controller.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nclass GestureController {\n  constructor() {\n    this.gestureId = 0;\n    this.requestedStart = new Map();\n    this.disabledGestures = new Map();\n    this.disabledScroll = new Set();\n  }\n  /**\n   * Creates a gesture delegate based on the GestureConfig passed\n   */\n  createGesture(config) {\n    var _a;\n    return new GestureDelegate(this, this.newID(), config.name, (_a = config.priority) !== null && _a !== void 0 ? _a : 0, !!config.disableScroll);\n  }\n  /**\n   * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n   */\n  createBlocker(opts = {}) {\n    return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n  }\n  start(gestureName, id, priority) {\n    if (!this.canStart(gestureName)) {\n      this.requestedStart.delete(id);\n      return false;\n    }\n    this.requestedStart.set(id, priority);\n    return true;\n  }\n  capture(gestureName, id, priority) {\n    if (!this.start(gestureName, id, priority)) {\n      return false;\n    }\n    const requestedStart = this.requestedStart;\n    let maxPriority = -10000;\n    requestedStart.forEach((value) => {\n      maxPriority = Math.max(maxPriority, value);\n    });\n    if (maxPriority === priority) {\n      this.capturedId = id;\n      requestedStart.clear();\n      const event = new CustomEvent('ionGestureCaptured', { detail: { gestureName } });\n      document.dispatchEvent(event);\n      return true;\n    }\n    requestedStart.delete(id);\n    return false;\n  }\n  release(id) {\n    this.requestedStart.delete(id);\n    if (this.capturedId === id) {\n      this.capturedId = undefined;\n    }\n  }\n  disableGesture(gestureName, id) {\n    let set = this.disabledGestures.get(gestureName);\n    if (set === undefined) {\n      set = new Set();\n      this.disabledGestures.set(gestureName, set);\n    }\n    set.add(id);\n  }\n  enableGesture(gestureName, id) {\n    const set = this.disabledGestures.get(gestureName);\n    if (set !== undefined) {\n      set.delete(id);\n    }\n  }\n  disableScroll(id) {\n    this.disabledScroll.add(id);\n    if (this.disabledScroll.size === 1) {\n      document.body.classList.add(BACKDROP_NO_SCROLL);\n    }\n  }\n  enableScroll(id) {\n    this.disabledScroll.delete(id);\n    if (this.disabledScroll.size === 0) {\n      document.body.classList.remove(BACKDROP_NO_SCROLL);\n    }\n  }\n  canStart(gestureName) {\n    if (this.capturedId !== undefined) {\n      // a gesture already captured\n      return false;\n    }\n    if (this.isDisabled(gestureName)) {\n      return false;\n    }\n    return true;\n  }\n  isCaptured() {\n    return this.capturedId !== undefined;\n  }\n  isScrollDisabled() {\n    return this.disabledScroll.size > 0;\n  }\n  isDisabled(gestureName) {\n    const disabled = this.disabledGestures.get(gestureName);\n    if (disabled && disabled.size > 0) {\n      return true;\n    }\n    return false;\n  }\n  newID() {\n    this.gestureId++;\n    return this.gestureId;\n  }\n}\nclass GestureDelegate {\n  constructor(ctrl, id, name, priority, disableScroll) {\n    this.id = id;\n    this.name = name;\n    this.disableScroll = disableScroll;\n    this.priority = priority * 1000000 + id;\n    this.ctrl = ctrl;\n  }\n  canStart() {\n    if (!this.ctrl) {\n      return false;\n    }\n    return this.ctrl.canStart(this.name);\n  }\n  start() {\n    if (!this.ctrl) {\n      return false;\n    }\n    return this.ctrl.start(this.name, this.id, this.priority);\n  }\n  capture() {\n    if (!this.ctrl) {\n      return false;\n    }\n    const captured = this.ctrl.capture(this.name, this.id, this.priority);\n    if (captured && this.disableScroll) {\n      this.ctrl.disableScroll(this.id);\n    }\n    return captured;\n  }\n  release() {\n    if (this.ctrl) {\n      this.ctrl.release(this.id);\n      if (this.disableScroll) {\n        this.ctrl.enableScroll(this.id);\n      }\n    }\n  }\n  destroy() {\n    this.release();\n    this.ctrl = undefined;\n  }\n}\nclass BlockerDelegate {\n  constructor(ctrl, id, disable, disableScroll) {\n    this.id = id;\n    this.disable = disable;\n    this.disableScroll = disableScroll;\n    this.ctrl = ctrl;\n  }\n  block() {\n    if (!this.ctrl) {\n      return;\n    }\n    if (this.disable) {\n      for (const gesture of this.disable) {\n        this.ctrl.disableGesture(gesture, this.id);\n      }\n    }\n    if (this.disableScroll) {\n      this.ctrl.disableScroll(this.id);\n    }\n  }\n  unblock() {\n    if (!this.ctrl) {\n      return;\n    }\n    if (this.disable) {\n      for (const gesture of this.disable) {\n        this.ctrl.enableGesture(gesture, this.id);\n      }\n    }\n    if (this.disableScroll) {\n      this.ctrl.enableScroll(this.id);\n    }\n  }\n  destroy() {\n    this.unblock();\n    this.ctrl = undefined;\n  }\n}\nconst BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nexport const GESTURE_CONTROLLER = new GestureController();\n"],"mappings":"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"}
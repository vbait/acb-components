{"version":3,"names":["KEYBOARD_DID_OPEN","KEYBOARD_DID_CLOSE","KEYBOARD_THRESHOLD","previousVisualViewport","currentVisualViewport","keyboardOpen","resetKeyboardAssist","startKeyboardAssist","win","startNativeListeners","visualViewport","copyVisualViewport","onresize","trackViewportChanges","keyboardDidOpen","keyboardDidResize","setKeyboardOpen","keyboardDidClose","setKeyboardClose","addEventListener","ev","fireKeyboardOpenEvent","fireKeyboardCloseEvent","scaledHeightDifference","height","scale","width","innerHeight","nativeEv","keyboardHeight","CustomEvent","detail","dispatchEvent","Object","assign","Math","round","offsetTop","offsetLeft","pageTop","pageLeft"],"sources":["node_modules/@ionic/core/dist/collection/utils/keyboard/keyboard.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nexport const KEYBOARD_DID_OPEN = 'ionKeyboardDidShow';\nexport const KEYBOARD_DID_CLOSE = 'ionKeyboardDidHide';\nconst KEYBOARD_THRESHOLD = 150;\n// TODO(FW-2832): types\nlet previousVisualViewport = {};\nlet currentVisualViewport = {};\nlet keyboardOpen = false;\n/**\n * This is only used for tests\n */\nexport const resetKeyboardAssist = () => {\n  previousVisualViewport = {};\n  currentVisualViewport = {};\n  keyboardOpen = false;\n};\nexport const startKeyboardAssist = (win) => {\n  startNativeListeners(win);\n  if (!win.visualViewport) {\n    return;\n  }\n  currentVisualViewport = copyVisualViewport(win.visualViewport);\n  win.visualViewport.onresize = () => {\n    trackViewportChanges(win);\n    if (keyboardDidOpen() || keyboardDidResize(win)) {\n      setKeyboardOpen(win);\n    }\n    else if (keyboardDidClose(win)) {\n      setKeyboardClose(win);\n    }\n  };\n};\n/**\n * Listen for events fired by native keyboard plugin\n * in Capacitor/Cordova so devs only need to listen\n * in one place.\n */\nconst startNativeListeners = (win) => {\n  win.addEventListener('keyboardDidShow', (ev) => setKeyboardOpen(win, ev));\n  win.addEventListener('keyboardDidHide', () => setKeyboardClose(win));\n};\nexport const setKeyboardOpen = (win, ev) => {\n  fireKeyboardOpenEvent(win, ev);\n  keyboardOpen = true;\n};\nexport const setKeyboardClose = (win) => {\n  fireKeyboardCloseEvent(win);\n  keyboardOpen = false;\n};\n/**\n * Returns `true` if the `keyboardOpen` flag is not\n * set, the previous visual viewport width equal the current\n * visual viewport width, and if the scaled difference\n * of the previous visual viewport height minus the current\n * visual viewport height is greater than KEYBOARD_THRESHOLD\n *\n * We need to be able to accommodate users who have zooming\n * enabled in their browser (or have zoomed in manually) which\n * is why we take into account the current visual viewport's\n * scale value.\n */\nexport const keyboardDidOpen = () => {\n  const scaledHeightDifference = (previousVisualViewport.height - currentVisualViewport.height) * currentVisualViewport.scale;\n  return (!keyboardOpen &&\n    previousVisualViewport.width === currentVisualViewport.width &&\n    scaledHeightDifference > KEYBOARD_THRESHOLD);\n};\n/**\n * Returns `true` if the keyboard is open,\n * but the keyboard did not close\n */\nexport const keyboardDidResize = (win) => {\n  return keyboardOpen && !keyboardDidClose(win);\n};\n/**\n * Determine if the keyboard was closed\n * Returns `true` if the `keyboardOpen` flag is set and\n * the current visual viewport height equals the\n * layout viewport height.\n */\nexport const keyboardDidClose = (win) => {\n  return keyboardOpen && currentVisualViewport.height === win.innerHeight;\n};\n/**\n * Dispatch a keyboard open event\n */\nconst fireKeyboardOpenEvent = (win, nativeEv) => {\n  const keyboardHeight = nativeEv ? nativeEv.keyboardHeight : win.innerHeight - currentVisualViewport.height;\n  const ev = new CustomEvent(KEYBOARD_DID_OPEN, {\n    detail: { keyboardHeight },\n  });\n  win.dispatchEvent(ev);\n};\n/**\n * Dispatch a keyboard close event\n */\nconst fireKeyboardCloseEvent = (win) => {\n  const ev = new CustomEvent(KEYBOARD_DID_CLOSE);\n  win.dispatchEvent(ev);\n};\n/**\n * Given a window object, create a copy of\n * the current visual and layout viewport states\n * while also preserving the previous visual and\n * layout viewport states\n */\nexport const trackViewportChanges = (win) => {\n  previousVisualViewport = Object.assign({}, currentVisualViewport);\n  currentVisualViewport = copyVisualViewport(win.visualViewport);\n};\n/**\n * Creates a deep copy of the visual viewport\n * at a given state\n */\nexport const copyVisualViewport = (visualViewport) => {\n  return {\n    width: Math.round(visualViewport.width),\n    height: Math.round(visualViewport.height),\n    offsetTop: visualViewport.offsetTop,\n    offsetLeft: visualViewport.offsetLeft,\n    pageTop: visualViewport.pageTop,\n    pageLeft: visualViewport.pageLeft,\n    scale: visualViewport.scale,\n  };\n};\n"],"mappings":";;;AAGY,IAACA,kBAAoB,qBACrB,IAACC,mBAAqB,qBAClC,IAAMC,mBAAqB,IAE3B,IAAIC,uBAAyB,GAC7B,IAAIC,sBAAwB,GAC5B,IAAIC,aAAe,MAIP,IAACC,oBAAsB,WACjCH,uBAAyB,GACzBC,sBAAwB,GACxBC,aAAe,KACjB,EACY,IAACE,oBAAsB,SAACC,GAClCC,qBAAqBD,GACrB,IAAKA,EAAIE,eAAgB,CACvB,M,CAEFN,sBAAwBO,mBAAmBH,EAAIE,gBAC/CF,EAAIE,eAAeE,SAAW,WAC5BC,qBAAqBL,GACrB,GAAIM,mBAAqBC,kBAAkBP,GAAM,CAC/CQ,gBAAgBR,E,MAEb,GAAIS,iBAAiBT,GAAM,CAC9BU,iBAAiBV,E,CAEvB,CACA,EAMA,IAAMC,qBAAuB,SAACD,GAC5BA,EAAIW,iBAAiB,mBAAmB,SAACC,GAAO,OAAAJ,gBAAgBR,EAAKY,EAArB,IAChDZ,EAAIW,iBAAiB,mBAAmB,WAAM,OAAAD,iBAAiBV,EAAjB,GAChD,EACY,IAACQ,gBAAkB,SAACR,EAAKY,GACnCC,sBAAsBb,EAAKY,GAC3Bf,aAAe,IACjB,EACY,IAACa,iBAAmB,SAACV,GAC/Bc,uBAAuBd,GACvBH,aAAe,KACjB,EAaY,IAACS,gBAAkB,WAC7B,IAAMS,GAA0BpB,uBAAuBqB,OAASpB,sBAAsBoB,QAAUpB,sBAAsBqB,MACtH,OAASpB,cACPF,uBAAuBuB,QAAUtB,sBAAsBsB,OACvDH,EAAyBrB,kBAC7B,EAKY,IAACa,kBAAoB,SAACP,GAChC,OAAOH,eAAiBY,iBAAiBT,EAC3C,EAOY,IAACS,iBAAmB,SAACT,GAC/B,OAAOH,cAAgBD,sBAAsBoB,SAAWhB,EAAImB,WAC9D,EAIA,IAAMN,sBAAwB,SAACb,EAAKoB,GAClC,IAAMC,EAAiBD,EAAWA,EAASC,eAAiBrB,EAAImB,YAAcvB,sBAAsBoB,OACpG,IAAMJ,EAAK,IAAIU,YAAY9B,kBAAmB,CAC5C+B,OAAQ,CAAEF,eAAcA,KAE1BrB,EAAIwB,cAAcZ,EACpB,EAIA,IAAME,uBAAyB,SAACd,GAC9B,IAAMY,EAAK,IAAIU,YAAY7B,oBAC3BO,EAAIwB,cAAcZ,EACpB,EAOY,IAACP,qBAAuB,SAACL,GACnCL,uBAAyB8B,OAAOC,OAAO,GAAI9B,uBAC3CA,sBAAwBO,mBAAmBH,EAAIE,eACjD,EAKY,IAACC,mBAAqB,SAACD,GACjC,MAAO,CACLgB,MAAOS,KAAKC,MAAM1B,EAAegB,OACjCF,OAAQW,KAAKC,MAAM1B,EAAec,QAClCa,UAAW3B,EAAe2B,UAC1BC,WAAY5B,EAAe4B,WAC3BC,QAAS7B,EAAe6B,QACxBC,SAAU9B,EAAe8B,SACzBf,MAAOf,EAAee,MAE1B,S"}
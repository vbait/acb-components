{"version":3,"names":["raulSwitchCss","RaulSwitch","hostRef","this","switchId","concat","small","prototype","componentWillLoad","inputEl","el","querySelector","id","render","h","class","htmlFor","icon","labelText"],"sources":["node_modules/@realpage/raul3/collection/components/elements/raul-switch/raul-switch.css?tag=raul-switch","node_modules/@realpage/raul3/collection/components/elements/raul-switch/raul-switch.js"],"sourcesContent":["raul-switch {\n  display: inline-block;\n  vertical-align: middle;\n  font-size: 0.875rem;\n}\n\nraul-switch .r-switch {\n  display: flex;\n  align-items: center;\n}\n\nraul-switch .r-switch .r-switch__label {\n  display: flex;\n  cursor: pointer;\n  margin-bottom: 0;\n}\n\nraul-switch .r-switch .r-switch__toggle {\n  background-color: #C6CCD0;\n  border-radius: 9999px;\n  display: inline-block;\n  position: relative;\n  height: 1.25rem;\n  width: 2.25rem;\n  margin-right: 0.75rem;\n  transition: all .2s ease-in-out;\n}\n\nraul-switch .r-switch .r-switch__icon {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  background-color: #fff;\n  font-size: 0.75rem;\n  color: #fff;\n  border-width: 0;\n  border-radius: 9999px;\n  height: 1rem;\n  width: 1rem;\n  transition: all .2s ease-in-out;\n  left: 2px;\n  top: 2px;\n}\n\nraul-switch .r-switch input[type=checkbox] {\n  height: 0;\n  width: 0;\n  opacity: 0;\n}\n\nraul-switch .r-switch input[type=checkbox]:checked ~ .r-switch__label .r-switch__toggle {\n  background-color: #0076CC;\n}\n\nraul-switch .r-switch input[type=checkbox]:checked ~ .r-switch__label .r-switch__icon {\n  transform: translateX(16px);\n}\n\nraul-switch .r-switch input[type=checkbox]:disabled ~ .r-switch__label .r-switch__icon {\n  color: #C6CCD0;\n}\n\nraul-switch .r-switch input[type=checkbox]:disabled:checked ~ .r-switch__label .r-switch__icon {\n  color: #0076CC;\n}\n\nbody[modality] raul-switch .r-switch input[type=checkbox]:focus ~ .r-switch__label .r-switch__toggle::before {\n  position: absolute;\n  border-width: 1px;\n  border-color: #0076CC;\n  border-radius: 9999px;\n  content: \"\";\n  top: -3px;\n  bottom: -3px;\n  left: -3px;\n  right: -3px;\n}\n\nraul-switch .r-switch--small {\n  line-height: 14px;\n}\n\nraul-switch .r-switch--small .r-switch__toggle {\n  width: 1.5rem;\n  height: 14px;\n}\n\nraul-switch .r-switch--small .r-switch__icon {\n  font-size: 8px;\n  height: 10px;\n  width: 10px;\n}\n\nraul-switch .r-switch--small input[type=checkbox]:checked ~ .r-switch__label .r-switch__icon {\n  transform: translateX(10px);\n}","import { h } from \"@stencil/core\";\r\nexport class RaulSwitch {\r\n    constructor() {\r\n        this.switchId = `raul-switch-${switchId++}`;\r\n        /**\r\n         * If `true`, the switch size will be small.\r\n         */\r\n        this.small = false;\r\n    }\r\n    componentWillLoad() {\r\n        const inputEl = this.el.querySelector('input');\r\n        if (inputEl) {\r\n            if (inputEl.id) {\r\n                this.switchId = inputEl.id;\r\n            }\r\n            else {\r\n                inputEl.id = this.switchId;\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: {\r\n                'r-switch': true,\r\n                'r-switch--small': this.small,\r\n            } },\r\n            h(\"slot\", null),\r\n            h(\"label\", { class: \"r-switch__label\", htmlFor: this.switchId },\r\n                h(\"span\", { class: \"r-switch__toggle\" },\r\n                    h(\"raul-icon\", { class: \"r-switch__icon\", icon: \"lock-1\" })),\r\n                this.labelText)));\r\n    }\r\n    static get is() { return \"raul-switch\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"raul-switch.scss\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"raul-switch.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"labelText\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"The text label.\"\r\n            },\r\n            \"attribute\": \"label-text\",\r\n            \"reflect\": false\r\n        },\r\n        \"small\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"If `true`, the switch size will be small.\"\r\n            },\r\n            \"attribute\": \"small\",\r\n            \"reflect\": true,\r\n            \"defaultValue\": \"false\"\r\n        }\r\n    }; }\r\n    static get states() { return {\r\n        \"switchId\": {}\r\n    }; }\r\n    static get elementRef() { return \"el\"; }\r\n}\r\nlet switchId = 0;\r\n"],"mappings":"yEAAA,IAAMA,cAAgB,+9D,ICCTC,WAAU,WACnB,SAAAA,EAAAC,G,yBACIC,KAAKC,SAAW,eAAAC,OAAeD,YAI/BD,KAAKG,MAAQ,K,CAEjBL,EAAAM,UAAAC,kBAAA,WACI,IAAMC,EAAUN,KAAKO,GAAGC,cAAc,SACtC,GAAIF,EAAS,CACT,GAAIA,EAAQG,GAAI,CACZT,KAAKC,SAAWK,EAAQG,E,KAEvB,CACDH,EAAQG,GAAKT,KAAKC,Q,IAI9BH,EAAAM,UAAAM,OAAA,WACI,OAAQC,EAAE,MAAO,CAAEC,MAAO,CAClB,WAAY,KACZ,kBAAmBZ,KAAKG,QAE5BQ,EAAE,OAAQ,MACVA,EAAE,QAAS,CAAEC,MAAO,kBAAmBC,QAASb,KAAKC,UACjDU,EAAE,OAAQ,CAAEC,MAAO,oBACfD,EAAE,YAAa,CAAEC,MAAO,iBAAkBE,KAAM,YACpDd,KAAKe,W,gIA5BE,GA+EvB,IAAId,SAAW,E"}
{"version":3,"names":["raulAsideCss","RaulAside","class_1","hostRef","this","visible","expanded","focused","size","active","dismissable","prototype","componentWillLoad","handleActive","componentDidLoad","dialogTransitionDuration","parseFloat","window","getComputedStyle","dialogEl","transitionDuration","raulAsideReady","emit","handleRaulAsideOpen","e","_this","el","target","requestAnimationFrame","dialogWidth","offsetWidth","secondaryDialogWidth","querySelector","asideEl","blur","handleRaulAsideClose","focus","open","asideTrigger","document","activeElement","raulAsideOpen","body","classList","add","close","setTimeout","raulAsideClose","remove","newValue","dialogOffsetX","render","h","Host","class","role","tabindex","onKeyDown","key","raulAsideClickedOutside","ref","name","onClick","style","transform","concat"],"sources":["node_modules/@realpage/raul3/collection/components/elements/raul-aside/raul-aside.css?tag=raul-aside","node_modules/@realpage/raul3/collection/components/elements/raul-aside/raul-aside.js"],"sourcesContent":["raul-aside {\n  display: block;\n  font-size: 0.875rem;\n}\n\nraul-aside .r-aside {\n  display: none;\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  outline: 0;\n  z-index: 10000;\n}\n\nraul-aside .r-aside__backdrop {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #37474F;\n  cursor: pointer;\n  opacity: 0;\n  transition: opacity 0.15s linear;\n}\n\nraul-aside .r-aside__dialog {\n  position: absolute;\n  right: 0;\n  top: 0;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  border-left-width: 1px;\n  border-color: #EBEDEE;\n  transition: transform 0.35s ease, background-color 0.35s ease;\n  transform: translateX(100%);\n}\n\nraul-aside .r-aside--visible {\n  display: block;\n}\n\nraul-aside .r-aside--visible > .r-aside__backdrop {\n  opacity: 0.5;\n}\n\nraul-aside .r-aside--visible > .r-aside__dialog {\n  transform: translateX(0);\n}\n\nraul-aside[visible] > .r-aside {\n  display: block;\n}\n\nraul-aside[expanded] > .r-aside > .r-aside__backdrop {\n  opacity: 0.5;\n}\n\nraul-aside[expanded] > .r-aside > .r-aside__dialog {\n  transform: translateX(0);\n}\n\nraul-aside[expanded] > .r-aside > raul-aside[expanded] ~ .r-aside__dialog {\n  background-color: #EBEDEE;\n}\n\nraul-aside[expanded] > .r-aside > raul-aside[expanded] .r-aside__backdrop {\n  opacity: 0;\n}\n\nraul-aside[size=small] > .r-aside > .r-aside__dialog {\n  width: 100%;\n}\n\n@media (min-width: 640px) {\n  raul-aside[size=small] > .r-aside > .r-aside__dialog {\n    width: 22.5rem;\n  }\n}\n\nraul-aside[size=medium] > .r-aside > .r-aside__dialog {\n  width: 100%;\n}\n\n@media (min-width: 768px) {\n  raul-aside[size=medium] > .r-aside > .r-aside__dialog {\n    width: 37.5rem;\n  }\n}\n\nraul-aside[size=large] > .r-aside > .r-aside__dialog {\n  width: 100%;\n}\n\n@media (min-width: 1024px) {\n  raul-aside[size=large] > .r-aside > .r-aside__dialog {\n    width: 64rem;\n  }\n}\n\nraul-aside[size=xlarge] > .r-aside > .r-aside__dialog {\n  width: 100%;\n}\n\n@media (min-width: 1024px) {\n  raul-aside[size=xlarge] > .r-aside > .r-aside__dialog {\n    width: 100%;\n  }\n}","import { Host, h } from \"@stencil/core\";\r\nexport class RaulAside {\r\n    constructor() {\r\n        this.visible = false;\r\n        this.expanded = false;\r\n        this.focused = false;\r\n        this.size = 'medium';\r\n        this.active = false;\r\n        /**\r\n         * Determines whether the aside can be closed via clicking away or the `Escape` key\r\n         */\r\n        this.dismissable = true;\r\n    }\r\n    componentWillLoad() {\r\n        if (this.active) {\r\n            this.handleActive(this.active);\r\n        }\r\n        ;\r\n    }\r\n    componentDidLoad() {\r\n        this.dialogTransitionDuration = parseFloat(window.getComputedStyle(this.dialogEl).transitionDuration) * 1000;\r\n        this.raulAsideReady.emit();\r\n    }\r\n    handleRaulAsideOpen(e) {\r\n        if (this.el !== e.target) {\r\n            requestAnimationFrame(() => {\r\n                this.dialogWidth = this.dialogEl.offsetWidth;\r\n                this.secondaryDialogWidth = e.target.querySelector('.r-aside__dialog').offsetWidth;\r\n            });\r\n            if (this.asideEl) {\r\n                this.blur();\r\n            }\r\n        }\r\n    }\r\n    handleRaulAsideClose(e) {\r\n        if (this.el !== e.target) {\r\n            this.secondaryDialogWidth = 0;\r\n            this.focus();\r\n        }\r\n    }\r\n    /**\r\n     * Opens the aside.\r\n     * @returns {Promise<void>}\r\n     */\r\n    async open() {\r\n        this.asideTrigger = document.activeElement;\r\n        this.visible = true;\r\n        requestAnimationFrame(() => this.expanded = true);\r\n        this.focus();\r\n        this.raulAsideOpen.emit();\r\n        document.body.classList.add('no-scroll');\r\n    }\r\n    /**\r\n     * Closes the aside.\r\n     * @returns {Promise<void>}\r\n     */\r\n    async close() {\r\n        this.expanded = false;\r\n        setTimeout(() => this.visible = false, this.dialogTransitionDuration);\r\n        this.blur();\r\n        if (this.asideTrigger) {\r\n            this.asideTrigger.focus();\r\n        }\r\n        this.raulAsideClose.emit();\r\n        document.body.classList.remove('no-scroll');\r\n    }\r\n    handleActive(newValue) {\r\n        if (newValue) {\r\n            this.open();\r\n        }\r\n        else {\r\n            this.close();\r\n        }\r\n    }\r\n    dialogOffsetX() {\r\n        return -(this.secondaryDialogWidth - this.dialogWidth + 40);\r\n    }\r\n    focus() {\r\n        requestAnimationFrame(() => {\r\n            this.focused = true;\r\n            this.asideEl.focus();\r\n        });\r\n    }\r\n    blur() {\r\n        requestAnimationFrame(() => {\r\n            this.focused = false;\r\n            this.asideEl.blur();\r\n        });\r\n    }\r\n    render() {\r\n        return (h(Host, { visible: this.visible, expanded: this.expanded },\r\n            h(\"div\", { class: \"r-aside\", role: \"dialog\", tabindex: \"-1\", \"aria-hidden\": !this.visible, onKeyDown: e => e.key === 'Escape' ? (this.dismissable && this.focused ? this.close() : this.raulAsideClickedOutside.emit()) : null, ref: (el) => this.asideEl = el },\r\n                h(\"slot\", { name: \"secondary-aside\" }),\r\n                h(\"div\", { class: \"r-aside__backdrop\", onClick: () => this.dismissable ? this.close() : this.raulAsideClickedOutside.emit() }),\r\n                h(\"div\", { class: \"r-aside__dialog\", role: \"document\", style: { transform: this.secondaryDialogWidth ? `translateX(${this.dialogOffsetX()}px)` : null }, ref: el => this.dialogEl = el },\r\n                    h(\"slot\", null)))));\r\n    }\r\n    static get is() { return \"raul-aside\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"raul-aside.scss\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"raul-aside.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"size\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"'small' | 'medium' | 'large' | 'xlarge'\",\r\n                \"resolved\": \"\\\"large\\\" | \\\"medium\\\" | \\\"small\\\" | \\\"xlarge\\\"\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"size\",\r\n            \"reflect\": true,\r\n            \"defaultValue\": \"'medium'\"\r\n        },\r\n        \"active\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"active\",\r\n            \"reflect\": true,\r\n            \"defaultValue\": \"false\"\r\n        },\r\n        \"dismissable\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Determines whether the aside can be closed via clicking away or the `Escape` key\"\r\n            },\r\n            \"attribute\": \"dismissable\",\r\n            \"reflect\": true,\r\n            \"defaultValue\": \"true\"\r\n        }\r\n    }; }\r\n    static get states() { return {\r\n        \"visible\": {},\r\n        \"expanded\": {},\r\n        \"focused\": {},\r\n        \"dialogWidth\": {},\r\n        \"secondaryDialogWidth\": {}\r\n    }; }\r\n    static get events() { return [{\r\n            \"method\": \"raulAsideOpen\",\r\n            \"name\": \"raulAsideOpen\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Emitted when the aside opens.\"\r\n            },\r\n            \"complexType\": {\r\n                \"original\": \"any\",\r\n                \"resolved\": \"any\",\r\n                \"references\": {}\r\n            }\r\n        }, {\r\n            \"method\": \"raulAsideClose\",\r\n            \"name\": \"raulAsideClose\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Emitted when the aside closes.\"\r\n            },\r\n            \"complexType\": {\r\n                \"original\": \"any\",\r\n                \"resolved\": \"any\",\r\n                \"references\": {}\r\n            }\r\n        }, {\r\n            \"method\": \"raulAsideReady\",\r\n            \"name\": \"raulAsideReady\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Emitted when the aside is ready.\"\r\n            },\r\n            \"complexType\": {\r\n                \"original\": \"any\",\r\n                \"resolved\": \"any\",\r\n                \"references\": {}\r\n            }\r\n        }, {\r\n            \"method\": \"raulAsideClickedOutside\",\r\n            \"name\": \"raulAsideClickedOutside\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Emitted when clicking away or the `Escape` key. Should be used when dismissable is `true`.\"\r\n            },\r\n            \"complexType\": {\r\n                \"original\": \"any\",\r\n                \"resolved\": \"any\",\r\n                \"references\": {}\r\n            }\r\n        }]; }\r\n    static get methods() { return {\r\n        \"open\": {\r\n            \"complexType\": {\r\n                \"signature\": \"() => Promise<void>\",\r\n                \"parameters\": [],\r\n                \"references\": {\r\n                    \"Promise\": {\r\n                        \"location\": \"global\"\r\n                    }\r\n                },\r\n                \"return\": \"Promise<void>\"\r\n            },\r\n            \"docs\": {\r\n                \"text\": \"Opens the aside.\",\r\n                \"tags\": [{\r\n                        \"name\": \"returns\",\r\n                        \"text\": undefined\r\n                    }]\r\n            }\r\n        },\r\n        \"close\": {\r\n            \"complexType\": {\r\n                \"signature\": \"() => Promise<void>\",\r\n                \"parameters\": [],\r\n                \"references\": {\r\n                    \"Promise\": {\r\n                        \"location\": \"global\"\r\n                    }\r\n                },\r\n                \"return\": \"Promise<void>\"\r\n            },\r\n            \"docs\": {\r\n                \"text\": \"Closes the aside.\",\r\n                \"tags\": [{\r\n                        \"name\": \"returns\",\r\n                        \"text\": undefined\r\n                    }]\r\n            }\r\n        }\r\n    }; }\r\n    static get elementRef() { return \"el\"; }\r\n    static get watchers() { return [{\r\n            \"propName\": \"active\",\r\n            \"methodName\": \"handleActive\"\r\n        }]; }\r\n    static get listeners() { return [{\r\n            \"name\": \"raulAsideOpen\",\r\n            \"method\": \"handleRaulAsideOpen\",\r\n            \"target\": undefined,\r\n            \"capture\": false,\r\n            \"passive\": false\r\n        }, {\r\n            \"name\": \"raulAsideClose\",\r\n            \"method\": \"handleRaulAsideClose\",\r\n            \"target\": undefined,\r\n            \"capture\": false,\r\n            \"passive\": false\r\n        }]; }\r\n}\r\n"],"mappings":"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"}
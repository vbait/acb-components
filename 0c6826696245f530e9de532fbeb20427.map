{"version":3,"names":["toggleIosCss","toggleMdCss","Toggle","class_1","hostRef","_this","this","inputId","concat","toggleIds","lastDrag","activated","name","checked","disabled","value","enableOnOffLabels","config","get","onClick","ev","preventDefault","Date","now","onFocus","ionFocus","emit","onBlur","ionBlur","getSwitchLabelIcon","mode","checkmarkOutline","removeOutline","ellipseOutline","prototype","checkedChanged","isChecked","ionChange","disabledChanged","emitStyle","gesture","enable","connectedCallback","_a","import","_b","sent","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","onEnd","disconnectedCallback","destroy","undefined","componentWillLoad","ionStyle","setFocus","detail","shouldToggle","isRTL","deltaX","hapticSelection","event","stopImmediatePropagation","getValue","focusEl","focus","renderOnOffSwitchLabels","icon","h","class","render","color","getIonMode","_c","getAriaLabel","label","labelId","labelText","rtl","renderHiddenInput","Host","role","createColorClasses","hostContext","interactive","part","htmlFor","type","id","ref","margin"],"sources":["node_modules/@ionic/core/dist/collection/components/toggle/toggle.ios.css?tag=ion-toggle&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/toggle/toggle.md.css?tag=ion-toggle&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/toggle/toggle.js"],"sourcesContent":[":host {\n  /**\n   * @prop --background: Background of the toggle\n   * @prop --background-checked: Background of the toggle when checked\n   * @prop --border-radius: Border radius of the toggle track\n   *\n   * @prop --handle-background: Background of the toggle handle\n   * @prop --handle-background-checked: Background of the toggle handle when checked\n   *\n   * @prop --handle-border-radius: Border radius of the toggle handle\n   * @prop --handle-box-shadow: Box shadow of the toggle handle\n   * @prop --handle-height: Height of the toggle handle\n   * @prop --handle-max-height: Maximum height of the toggle handle\n   * @prop --handle-width: Width of the toggle handle\n   * @prop --handle-spacing: Horizontal spacing around the toggle handle\n   * @prop --handle-transition: Transition of the toggle handle\n   */\n  /* stylelint-disable-next-line declaration-no-important */\n  box-sizing: content-box !important;\n  display: inline-block;\n  position: relative;\n  outline: none;\n  contain: content;\n  cursor: pointer;\n  touch-action: none;\n  user-select: none;\n  z-index: 2;\n}\n\n:host(.ion-focused) input {\n  border: 2px solid #5e9ed6;\n}\n\n:host(.toggle-disabled) {\n  pointer-events: none;\n}\n\nlabel {\n  left: 0;\n  top: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n  appearance: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  opacity: 0;\n  pointer-events: none;\n}\n[dir=rtl] label, :host-context([dir=rtl]) label {\n  left: unset;\n  right: unset;\n  right: 0;\n}\n\nlabel::-moz-focus-inner {\n  border: 0;\n}\n\ninput {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.toggle-icon-wrapper {\n  display: flex;\n  position: relative;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  transition: var(--handle-transition);\n  will-change: transform;\n}\n\n.toggle-icon {\n  border-radius: var(--border-radius);\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background: var(--background);\n  pointer-events: none;\n  overflow: inherit;\n}\n\n:host(.toggle-checked) .toggle-icon {\n  background: var(--background-checked);\n}\n\n.toggle-inner {\n  border-radius: var(--handle-border-radius);\n  position: absolute;\n  width: var(--handle-width);\n  height: var(--handle-height);\n  max-height: var(--handle-max-height);\n  transition: var(--handle-transition);\n  background: var(--handle-background);\n  box-shadow: var(--handle-box-shadow);\n  contain: strict;\n}\n\n/**\n * We do not use the @ltr and @rtl mixins\n * here because ion-toggle uses the Shadow DOM\n * and WebKit does not support :host-context.\n */\n:host(.toggle-ltr) .toggle-inner {\n  left: var(--handle-spacing);\n}\n\n:host(.toggle-rtl) .toggle-inner {\n  right: var(--handle-spacing);\n}\n\n:host(.toggle-ltr.toggle-checked) .toggle-icon-wrapper {\n  transform: translate3d(calc(100% - var(--handle-width)), 0, 0);\n}\n\n:host(.toggle-rtl.toggle-checked) .toggle-icon-wrapper {\n  transform: translate3d(calc(-100% + var(--handle-width)), 0, 0);\n}\n\n:host(.toggle-checked) .toggle-inner {\n  background: var(--handle-background-checked);\n}\n\n:host(.toggle-ltr.toggle-checked) .toggle-inner {\n  transform: translate3d(calc(var(--handle-spacing) * -2), 0, 0);\n}\n\n:host(.toggle-rtl.toggle-checked) .toggle-inner {\n  transform: translate3d(calc(var(--handle-spacing) * 2), 0, 0);\n}\n\n:host {\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.088);\n  --background-checked: var(--ion-color-primary, #3880ff);\n  --border-radius: 16px;\n  --handle-background: #ffffff;\n  --handle-background-checked: #ffffff;\n  --handle-border-radius: 25.5px;\n  --handle-box-shadow: 0 3px 12px rgba(0, 0, 0, 0.16), 0 3px 1px rgba(0, 0, 0, 0.1);\n  --handle-height: calc(32px - (2px * 2));\n  --handle-max-height: calc(100% - var(--handle-spacing) * 2);\n  --handle-width: calc(32px - (2px * 2));\n  --handle-spacing: 2px;\n  --handle-transition: transform 300ms, width 120ms ease-in-out 80ms, left 110ms ease-in-out 80ms, right 110ms ease-in-out 80ms;\n  width: 51px;\n  height: 32px;\n  contain: strict;\n  overflow: hidden;\n}\n\n:host(.ion-color.toggle-checked) .toggle-icon {\n  background: var(--ion-color-base);\n}\n\n:host(.toggle-activated) .toggle-switch-icon {\n  opacity: 0;\n}\n\n.toggle-icon {\n  transform: translate3d(0, 0, 0);\n  transition: background-color 300ms;\n}\n\n.toggle-inner {\n  will-change: transform;\n}\n\n.toggle-switch-icon {\n  position: absolute;\n  top: 50%;\n  width: 11px;\n  height: 11px;\n  transform: translateY(-50%);\n  transition: opacity 300ms, color 300ms;\n}\n\n.toggle-switch-icon {\n  position: absolute;\n  color: var(--ion-color-dark);\n}\n\n:host(.toggle-ltr) .toggle-switch-icon {\n  /* stylelint-disable-next-line property-disallowed-list */\n  right: 6px;\n}\n\n:host(.toggle-rtl) .toggle-switch-icon {\n  /* stylelint-disable property-disallowed-list */\n  right: initial;\n  left: 6px;\n  /* stylelint-enable property-disallowed-list */\n}\n\n:host(.toggle-checked) .toggle-switch-icon.toggle-switch-icon-checked {\n  color: var(--ion-color-contrast, #fff);\n}\n\n:host(.toggle-checked) .toggle-switch-icon:not(.toggle-switch-icon-checked) {\n  opacity: 0;\n}\n\n.toggle-switch-icon-checked {\n  position: absolute;\n  width: 15px;\n  height: 15px;\n  transform: translateY(-50%) rotate(90deg);\n}\n\n:host(.toggle-ltr) .toggle-switch-icon-checked {\n  /* stylelint-disable property-disallowed-list */\n  right: initial;\n  left: 4px;\n  /* stylelint-enable property-disallowed-list */\n}\n\n:host(.toggle-rtl) .toggle-switch-icon-checked {\n  /* stylelint-disable-next-line property-disallowed-list */\n  right: 4px;\n}\n\n:host(.toggle-activated) .toggle-icon::before,\n:host(.toggle-checked) .toggle-icon::before {\n  transform: scale3d(0, 0, 0);\n}\n\n:host(.toggle-activated.toggle-checked) .toggle-inner::before {\n  transform: scale3d(0, 0, 0);\n}\n\n:host(.toggle-activated) .toggle-inner {\n  width: calc(var(--handle-width) + 6px);\n}\n\n:host(.toggle-ltr.toggle-activated.toggle-checked) .toggle-icon-wrapper {\n  transform: translate3d(calc(100% - var(--handle-width) - 6px), 0, 0);\n}\n\n:host(.toggle-rtl.toggle-activated.toggle-checked) .toggle-icon-wrapper {\n  transform: translate3d(calc(-100% + var(--handle-width) + 6px), 0, 0);\n}\n\n:host(.toggle-disabled) {\n  opacity: 0.3;\n}\n\n:host(.in-item[slot]) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 20px;\n  padding-right: 10px;\n  padding-top: 6px;\n  padding-bottom: 5px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host(.in-item[slot]) {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 20px;\n    padding-inline-start: 20px;\n    -webkit-padding-end: 10px;\n    padding-inline-end: 10px;\n  }\n}\n\n:host(.in-item[slot=start]) {\n  padding-left: 0;\n  padding-right: 16px;\n  padding-top: 6px;\n  padding-bottom: 5px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host(.in-item[slot=start]) {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 0;\n    padding-inline-start: 0;\n    -webkit-padding-end: 16px;\n    padding-inline-end: 16px;\n  }\n}",":host {\n  /**\n   * @prop --background: Background of the toggle\n   * @prop --background-checked: Background of the toggle when checked\n   * @prop --border-radius: Border radius of the toggle track\n   *\n   * @prop --handle-background: Background of the toggle handle\n   * @prop --handle-background-checked: Background of the toggle handle when checked\n   *\n   * @prop --handle-border-radius: Border radius of the toggle handle\n   * @prop --handle-box-shadow: Box shadow of the toggle handle\n   * @prop --handle-height: Height of the toggle handle\n   * @prop --handle-max-height: Maximum height of the toggle handle\n   * @prop --handle-width: Width of the toggle handle\n   * @prop --handle-spacing: Horizontal spacing around the toggle handle\n   * @prop --handle-transition: Transition of the toggle handle\n   */\n  /* stylelint-disable-next-line declaration-no-important */\n  box-sizing: content-box !important;\n  display: inline-block;\n  position: relative;\n  outline: none;\n  contain: content;\n  cursor: pointer;\n  touch-action: none;\n  user-select: none;\n  z-index: 2;\n}\n\n:host(.ion-focused) input {\n  border: 2px solid #5e9ed6;\n}\n\n:host(.toggle-disabled) {\n  pointer-events: none;\n}\n\nlabel {\n  left: 0;\n  top: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n  appearance: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  opacity: 0;\n  pointer-events: none;\n}\n[dir=rtl] label, :host-context([dir=rtl]) label {\n  left: unset;\n  right: unset;\n  right: 0;\n}\n\nlabel::-moz-focus-inner {\n  border: 0;\n}\n\ninput {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.toggle-icon-wrapper {\n  display: flex;\n  position: relative;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  transition: var(--handle-transition);\n  will-change: transform;\n}\n\n.toggle-icon {\n  border-radius: var(--border-radius);\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background: var(--background);\n  pointer-events: none;\n  overflow: inherit;\n}\n\n:host(.toggle-checked) .toggle-icon {\n  background: var(--background-checked);\n}\n\n.toggle-inner {\n  border-radius: var(--handle-border-radius);\n  position: absolute;\n  width: var(--handle-width);\n  height: var(--handle-height);\n  max-height: var(--handle-max-height);\n  transition: var(--handle-transition);\n  background: var(--handle-background);\n  box-shadow: var(--handle-box-shadow);\n  contain: strict;\n}\n\n/**\n * We do not use the @ltr and @rtl mixins\n * here because ion-toggle uses the Shadow DOM\n * and WebKit does not support :host-context.\n */\n:host(.toggle-ltr) .toggle-inner {\n  left: var(--handle-spacing);\n}\n\n:host(.toggle-rtl) .toggle-inner {\n  right: var(--handle-spacing);\n}\n\n:host(.toggle-ltr.toggle-checked) .toggle-icon-wrapper {\n  transform: translate3d(calc(100% - var(--handle-width)), 0, 0);\n}\n\n:host(.toggle-rtl.toggle-checked) .toggle-icon-wrapper {\n  transform: translate3d(calc(-100% + var(--handle-width)), 0, 0);\n}\n\n:host(.toggle-checked) .toggle-inner {\n  background: var(--handle-background-checked);\n}\n\n:host(.toggle-ltr.toggle-checked) .toggle-inner {\n  transform: translate3d(calc(var(--handle-spacing) * -2), 0, 0);\n}\n\n:host(.toggle-rtl.toggle-checked) .toggle-inner {\n  transform: translate3d(calc(var(--handle-spacing) * 2), 0, 0);\n}\n\n:host {\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.39);\n  --background-checked: rgba(var(--ion-color-primary-rgb, 56, 128, 255), 0.5);\n  --border-radius: 14px;\n  --handle-background: #ffffff;\n  --handle-background-checked: var(--ion-color-primary, #3880ff);\n  --handle-border-radius: 50%;\n  --handle-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n  --handle-width: 20px;\n  --handle-height: 20px;\n  --handle-max-height: calc(100% + 6px);\n  --handle-spacing: 0;\n  --handle-transition: transform 160ms cubic-bezier(0.4, 0, 0.2, 1), background-color 160ms cubic-bezier(0.4, 0, 0.2, 1);\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  width: 36px;\n  height: 14px;\n  contain: strict;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 12px;\n    padding-inline-start: 12px;\n    -webkit-padding-end: 12px;\n    padding-inline-end: 12px;\n  }\n}\n\n:host(.ion-color.toggle-checked) .toggle-icon {\n  background: rgba(var(--ion-color-base-rgb), 0.5);\n}\n\n:host(.ion-color.toggle-checked) .toggle-inner {\n  background: var(--ion-color-base);\n}\n\n:host(.toggle-checked) .toggle-inner {\n  color: var(--ion-color-contrast, #fff);\n}\n\n.toggle-icon {\n  transition: background-color 160ms;\n}\n\n.toggle-inner {\n  will-change: background-color, transform;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #000;\n}\n\n.toggle-inner .toggle-switch-icon {\n  padding-left: 1px;\n  padding-right: 1px;\n  padding-top: 1px;\n  padding-bottom: 1px;\n  width: 100%;\n  height: 100%;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .toggle-inner .toggle-switch-icon {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 1px;\n    padding-inline-start: 1px;\n    -webkit-padding-end: 1px;\n    padding-inline-end: 1px;\n  }\n}\n\n:host(.toggle-disabled) {\n  opacity: 0.3;\n}\n\n:host(.in-item[slot]) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 16px;\n  padding-right: 0;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  cursor: pointer;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host(.in-item[slot]) {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 16px;\n    padding-inline-start: 16px;\n    -webkit-padding-end: 0;\n    padding-inline-end: 0;\n  }\n}\n\n:host(.in-item[slot=start]) {\n  padding-left: 2px;\n  padding-right: 18px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host(.in-item[slot=start]) {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 2px;\n    padding-inline-start: 2px;\n    -webkit-padding-end: 18px;\n    padding-inline-end: 18px;\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { checkmarkOutline, removeOutline, ellipseOutline } from 'ionicons/icons';\nimport { config } from '../../global/config';\nimport { getIonMode } from '../../global/ionic-global';\nimport { getAriaLabel, renderHiddenInput } from '../../utils/helpers';\nimport { hapticSelection } from '../../utils/native/haptic';\nimport { isRTL } from '../../utils/rtl';\nimport { createColorClasses, hostContext } from '../../utils/theme';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part track - The background track of the toggle.\n * @part handle - The toggle handle, or knob, used to change the checked state.\n */\nexport class Toggle {\n  constructor() {\n    this.inputId = `ion-tg-${toggleIds++}`;\n    this.lastDrag = 0;\n    this.activated = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the toggle is selected.\n     */\n    this.checked = false;\n    /**\n     * If `true`, the user cannot interact with the toggle.\n     */\n    this.disabled = false;\n    /**\n     * The value of the toggle does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n     * it's only used when the toggle participates in a native `<form>`.\n     */\n    this.value = 'on';\n    /**\n     * Enables the on/off accessibility switch labels within the toggle.\n     */\n    this.enableOnOffLabels = config.get('toggleOnOffLabels');\n    this.onClick = (ev) => {\n      ev.preventDefault();\n      if (this.lastDrag + 300 < Date.now()) {\n        this.checked = !this.checked;\n      }\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.getSwitchLabelIcon = (mode, checked) => {\n      if (mode === 'md') {\n        return checked ? checkmarkOutline : removeOutline;\n      }\n      return checked ? removeOutline : ellipseOutline;\n    };\n  }\n  checkedChanged(isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value,\n    });\n  }\n  disabledChanged() {\n    this.emitStyle();\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async connectedCallback() {\n    this.gesture = (await import('../../utils/gesture')).createGesture({\n      el: this.el,\n      gestureName: 'toggle',\n      gesturePriority: 100,\n      threshold: 5,\n      passive: false,\n      onStart: () => this.onStart(),\n      onMove: (ev) => this.onMove(ev),\n      onEnd: (ev) => this.onEnd(ev),\n    });\n    this.disabledChanged();\n  }\n  disconnectedCallback() {\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'interactive-disabled': this.disabled,\n    });\n  }\n  onStart() {\n    this.activated = true;\n    // touch-action does not work in iOS\n    this.setFocus();\n  }\n  onMove(detail) {\n    if (shouldToggle(isRTL(this.el), this.checked, detail.deltaX, -10)) {\n      this.checked = !this.checked;\n      hapticSelection();\n    }\n  }\n  onEnd(ev) {\n    this.activated = false;\n    this.lastDrag = Date.now();\n    ev.event.preventDefault();\n    ev.event.stopImmediatePropagation();\n  }\n  getValue() {\n    return this.value || '';\n  }\n  setFocus() {\n    if (this.focusEl) {\n      this.focusEl.focus();\n    }\n  }\n  renderOnOffSwitchLabels(mode, checked) {\n    const icon = this.getSwitchLabelIcon(mode, checked);\n    return (h(\"ion-icon\", { class: {\n        'toggle-switch-icon': true,\n        'toggle-switch-icon-checked': checked,\n      }, icon: icon, \"aria-hidden\": \"true\" }));\n  }\n  render() {\n    const { activated, color, checked, disabled, el, inputId, name, enableOnOffLabels } = this;\n    const mode = getIonMode(this);\n    const { label, labelId, labelText } = getAriaLabel(el, inputId);\n    const value = this.getValue();\n    const rtl = isRTL(el) ? 'rtl' : 'ltr';\n    renderHiddenInput(true, el, name, checked ? value : '', disabled);\n    return (h(Host, { onClick: this.onClick, \"aria-labelledby\": label ? labelId : null, \"aria-checked\": `${checked}`, \"aria-hidden\": disabled ? 'true' : null, role: \"switch\", class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'toggle-activated': activated,\n        'toggle-checked': checked,\n        'toggle-disabled': disabled,\n        interactive: true,\n        [`toggle-${rtl}`]: true,\n      }) }, h(\"div\", { class: \"toggle-icon\", part: \"track\" }, enableOnOffLabels &&\n      mode === 'ios' && [this.renderOnOffSwitchLabels(mode, true), this.renderOnOffSwitchLabels(mode, false)], h(\"div\", { class: \"toggle-icon-wrapper\" }, h(\"div\", { class: \"toggle-inner\", part: \"handle\" }, enableOnOffLabels && mode === 'md' && this.renderOnOffSwitchLabels(mode, checked)))), h(\"label\", { htmlFor: inputId }, labelText), h(\"input\", { type: \"checkbox\", role: \"switch\", \"aria-checked\": `${checked}`, disabled: disabled, id: inputId, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: (focusEl) => (this.focusEl = focusEl) })));\n  }\n  static get is() { return \"ion-toggle\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"toggle.ios.scss\"],\n      \"md\": [\"toggle.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"toggle.ios.css\"],\n      \"md\": [\"toggle.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": true\n      },\n      \"name\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The name of the control, which is submitted with the form data.\"\n        },\n        \"attribute\": \"name\",\n        \"reflect\": false,\n        \"defaultValue\": \"this.inputId\"\n      },\n      \"checked\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the toggle is selected.\"\n        },\n        \"attribute\": \"checked\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the user cannot interact with the toggle.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"value\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | null\",\n          \"resolved\": \"null | string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The value of the toggle does not mean if it's checked or not, use the `checked`\\nproperty for that.\\n\\nThe value of a toggle is analogous to the value of a `<input type=\\\"checkbox\\\">`,\\nit's only used when the toggle participates in a native `<form>`.\"\n        },\n        \"attribute\": \"value\",\n        \"reflect\": false,\n        \"defaultValue\": \"'on'\"\n      },\n      \"enableOnOffLabels\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean | undefined\",\n          \"resolved\": \"boolean | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Enables the on/off accessibility switch labels within the toggle.\"\n        },\n        \"attribute\": \"enable-on-off-labels\",\n        \"reflect\": false,\n        \"defaultValue\": \"config.get('toggleOnOffLabels')\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"activated\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"ionChange\",\n        \"name\": \"ionChange\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the value property has changed.\"\n        },\n        \"complexType\": {\n          \"original\": \"ToggleChangeEventDetail\",\n          \"resolved\": \"ToggleChangeEventDetail<any>\",\n          \"references\": {\n            \"ToggleChangeEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        }\n      }, {\n        \"method\": \"ionFocus\",\n        \"name\": \"ionFocus\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the toggle has focus.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionBlur\",\n        \"name\": \"ionBlur\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the toggle loses focus.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionStyle\",\n        \"name\": \"ionStyle\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Emitted when the styles change.\"\n        },\n        \"complexType\": {\n          \"original\": \"StyleEventDetail\",\n          \"resolved\": \"StyleEventDetail\",\n          \"references\": {\n            \"StyleEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        }\n      }];\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"checked\",\n        \"methodName\": \"checkedChanged\"\n      }, {\n        \"propName\": \"disabled\",\n        \"methodName\": \"disabledChanged\"\n      }];\n  }\n}\nconst shouldToggle = (rtl, checked, deltaX, margin) => {\n  if (checked) {\n    return (!rtl && margin > deltaX) || (rtl && -margin < deltaX);\n  }\n  else {\n    return (!rtl && -margin < deltaX) || (rtl && margin > deltaX);\n  }\n};\nlet toggleIds = 0;\n"],"mappings":"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"}
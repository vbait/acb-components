{"version":3,"names":["infiniteScrollContentIosCss","infiniteScrollContentMdCss","InfiniteScrollContent","prototype","componentDidLoad","this","loadingSpinner","undefined","mode","getIonMode","config","get","render","h","Host","class","_a","concat","name","loadingText","innerHTML","sanitizeDOMString"],"sources":["node_modules/@ionic/core/dist/collection/components/infinite-scroll-content/infinite-scroll-content.ios.css?tag=ion-infinite-scroll-content&mode=ios","node_modules/@ionic/core/dist/collection/components/infinite-scroll-content/infinite-scroll-content.md.css?tag=ion-infinite-scroll-content&mode=md","node_modules/@ionic/core/dist/collection/components/infinite-scroll-content/infinite-scroll-content.js"],"sourcesContent":["ion-infinite-scroll-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  min-height: 84px;\n  text-align: center;\n  user-select: none;\n}\n\n.infinite-loading {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 32px;\n  display: none;\n  width: 100%;\n}\n\n.infinite-loading-text {\n  margin-left: 32px;\n  margin-right: 32px;\n  margin-top: 4px;\n  margin-bottom: 0;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .infinite-loading-text {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: 32px;\n    margin-inline-start: 32px;\n    -webkit-margin-end: 32px;\n    margin-inline-end: 32px;\n  }\n}\n\n.infinite-scroll-loading ion-infinite-scroll-content > .infinite-loading {\n  display: block;\n}\n\n.infinite-scroll-content-ios .infinite-loading-text {\n  color: var(--ion-color-step-600, #666666);\n}\n\n.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-ios line,\n.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-small-ios line,\n.infinite-scroll-content-ios .infinite-loading-spinner .spinner-crescent circle {\n  stroke: var(--ion-color-step-600, #666666);\n}\n\n.infinite-scroll-content-ios .infinite-loading-spinner .spinner-bubbles circle,\n.infinite-scroll-content-ios .infinite-loading-spinner .spinner-circles circle,\n.infinite-scroll-content-ios .infinite-loading-spinner .spinner-dots circle {\n  fill: var(--ion-color-step-600, #666666);\n}","ion-infinite-scroll-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  min-height: 84px;\n  text-align: center;\n  user-select: none;\n}\n\n.infinite-loading {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 32px;\n  display: none;\n  width: 100%;\n}\n\n.infinite-loading-text {\n  margin-left: 32px;\n  margin-right: 32px;\n  margin-top: 4px;\n  margin-bottom: 0;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .infinite-loading-text {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: 32px;\n    margin-inline-start: 32px;\n    -webkit-margin-end: 32px;\n    margin-inline-end: 32px;\n  }\n}\n\n.infinite-scroll-loading ion-infinite-scroll-content > .infinite-loading {\n  display: block;\n}\n\n.infinite-scroll-content-md .infinite-loading-text {\n  color: var(--ion-color-step-600, #666666);\n}\n\n.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-md line,\n.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-small-md line,\n.infinite-scroll-content-md .infinite-loading-spinner .spinner-crescent circle {\n  stroke: var(--ion-color-step-600, #666666);\n}\n\n.infinite-scroll-content-md .infinite-loading-spinner .spinner-bubbles circle,\n.infinite-scroll-content-md .infinite-loading-spinner .spinner-circles circle,\n.infinite-scroll-content-md .infinite-loading-spinner .spinner-dots circle {\n  fill: var(--ion-color-step-600, #666666);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { config } from '../../global/config';\nimport { getIonMode } from '../../global/ionic-global';\nimport { sanitizeDOMString } from '../../utils/sanitization';\nexport class InfiniteScrollContent {\n  componentDidLoad() {\n    if (this.loadingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.loadingSpinner = config.get('infiniteLoadingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'crescent'));\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        // Used internally for styling\n        [`infinite-scroll-content-${mode}`]: true,\n      } }, h(\"div\", { class: \"infinite-loading\" }, this.loadingSpinner && (h(\"div\", { class: \"infinite-loading-spinner\" }, h(\"ion-spinner\", { name: this.loadingSpinner }))), this.loadingText !== undefined && (h(\"div\", { class: \"infinite-loading-text\", innerHTML: sanitizeDOMString(this.loadingText) })))));\n  }\n  static get is() { return \"ion-infinite-scroll-content\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"infinite-scroll-content.ios.scss\"],\n      \"md\": [\"infinite-scroll-content.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"infinite-scroll-content.ios.css\"],\n      \"md\": [\"infinite-scroll-content.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"loadingSpinner\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"SpinnerTypes | null\",\n          \"resolved\": \"\\\"bubbles\\\" | \\\"circles\\\" | \\\"circular\\\" | \\\"crescent\\\" | \\\"dots\\\" | \\\"lines\\\" | \\\"lines-sharp\\\" | \\\"lines-sharp-small\\\" | \\\"lines-small\\\" | null | undefined\",\n          \"references\": {\n            \"SpinnerTypes\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"An animated SVG spinner that shows while loading.\"\n        },\n        \"attribute\": \"loading-spinner\",\n        \"reflect\": false\n      },\n      \"loadingText\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | IonicSafeString\",\n          \"resolved\": \"IonicSafeString | string | undefined\",\n          \"references\": {\n            \"IonicSafeString\": {\n              \"location\": \"import\",\n              \"path\": \"../../utils/sanitization\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Optional text to display while loading.\\n`loadingText` can accept either plaintext or HTML as a string.\\nTo display characters normally reserved for HTML, they\\nmust be escaped. For example `<Ionic>` would become\\n`&lt;Ionic&gt;`\\n\\nFor more information: [Security Documentation](https://ionicframework.com/docs/faq/security)\"\n        },\n        \"attribute\": \"loading-text\",\n        \"reflect\": false\n      }\n    };\n  }\n}\n"],"mappings":"+LAAA,IAAMA,4BAA8B,m7CCApC,IAAMC,2BAA6B,06C,ICOtBC,sBAAqB,W,uCAChCA,EAAAC,UAAAC,iBAAA,WACE,GAAIC,KAAKC,iBAAmBC,UAAW,CACrC,IAAMC,EAAOC,WAAWJ,MACxBA,KAAKC,eAAiBI,OAAOC,IAAI,yBAA0BD,OAAOC,IAAI,UAAWH,IAAS,MAAQ,QAAU,Y,GAGhHN,EAAAC,UAAAS,OAAA,W,MACE,IAAMJ,EAAOC,WAAWJ,MACxB,OAAQQ,EAAEC,KAAM,CAAEC,OAAKC,EAAA,GACnBA,EAACR,GAAO,KAERQ,EAAC,2BAAAC,OAA2BT,IAAS,K,IAClCK,EAAE,MAAO,CAAEE,MAAO,oBAAsBV,KAAKC,gBAAmBO,EAAE,MAAO,CAAEE,MAAO,4BAA8BF,EAAE,cAAe,CAAEK,KAAMb,KAAKC,kBAAqBD,KAAKc,cAAgBZ,WAAcM,EAAE,MAAO,CAAEE,MAAO,wBAAyBK,UAAWC,kBAAkBhB,KAAKc,gB,WAb5P,G"}
{"version":3,"names":["accordionGroupIosCss","accordionGroupMdCss","AccordionGroup","class_1","hostRef","this","animated","disabled","readonly","expand","prototype","valueChanged","_a","value","multiple","Array","isArray","ionChange","emit","disabledChanged","getAccordions","accordions","sent","_i","accordions_1","length","accordion","readonlyChanged","accordions_2","onKeydown","ev","activeElement","document","activeAccordionHeader","closest","accordionEl","tagName","closestGroup","el","startingIndex","findIndex","a","key","findNextAccordion","findPreviousAccordion","undefined","focus","componentDidLoad","requestAccordionToggle","accordionValue","accordionExpand","groupValue","processedValue","valueExists","find","v","__spreadArray","filter","nextAccordion","prevAccordion","from","querySelectorAll","render","_b","mode","getIonMode","h","Host","class","concat","role"],"sources":["node_modules/@ionic/core/dist/collection/components/accordion-group/accordion-group.ios.css?tag=ion-accordion-group&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/accordion-group/accordion-group.md.css?tag=ion-accordion-group&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/accordion-group/accordion-group.js"],"sourcesContent":[":host {\n  display: block;\n}\n\n:host(.accordion-group-expand-inset) {\n  margin-left: 16px;\n  margin-right: 16px;\n  margin-top: 16px;\n  margin-bottom: 16px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host(.accordion-group-expand-inset) {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: 16px;\n    margin-inline-start: 16px;\n    -webkit-margin-end: 16px;\n    margin-inline-end: 16px;\n  }\n}\n\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded) {\n  border-bottom: none;\n}",":host {\n  display: block;\n}\n\n:host(.accordion-group-expand-inset) {\n  margin-left: 16px;\n  margin-right: 16px;\n  margin-top: 16px;\n  margin-bottom: 16px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host(.accordion-group-expand-inset) {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: 16px;\n    margin-inline-start: 16px;\n    -webkit-margin-end: 16px;\n    margin-inline-end: 16px;\n  }\n}\n\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  border-radius: 6px;\n}\n\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous) {\n  border-bottom-right-radius: 6px;\n  border-bottom-left-radius: 6px;\n}\n:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous), :host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-previous) {\n  border-bottom-right-radius: 6px;\n  border-bottom-left-radius: 6px;\n}\n\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next) {\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n}\n:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next), :host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-next) {\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n}\n\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion):first-of-type,\n:host(.accordion-group-expand-inset) ::slotted(ion-accordion):first-of-type {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { getIonMode } from '../../global/ionic-global';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class AccordionGroup {\n  constructor() {\n    /**\n     * If `true`, all accordions inside of the\n     * accordion group will animate when expanding\n     * or collapsing.\n     */\n    this.animated = true;\n    /**\n     * If `true`, the accordion group cannot be interacted with.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the accordion group cannot be interacted with,\n     * but does not alter the opacity.\n     */\n    this.readonly = false;\n    /**\n     * Describes the expansion behavior for each accordion.\n     * Possible values are `\"compact\"` and `\"inset\"`.\n     * Defaults to `\"compact\"`.\n     */\n    this.expand = 'compact';\n  }\n  valueChanged() {\n    const { value, multiple } = this;\n    /**\n     * If accordion group does not\n     * let multiple accordions be open\n     * at once, but user passes an array\n     * just grab the first value.\n     */\n    if (!multiple && Array.isArray(value)) {\n      this.value = value[0];\n    }\n    else {\n      this.ionChange.emit({ value: this.value });\n    }\n  }\n  async disabledChanged() {\n    const { disabled } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.disabled = disabled;\n    }\n  }\n  async readonlyChanged() {\n    const { readonly } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.readonly = readonly;\n    }\n  }\n  async onKeydown(ev) {\n    const activeElement = document.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    /**\n     * Make sure focus is in the header, not the body, of the accordion. This ensures\n     * that if there are any interactable elements in the body, their keyboard\n     * interaction doesn't get stolen by the accordion. Example: using up/down keys\n     * in ion-textarea.\n     */\n    const activeAccordionHeader = activeElement.closest('ion-accordion [slot=\"header\"]');\n    if (!activeAccordionHeader) {\n      return;\n    }\n    const accordionEl = activeElement.tagName === 'ION-ACCORDION' ? activeElement : activeElement.closest('ion-accordion');\n    if (!accordionEl) {\n      return;\n    }\n    const closestGroup = accordionEl.closest('ion-accordion-group');\n    if (closestGroup !== this.el) {\n      return;\n    }\n    // If the active accordion is not in the current array of accordions, do not do anything\n    const accordions = await this.getAccordions();\n    const startingIndex = accordions.findIndex((a) => a === accordionEl);\n    if (startingIndex === -1) {\n      return;\n    }\n    let accordion;\n    if (ev.key === 'ArrowDown') {\n      accordion = this.findNextAccordion(accordions, startingIndex);\n    }\n    else if (ev.key === 'ArrowUp') {\n      accordion = this.findPreviousAccordion(accordions, startingIndex);\n    }\n    else if (ev.key === 'Home') {\n      accordion = accordions[0];\n    }\n    else if (ev.key === 'End') {\n      accordion = accordions[accordions.length - 1];\n    }\n    if (accordion !== undefined && accordion !== activeElement) {\n      accordion.focus();\n    }\n  }\n  async componentDidLoad() {\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n    if (this.readonly) {\n      this.readonlyChanged();\n    }\n  }\n  /**\n   * @internal\n   */\n  async requestAccordionToggle(accordionValue, accordionExpand) {\n    const { multiple, value, readonly, disabled } = this;\n    if (readonly || disabled) {\n      return;\n    }\n    if (accordionExpand) {\n      /**\n       * If group accepts multiple values\n       * check to see if value is already in\n       * in values array. If not, add it\n       * to the array.\n       */\n      if (multiple) {\n        const groupValue = value !== null && value !== void 0 ? value : [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        const valueExists = processedValue.find((v) => v === accordionValue);\n        if (valueExists === undefined && accordionValue !== undefined) {\n          this.value = [...processedValue, accordionValue];\n        }\n      }\n      else {\n        this.value = accordionValue;\n      }\n    }\n    else {\n      /**\n       * If collapsing accordion, either filter the value\n       * out of the values array or unset the value.\n       */\n      if (multiple) {\n        const groupValue = value !== null && value !== void 0 ? value : [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        this.value = processedValue.filter((v) => v !== accordionValue);\n      }\n      else {\n        this.value = undefined;\n      }\n    }\n  }\n  findNextAccordion(accordions, startingIndex) {\n    const nextAccordion = accordions[startingIndex + 1];\n    if (nextAccordion === undefined) {\n      return accordions[0];\n    }\n    return nextAccordion;\n  }\n  findPreviousAccordion(accordions, startingIndex) {\n    const prevAccordion = accordions[startingIndex - 1];\n    if (prevAccordion === undefined) {\n      return accordions[accordions.length - 1];\n    }\n    return prevAccordion;\n  }\n  /**\n   * @internal\n   */\n  async getAccordions() {\n    return Array.from(this.el.querySelectorAll(':scope > ion-accordion'));\n  }\n  render() {\n    const { disabled, readonly, expand } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'accordion-group-disabled': disabled,\n        'accordion-group-readonly': readonly,\n        [`accordion-group-expand-${expand}`]: true,\n      }, role: \"presentation\" }, h(\"slot\", null)));\n  }\n  static get is() { return \"ion-accordion-group\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"accordion-group.ios.scss\"],\n      \"md\": [\"accordion-group.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"accordion-group.ios.css\"],\n      \"md\": [\"accordion-group.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"animated\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, all accordions inside of the\\naccordion group will animate when expanding\\nor collapsing.\"\n        },\n        \"attribute\": \"animated\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"multiple\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the accordion group can have multiple\\naccordion components expanded at the same time.\"\n        },\n        \"attribute\": \"multiple\",\n        \"reflect\": false\n      },\n      \"value\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string | string[] | null\",\n          \"resolved\": \"null | string | string[] | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The value of the accordion group.\"\n        },\n        \"attribute\": \"value\",\n        \"reflect\": false\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the accordion group cannot be interacted with.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"readonly\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the accordion group cannot be interacted with,\\nbut does not alter the opacity.\"\n        },\n        \"attribute\": \"readonly\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"expand\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'compact' | 'inset'\",\n          \"resolved\": \"\\\"compact\\\" | \\\"inset\\\"\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Describes the expansion behavior for each accordion.\\nPossible values are `\\\"compact\\\"` and `\\\"inset\\\"`.\\nDefaults to `\\\"compact\\\"`.\"\n        },\n        \"attribute\": \"expand\",\n        \"reflect\": false,\n        \"defaultValue\": \"'compact'\"\n      }\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"ionChange\",\n        \"name\": \"ionChange\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the value property has changed.\"\n        },\n        \"complexType\": {\n          \"original\": \"AccordionGroupChangeEventDetail\",\n          \"resolved\": \"AccordionGroupChangeEventDetail<any>\",\n          \"references\": {\n            \"AccordionGroupChangeEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"requestAccordionToggle\": {\n        \"complexType\": {\n          \"signature\": \"(accordionValue: string | undefined, accordionExpand: boolean) => Promise<void>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }, {\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"\",\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }]\n        }\n      },\n      \"getAccordions\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<HTMLIonAccordionElement[]>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"HTMLIonAccordionElement\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<HTMLIonAccordionElement[]>\"\n        },\n        \"docs\": {\n          \"text\": \"\",\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }]\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"value\",\n        \"methodName\": \"valueChanged\"\n      }, {\n        \"propName\": \"disabled\",\n        \"methodName\": \"disabledChanged\"\n      }, {\n        \"propName\": \"readonly\",\n        \"methodName\": \"readonlyChanged\"\n      }];\n  }\n  static get listeners() {\n    return [{\n        \"name\": \"keydown\",\n        \"method\": \"onKeydown\",\n        \"target\": undefined,\n        \"capture\": false,\n        \"passive\": false\n      }];\n  }\n}\n"],"mappings":"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"}
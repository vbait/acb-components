{"version":3,"names":["CACHED_MAP","getIconMap","window","Map","win","Ionicons","map","getUrl","i","url","getSrc","src","getName","name","icon","mode","ios","md","getNamedUrl","iconName","get","getAssetPath","concat","toLower","isSrc","isStr","trim","invalidChars","replace","str","length","test","val","toLowerCase","inheritAttributes","el","attributes","attributeObject","forEach","attr","hasAttribute","value","getAttribute","removeAttribute","isRTL","hostEl","dir","document","validateContent","svgContent","div","createElement","innerHTML","childNodes","nodeName","removeChild","svgElm","firstElementChild","svgClass","setAttribute","isValid","elm","nodeType","indexOf","isSvgDataUrl","startsWith","isEncodedDataUrl","ioniconContent","requests","parser","DOMParser","getSvgContent","sanitize","req","fetch","doc","parseFromString","svg","querySelector","set","outerHTML","Promise","resolve","then","rsp","ok","text","iconCss","Icon","hostRef","_this","this","inheritedAttributes","isVisible","getIonMode","lazy","hasAriaHidden","prototype","componentWillLoad","connectedCallback","waitUntilVisible","loadIcon","disconnectedCallback","io","disconnect","undefined","rootMargin","cb","IntersectionObserver","io_1","data","isIntersecting","observe","url_1","has","label","ariaLabel","render","_c","flipRtl","h","Host","Object","assign","role","class","_a","createColorClasses","color","_b","size","defineProperty","documentElement"],"sources":["node_modules/ionicons/dist/collection/components/icon/utils.js","node_modules/ionicons/dist/collection/components/icon/validate.js","node_modules/ionicons/dist/collection/components/icon/request.js","node_modules/ionicons/dist/collection/components/icon/icon.css?tag=ion-icon&encapsulation=shadow","node_modules/ionicons/dist/collection/components/icon/icon.js"],"sourcesContent":["import { getAssetPath } from '@stencil/core';\nlet CACHED_MAP;\nexport const getIconMap = () => {\n  if (typeof window === 'undefined') {\n    return new Map();\n  }\n  else {\n    if (!CACHED_MAP) {\n      const win = window;\n      win.Ionicons = win.Ionicons || {};\n      CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n    }\n    return CACHED_MAP;\n  }\n};\nexport const addIcons = (icons) => {\n  const map = getIconMap();\n  Object.keys(icons).forEach(name => map.set(name, icons[name]));\n};\nexport const getUrl = (i) => {\n  let url = getSrc(i.src);\n  if (url) {\n    return url;\n  }\n  url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n  if (url) {\n    return getNamedUrl(url);\n  }\n  if (i.icon) {\n    url = getSrc(i.icon);\n    if (url) {\n      return url;\n    }\n    url = getSrc(i.icon[i.mode]);\n    if (url) {\n      return url;\n    }\n  }\n  return null;\n};\nconst getNamedUrl = (iconName) => {\n  const url = getIconMap().get(iconName);\n  if (url) {\n    return url;\n  }\n  return getAssetPath(`svg/${iconName}.svg`);\n};\nexport const getName = (iconName, icon, mode, ios, md) => {\n  // default to \"md\" if somehow the mode wasn't set\n  mode = (mode && toLower(mode)) === 'ios' ? 'ios' : 'md';\n  // if an icon was passed in using the ios or md attributes\n  // set the iconName to whatever was passed in\n  if (ios && mode === 'ios') {\n    iconName = toLower(ios);\n  }\n  else if (md && mode === 'md') {\n    iconName = toLower(md);\n  }\n  else {\n    if (!iconName && icon && !isSrc(icon)) {\n      iconName = icon;\n    }\n    if (isStr(iconName)) {\n      iconName = toLower(iconName);\n    }\n  }\n  if (!isStr(iconName) || iconName.trim() === '') {\n    return null;\n  }\n  // only allow alpha characters and dash\n  const invalidChars = iconName.replace(/[a-z]|-|\\d/gi, '');\n  if (invalidChars !== '') {\n    return null;\n  }\n  return iconName;\n};\nexport const getSrc = (src) => {\n  if (isStr(src)) {\n    src = src.trim();\n    if (isSrc(src)) {\n      return src;\n    }\n  }\n  return null;\n};\nexport const isSrc = (str) => str.length > 0 && /(\\/|\\.)/.test(str);\nexport const isStr = (val) => typeof val === 'string';\nexport const toLower = (val) => val.toLowerCase();\n/**\n * Elements inside of web components sometimes need to inherit global attributes\n * set on the host. For example, the inner input in `ion-input` should inherit\n * the `title` attribute that developers set directly on `ion-input`. This\n * helper function should be called in componentWillLoad and assigned to a variable\n * that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nexport const inheritAttributes = (el, attributes = []) => {\n  const attributeObject = {};\n  attributes.forEach(attr => {\n    if (el.hasAttribute(attr)) {\n      const value = el.getAttribute(attr);\n      if (value !== null) {\n        attributeObject[attr] = el.getAttribute(attr);\n      }\n      el.removeAttribute(attr);\n    }\n  });\n  return attributeObject;\n};\n/**\n * Returns `true` if the document or host element\n * has a `dir` set to `rtl`. The host value will always\n * take priority over the root document value.\n */\nexport const isRTL = (hostEl) => {\n  if (hostEl) {\n    if (hostEl.dir !== '') {\n      return hostEl.dir.toLowerCase() === 'rtl';\n    }\n  }\n  return (document === null || document === void 0 ? void 0 : document.dir.toLowerCase()) === 'rtl';\n};\n","import { isStr } from './utils';\nexport const validateContent = (svgContent) => {\n  const div = document.createElement('div');\n  div.innerHTML = svgContent;\n  // setup this way to ensure it works on our buddy IE\n  for (let i = div.childNodes.length - 1; i >= 0; i--) {\n    if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n      div.removeChild(div.childNodes[i]);\n    }\n  }\n  // must only have 1 root element\n  const svgElm = div.firstElementChild;\n  if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n    const svgClass = svgElm.getAttribute('class') || '';\n    svgElm.setAttribute('class', (svgClass + ' s-ion-icon').trim());\n    // root element must be an svg\n    // lets double check we've got valid elements\n    // do not allow scripts\n    if (isValid(svgElm)) {\n      return div.innerHTML;\n    }\n  }\n  return '';\n};\nexport const isValid = (elm) => {\n  if (elm.nodeType === 1) {\n    if (elm.nodeName.toLowerCase() === 'script') {\n      return false;\n    }\n    for (let i = 0; i < elm.attributes.length; i++) {\n      const name = elm.attributes[i].name;\n      if (isStr(name) && name.toLowerCase().indexOf('on') === 0) {\n        return false;\n      }\n    }\n    for (let i = 0; i < elm.childNodes.length; i++) {\n      if (!isValid(elm.childNodes[i])) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\nexport const isSvgDataUrl = (url) => url.startsWith('data:image/svg+xml');\nexport const isEncodedDataUrl = (url) => url.indexOf(';utf8,') !== -1;\n","import { isEncodedDataUrl, isSvgDataUrl, validateContent } from './validate';\nexport const ioniconContent = new Map();\nconst requests = new Map();\nlet parser = new DOMParser();\nexport const getSvgContent = (url, sanitize) => {\n  // see if we already have a request for this url\n  let req = requests.get(url);\n  if (!req) {\n    if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {\n      /**\n       * If the url is a data url of an svg, then try to parse it\n       * with the DOMParser. This works with content security policies enabled.\n       */\n      if (isSvgDataUrl(url) && isEncodedDataUrl(url)) {\n        if (!parser) {\n          /**\n           * Create an instance of the DOM parser. This creates a single\n           * parser instance for the entire app, which is more efficient.\n           */\n          parser = new DOMParser();\n        }\n        const doc = parser.parseFromString(url, 'text/html');\n        const svg = doc.querySelector('svg');\n        if (svg) {\n          ioniconContent.set(url, svg.outerHTML);\n        }\n        return Promise.resolve();\n      }\n      else {\n        // we don't already have a request\n        req = fetch(url).then((rsp) => {\n          if (rsp.ok) {\n            return rsp.text().then((svgContent) => {\n              if (svgContent && sanitize !== false) {\n                svgContent = validateContent(svgContent);\n              }\n              ioniconContent.set(url, svgContent || '');\n            });\n          }\n          ioniconContent.set(url, '');\n        });\n        // cache for the same requests\n        requests.set(url, req);\n      }\n    }\n    else {\n      // set to empty for ssr scenarios and resolve promise\n      ioniconContent.set(url, '');\n      return Promise.resolve();\n    }\n  }\n  return req;\n};\n",":host {\n  display: inline-block;\n\n  width: 1em;\n  height: 1em;\n\n  contain: strict;\n\n  fill: currentColor;\n\n  box-sizing: content-box !important;\n}\n\n:host .ionicon {\n  stroke: currentColor;\n}\n\n.ionicon-fill-none {\n  fill: none;\n}\n\n.ionicon-stroke-width {\n  stroke-width: 32px;\n  stroke-width: var(--ionicon-stroke-width, 32px);\n}\n\n.icon-inner,\n.ionicon,\nsvg {\n  display: block;\n\n  height: 100%;\n  width: 100%;\n}\n\n\n/* Icon RTL\n * -----------------------------------------------------------\n */\n\n:host(.flip-rtl) .icon-inner {\n  transform: scaleX(-1);\n}\n\n\n/* Icon Sizes\n * -----------------------------------------------------------\n */\n\n:host(.icon-small) {\n  font-size: 18px !important;\n}\n\n:host(.icon-large){\n  font-size: 32px !important;\n}\n\n\n/* Icon Colors\n * -----------------------------------------------------------\n */\n\n:host(.ion-color) {\n  color: var(--ion-color-base) !important;\n}\n\n:host(.ion-color-primary) {\n  --ion-color-base: var(--ion-color-primary, #3880ff);\n}\n\n:host(.ion-color-secondary) {\n  --ion-color-base: var(--ion-color-secondary, #0cd1e8);\n}\n\n:host(.ion-color-tertiary) {\n  --ion-color-base: var(--ion-color-tertiary, #f4a942);\n}\n\n:host(.ion-color-success) {\n  --ion-color-base: var(--ion-color-success, #10dc60);\n}\n\n:host(.ion-color-warning) {\n  --ion-color-base: var(--ion-color-warning, #ffce00);\n}\n\n:host(.ion-color-danger) {\n  --ion-color-base: var(--ion-color-danger, #f14141);\n}\n\n:host(.ion-color-light) {\n  --ion-color-base: var(--ion-color-light, #f4f5f8);\n}\n\n:host(.ion-color-medium) {\n  --ion-color-base: var(--ion-color-medium, #989aa2);\n}\n\n:host(.ion-color-dark) {\n  --ion-color-base: var(--ion-color-dark, #222428);\n}\n","import { Build, Host, h } from '@stencil/core';\nimport { getSvgContent, ioniconContent } from './request';\nimport { getName, getUrl, inheritAttributes, isRTL } from './utils';\nexport class Icon {\n  constructor() {\n    this.iconName = null;\n    this.inheritedAttributes = {};\n    this.isVisible = false;\n    /**\n     * The mode determines which platform styles to use.\n     */\n    this.mode = getIonMode();\n    /**\n     * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\n     * Default, `false`.\n     */\n    this.lazy = false;\n    /**\n     * When set to `false`, SVG content that is HTTP fetched will not be checked\n     * if the response SVG content has any `<script>` elements, or any attributes\n     * that start with `on`, such as `onclick`.\n     * @default true\n     */\n    this.sanitize = true;\n    this.hasAriaHidden = () => {\n      const { el } = this;\n      return el.hasAttribute('aria-hidden') && el.getAttribute('aria-hidden') === 'true';\n    };\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n  }\n  connectedCallback() {\n    // purposely do not return the promise here because loading\n    // the svg file should not hold up loading the app\n    // only load the svg if it's visible\n    this.waitUntilVisible(this.el, '50px', () => {\n      this.isVisible = true;\n      this.loadIcon();\n    });\n  }\n  disconnectedCallback() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  waitUntilVisible(el, rootMargin, cb) {\n    if (Build.isBrowser && this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n      const io = (this.io = new window.IntersectionObserver((data) => {\n        if (data[0].isIntersecting) {\n          io.disconnect();\n          this.io = undefined;\n          cb();\n        }\n      }, { rootMargin }));\n      io.observe(el);\n    }\n    else {\n      // browser doesn't support IntersectionObserver\n      // so just fallback to always show it\n      cb();\n    }\n  }\n  loadIcon() {\n    if (Build.isBrowser && this.isVisible) {\n      const url = getUrl(this);\n      if (url) {\n        if (ioniconContent.has(url)) {\n          // sync if it's already loaded\n          this.svgContent = ioniconContent.get(url);\n        }\n        else {\n          // async if it hasn't been loaded\n          getSvgContent(url, this.sanitize).then(() => (this.svgContent = ioniconContent.get(url)));\n        }\n      }\n    }\n    const label = (this.iconName = getName(this.name, this.icon, this.mode, this.ios, this.md));\n    /**\n     * Come up with a default label\n     * in case user does not provide their own.\n     */\n    if (label) {\n      this.ariaLabel = label.replace(/\\-/g, ' ');\n    }\n  }\n  render() {\n    const { iconName, ariaLabel, el, inheritedAttributes } = this;\n    const mode = this.mode || 'md';\n    const flipRtl = this.flipRtl ||\n      (iconName && (iconName.indexOf('arrow') > -1 || iconName.indexOf('chevron') > -1) && this.flipRtl !== false);\n    /**\n     * Only set the aria-label if a) we have generated\n     * one for the icon and if aria-hidden is not set to \"true\".\n     * If developer wants to set their own aria-label, then\n     * inheritedAttributes down below will override whatever\n     * default label we have set.\n     */\n    return (h(Host, Object.assign({ \"aria-label\": ariaLabel !== undefined && !this.hasAriaHidden() ? ariaLabel : null, role: \"img\", class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(this.color)), { [`icon-${this.size}`]: !!this.size, 'flip-rtl': !!flipRtl && isRTL(el) }) }, inheritedAttributes), Build.isBrowser && this.svgContent ? (h(\"div\", { class: \"icon-inner\", innerHTML: this.svgContent })) : (h(\"div\", { class: \"icon-inner\" }))));\n  }\n  static get is() { return \"ion-icon\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"icon.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"icon.css\"]\n    };\n  }\n  static get assetsDirs() { return [\"svg\"]; }\n  static get properties() {\n    return {\n      \"mode\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The mode determines which platform styles to use.\"\n        },\n        \"attribute\": \"mode\",\n        \"reflect\": false,\n        \"defaultValue\": \"getIonMode()\"\n      },\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color to use for the background of the item.\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": false\n      },\n      \"ios\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies which icon to use on `ios` mode.\"\n        },\n        \"attribute\": \"ios\",\n        \"reflect\": false\n      },\n      \"md\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies which icon to use on `md` mode.\"\n        },\n        \"attribute\": \"md\",\n        \"reflect\": false\n      },\n      \"flipRtl\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies whether the icon should horizontally flip when `dir` is `\\\"rtl\\\"`.\"\n        },\n        \"attribute\": \"flip-rtl\",\n        \"reflect\": false\n      },\n      \"name\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies which icon to use from the built-in set of icons.\"\n        },\n        \"attribute\": \"name\",\n        \"reflect\": true\n      },\n      \"src\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the exact `src` of an SVG file to use.\"\n        },\n        \"attribute\": \"src\",\n        \"reflect\": false\n      },\n      \"icon\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"any\",\n          \"resolved\": \"any\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"A combination of both `name` and `src`. If a `src` url is detected\\nit will set the `src` property. Otherwise it assumes it's a built-in named\\nSVG and set the `name` property.\"\n        },\n        \"attribute\": \"icon\",\n        \"reflect\": false\n      },\n      \"size\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The size of the icon.\\nAvailable options are: `\\\"small\\\"` and `\\\"large\\\"`.\"\n        },\n        \"attribute\": \"size\",\n        \"reflect\": false\n      },\n      \"lazy\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\\nDefault, `false`.\"\n        },\n        \"attribute\": \"lazy\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"sanitize\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"true\"\n            }],\n          \"text\": \"When set to `false`, SVG content that is HTTP fetched will not be checked\\nif the response SVG content has any `<script>` elements, or any attributes\\nthat start with `on`, such as `onclick`.\"\n        },\n        \"attribute\": \"sanitize\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"svgContent\": {},\n      \"isVisible\": {},\n      \"ariaLabel\": {}\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"name\",\n        \"methodName\": \"loadIcon\"\n      }, {\n        \"propName\": \"src\",\n        \"methodName\": \"loadIcon\"\n      }, {\n        \"propName\": \"icon\",\n        \"methodName\": \"loadIcon\"\n      }, {\n        \"propName\": \"ios\",\n        \"methodName\": \"loadIcon\"\n      }, {\n        \"propName\": \"md\",\n        \"methodName\": \"loadIcon\"\n      }];\n  }\n}\nconst getIonMode = () => (Build.isBrowser && typeof document !== 'undefined' && document.documentElement.getAttribute('mode')) || 'md';\nconst createColorClasses = (color) => {\n  return color\n    ? {\n      'ion-color': true,\n      [`ion-color-${color}`]: true,\n    }\n    : null;\n};\n"],"mappings":"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"}
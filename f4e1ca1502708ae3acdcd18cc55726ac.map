{"version":3,"names":["RaulTimePicker","hostRef","this","hours","options","startTime","endTime","step","disabledHours","disabled","label","placeholder","textInput","twentyFourHour","prototype","handleMinTimeChange","value","generateOptions","handleValueChange","newVal","handleStartTimeChange","generateHours","handleEndTimeChange","handleStepChange","handleDisabledHoursChange","_this","map","option","includes","componentWillLoad","substr","concat","handleRaulChange","event","stopPropagation","isIE11","navigator","userAgent","search","detail","onChange","toLowerCase","isNaN","Number","raulChange","emit","isValid","parsedStartHour","parsedHours","parsedEndHour","startHour","parsedHour","endHour","f","undefined","h","index","initStartHour","initStartMinutes","currentIndex","hour","format","currentHour","m","setHours","toString","slice","minutes","minutesTillEnd","stepMinutes","currentHourMinutes","totalHoursCount","totalMinutesCount","i","length","timeString","isDisabled","isPastTime","minTime","isEmpty","_currentHour","split","timeDifference","push","text","indexOf","totalHours","totalMinutes","currentMinutes","substring","time","firstTime","secondTime","parseTimeString","Date","parse","render","onRaulChange","e","variant","hint","error","searchable"],"sources":["node_modules/@realpage/raul3/collection/components/elements/raul-time-picker/raul-time-picker.js"],"sourcesContent":["import { h } from \"@stencil/core\";\r\nexport class RaulTimePicker {\r\n    constructor() {\r\n        this.hours = [];\r\n        /**\r\n         * Options object passed as prop to select component.\r\n         */\r\n        this.options = [];\r\n        /**\r\n         * Start time, also supports 24h format `12:00`.\r\n         */\r\n        this.startTime = '12:00 AM';\r\n        /**\r\n         * End time, also supports 24h format `23:00`.\r\n         */\r\n        this.endTime = '11:00 PM';\r\n        /**\r\n         * Time intervals in minutes.\r\n         */\r\n        this.step = 0;\r\n        /**\r\n         * Disabled hours in the select drop-down.\r\n         */\r\n        this.disabledHours = [];\r\n        /**\r\n         * If `true`, the user cannot interact with the select.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * The text label.\r\n         */\r\n        this.label = null;\r\n        /**\r\n         * The text to display when the select value is empty.\r\n         */\r\n        this.placeholder = 'Select an hour';\r\n        /**\r\n         * Add text input support. (v0.32+)\r\n         */\r\n        this.textInput = false;\r\n        /**\r\n         * Sets 24 hour support. (v0.32+) Will automatically be set when setting startTime and endTime if AM or PM are included in the string.\r\n         */\r\n        this.twentyFourHour = false;\r\n    }\r\n    handleMinTimeChange() {\r\n        this.options = [];\r\n        this.value = '';\r\n        this.generateOptions();\r\n    }\r\n    handleValueChange(newVal) {\r\n        this.value = newVal;\r\n    }\r\n    handleStartTimeChange(newVal) {\r\n        this.startTime = newVal;\r\n        this.hours = [];\r\n        this.options = [];\r\n        this.value = '';\r\n        this.generateHours();\r\n        this.generateOptions();\r\n    }\r\n    handleEndTimeChange(newVal) {\r\n        this.endTime = newVal;\r\n        this.hours = [];\r\n        this.options = [];\r\n        this.value = '';\r\n        this.generateHours();\r\n        this.generateOptions();\r\n    }\r\n    handleStepChange() {\r\n        this.options = [];\r\n        this.hours = [];\r\n        this.value = '';\r\n        this.generateHours();\r\n        this.generateOptions();\r\n    }\r\n    handleDisabledHoursChange() {\r\n        this.options = this.options.map(option => {\r\n            if (this.disabledHours.includes(option.value)) {\r\n                option.disabled = true;\r\n            }\r\n            return option;\r\n        });\r\n    }\r\n    componentWillLoad() {\r\n        this.generateHours();\r\n        this.generateOptions();\r\n        if (this.textInput && this.value && this.value !== '' && this.value.substr(0, 2).includes(':'))\r\n            this.value = `0${this.value}`;\r\n        if (this.textInput && this.startTime && !(this.startTime.includes('AM') || this.startTime.includes('PM')))\r\n            this.twentyFourHour = true;\r\n    }\r\n    handleRaulChange(event) {\r\n        event.stopPropagation();\r\n        const isIE11 = (navigator.userAgent.search('Trident/') > -1);\r\n        if (event.detail.value && event.detail.onChange && isIE11) {\r\n            if (!this.twentyFourHour && event.detail.value.toLowerCase().includes('am') || event.detail.value.toLowerCase().includes('pm')) {\r\n                if (!isNaN(Number(event.detail.value.substr(0, 2))) && Number(event.detail.value.substr(0, 2)) > 9 && Number(event.detail.value.substr(0, 2)) < 13) {\r\n                    this.value = `${event.detail.value.substr(0, 5)}${event.detail.value.toLowerCase().includes('am') ? ' AM' : event.detail.value.toLowerCase().includes('pm') ? ' PM' : ''}`;\r\n                }\r\n            }\r\n            else {\r\n                if (Number(event.detail.value.substr(0, 1)) > 0 && isNaN(Number(event.detail.value.substr(0, 2)))) {\r\n                    this.value = `0${event.detail.value.substr(0, 4)}${this.twentyFourHour ? '' : event.detail.value.toLowerCase().includes('am') ? ' AM' : event.detail.value.toLowerCase().includes('pm') ? ' PM' : ''}`;\r\n                }\r\n                if (!isNaN(Number(event.detail.value.substr(0, 2))) && Number(event.detail.value.substr(0, 2)) > 9 && Number(event.detail.value.substr(0, 2)) < 24) {\r\n                    this.value = `${event.detail.value.substr(0, 5)}`;\r\n                }\r\n            }\r\n            this.raulChange.emit({ value: this.value, isValid: this.isValid(this.value) });\r\n        }\r\n        else {\r\n            this.value = event.detail.value;\r\n            this.raulChange.emit({ value: this.value, isValid: this.isValid(this.value) });\r\n        }\r\n    }\r\n    generateHours() {\r\n        const parsedStartHour = this.parsedHours(this.startTime), parsedEndHour = this.parsedHours(this.endTime);\r\n        let startHour = new parsedHour(parsedStartHour[0], parsedStartHour[1], parsedStartHour[2]);\r\n        let endHour = new parsedHour(parsedEndHour[0], parsedEndHour[1], parsedEndHour[2]);\r\n        if (startHour.f === undefined && endHour.f === undefined) {\r\n            if (startHour.h < 0)\r\n                startHour.h = 0;\r\n            if (endHour.h > 23)\r\n                endHour.h = 23;\r\n            startHour.index = startHour.h;\r\n            endHour.index = endHour.h;\r\n            if ((startHour.h <= 23 || startHour.h === 0) && endHour.h === 0) {\r\n                endHour.index = 24;\r\n            }\r\n        }\r\n        else {\r\n            if (startHour.f === 'AM') {\r\n                startHour.index = startHour.h === 12 ? 0 : startHour.h;\r\n            }\r\n            else {\r\n                startHour.index = startHour.h === 12 ? 12 : startHour.h + 12;\r\n            }\r\n            if (endHour.f === 'AM') {\r\n                endHour.index = endHour.h === 12 ? 0 : endHour.h;\r\n                if ((startHour.f === 'PM' || startHour.f === 'AM' && startHour.h === 12) && endHour.h === 12) {\r\n                    endHour.index = 24;\r\n                }\r\n            }\r\n            else {\r\n                endHour.index = endHour.h === 12 ? 12 : endHour.h + 12;\r\n            }\r\n        }\r\n        let initStartHour = false, initStartMinutes = false;\r\n        for (let currentIndex = startHour.index; currentIndex <= endHour.index; currentIndex++) {\r\n            let hour = currentIndex, format, currentHour;\r\n            if (startHour.f === undefined || endHour.f === undefined) {\r\n                format = '';\r\n            }\r\n            else {\r\n                format = currentIndex < 12 ? 'AM' : 'PM';\r\n            }\r\n            if (!initStartHour) {\r\n                currentHour = new parsedHour(startHour.h, startHour.m, startHour.f);\r\n                initStartHour = true;\r\n            }\r\n            else {\r\n                if (format === 'PM' && hour > 12) {\r\n                    if (hour === 24) {\r\n                        format = 'AM';\r\n                    }\r\n                    hour -= 12;\r\n                }\r\n                else if (format === '' && hour === 24) {\r\n                    hour = 0;\r\n                }\r\n                currentHour = new parsedHour(hour, '00', format);\r\n            }\r\n            this.setHours(currentHour.h.toString(), ('0' + currentHour.m.toString()).slice(-2), currentHour.f);\r\n            if (this.step > 0) {\r\n                let minutes, minutesTillEnd = 59;\r\n                if (!initStartMinutes) {\r\n                    minutes = currentHour.m + this.step;\r\n                    initStartMinutes = true;\r\n                }\r\n                else {\r\n                    minutes = this.step;\r\n                }\r\n                if (currentIndex === startHour.index) {\r\n                    hour = startHour.h;\r\n                }\r\n                else if (currentIndex === endHour.index) {\r\n                    minutesTillEnd = endHour.m;\r\n                }\r\n                for (let stepMinutes = 0; minutes <= minutesTillEnd; stepMinutes++) {\r\n                    let currentHourMinutes = new parsedHour(hour, minutes, format);\r\n                    this.setHours(currentHourMinutes.h.toString(), ('0' + currentHourMinutes.m.toString()).slice(-2), currentHourMinutes.f);\r\n                    minutes += this.step;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    generateOptions() {\r\n        let currentHour = 0, totalHoursCount = 0, totalMinutesCount = 0;\r\n        let options = [];\r\n        for (let i = 0; i < this.hours.length; i++) {\r\n            let timeString = this.textInput && this.hours[i].substr(0, 2).includes(':') ? `${'0' + this.hours[i]}` : this.hours[i];\r\n            const isDisabled = this.isPastTime(timeString, this.minTime);\r\n            if (!isDisabled && !this.isEmpty(this.minTime)) {\r\n                const _currentHour = +timeString.split(':')[0];\r\n                if (currentHour !== _currentHour) {\r\n                    currentHour = _currentHour;\r\n                    totalHoursCount++;\r\n                }\r\n                timeString += this.timeDifference(totalHoursCount - 1, totalMinutesCount, timeString.split(':')[1]);\r\n                totalMinutesCount += this.step;\r\n            }\r\n            options.push({\r\n                value: this.textInput && this.hours[i].substr(0, 2).includes(':') ? `${'0' + this.hours[i]}` : this.hours[i],\r\n                text: timeString,\r\n                disabled: isDisabled || this.disabledHours.indexOf(this.hours[i]) > -1\r\n            });\r\n        }\r\n        this.options = options;\r\n    }\r\n    timeDifference(totalHours, totalMinutes, currentMinutes) {\r\n        if (totalHours === 0) {\r\n            return ` (${totalMinutes} mins)`;\r\n        }\r\n        else if (totalMinutes === 0 && totalHours === 1 || totalMinutes === 60) {\r\n            return ` (1:00 hr)`;\r\n        }\r\n        return ` (${totalHours}:${currentMinutes.substring(0, 2)} hrs)`;\r\n    }\r\n    parsedHours(time) {\r\n        return time.split(/\\:|\\ /);\r\n    }\r\n    isPastTime(firstTime, secondTime) {\r\n        return this.parseTimeString(firstTime) < this.parseTimeString(secondTime);\r\n    }\r\n    parseTimeString(value) {\r\n        return Date.parse(`01/01/2000 ${value}`);\r\n    }\r\n    setHours(hours, minutes, format = '') {\r\n        this.hours.push(`${hours}:${minutes} ${format}`);\r\n    }\r\n    isEmpty(value) {\r\n        return value === '' || value === ' ' || value === undefined;\r\n    }\r\n    isValid(value) {\r\n        if (this.twentyFourHour)\r\n            return value && value.includes(':') && value.length === 5 && !isNaN(Number(value.substr(0, 2))) && !isNaN(Number(value.substr(3, 3)));\r\n        return value && value.includes(':') && !isNaN(Number(value.substr(0, 2))) && value.length === 8 && !isNaN(Number(value.substr(3, 3))) && (value.toLowerCase().includes(' am') || value.toLowerCase().includes(' pm'));\r\n    }\r\n    render() {\r\n        return (h(\"raul-select\", { onRaulChange: e => this.handleRaulChange(e), variant: this.twentyFourHour ? 'time-picker-twenty-four' : 'time-picker', disabled: this.disabled, options: this.options, value: (navigator.userAgent.search('Trident/') > -1) ? this.value : this.value ? this.value : this.twentyFourHour ? '--:--' : '--:-- --', label: this.label, hint: this.hint, placeholder: (navigator.userAgent.search('Trident/') > -1) && this.textInput ? this.twentyFourHour ? '--:--' : '--:-- --' : this.placeholder, error: this.error, \"text-input\": this.textInput, searchable: true }));\r\n    }\r\n    static get is() { return \"raul-time-picker\"; }\r\n    static get properties() { return {\r\n        \"startTime\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Start time, also supports 24h format `12:00`.\"\r\n            },\r\n            \"attribute\": \"start-time\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"'12:00 AM'\"\r\n        },\r\n        \"endTime\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"End time, also supports 24h format `23:00`.\"\r\n            },\r\n            \"attribute\": \"end-time\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"'11:00 PM'\"\r\n        },\r\n        \"step\": {\r\n            \"type\": \"number\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"number\",\r\n                \"resolved\": \"number\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Time intervals in minutes.\"\r\n            },\r\n            \"attribute\": \"step\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"0\"\r\n        },\r\n        \"minTime\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Minimum time, any time before this time will be disabled.\"\r\n            },\r\n            \"attribute\": \"min-time\",\r\n            \"reflect\": false\r\n        },\r\n        \"disabledHours\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string[]\",\r\n                \"resolved\": \"string[]\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Disabled hours in the select drop-down.\"\r\n            },\r\n            \"defaultValue\": \"[]\"\r\n        },\r\n        \"disabled\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"If `true`, the user cannot interact with the select.\"\r\n            },\r\n            \"attribute\": \"disabled\",\r\n            \"reflect\": true,\r\n            \"defaultValue\": \"false\"\r\n        },\r\n        \"label\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"The text label.\"\r\n            },\r\n            \"attribute\": \"label\",\r\n            \"reflect\": true,\r\n            \"defaultValue\": \"null\"\r\n        },\r\n        \"hint\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Optional hint text.\"\r\n            },\r\n            \"attribute\": \"hint\",\r\n            \"reflect\": false\r\n        },\r\n        \"error\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Makes the select visually invalid and shows the feedback message.\"\r\n            },\r\n            \"attribute\": \"error\",\r\n            \"reflect\": false\r\n        },\r\n        \"placeholder\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"The text to display when the select value is empty.\"\r\n            },\r\n            \"attribute\": \"placeholder\",\r\n            \"reflect\": true,\r\n            \"defaultValue\": \"'Select an hour'\"\r\n        },\r\n        \"value\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": true,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"The value of the select.\"\r\n            },\r\n            \"attribute\": \"value\",\r\n            \"reflect\": false\r\n        },\r\n        \"textInput\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": true,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Add text input support. (v0.32+)\"\r\n            },\r\n            \"attribute\": \"text-input\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"false\"\r\n        },\r\n        \"twentyFourHour\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": true,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Sets 24 hour support. (v0.32+) Will automatically be set when setting startTime and endTime if AM or PM are included in the string.\"\r\n            },\r\n            \"attribute\": \"twenty-four-hour\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"false\"\r\n        }\r\n    }; }\r\n    static get states() { return {\r\n        \"options\": {}\r\n    }; }\r\n    static get events() { return [{\r\n            \"method\": \"raulChange\",\r\n            \"name\": \"raulChange\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Emitted when the select value changes. As of v0.32 isValid boolean is available for time format validation.\"\r\n            },\r\n            \"complexType\": {\r\n                \"original\": \"any\",\r\n                \"resolved\": \"any\",\r\n                \"references\": {}\r\n            }\r\n        }]; }\r\n    static get watchers() { return [{\r\n            \"propName\": \"minTime\",\r\n            \"methodName\": \"handleMinTimeChange\"\r\n        }, {\r\n            \"propName\": \"value\",\r\n            \"methodName\": \"handleValueChange\"\r\n        }, {\r\n            \"propName\": \"startTime\",\r\n            \"methodName\": \"handleStartTimeChange\"\r\n        }, {\r\n            \"propName\": \"endTime\",\r\n            \"methodName\": \"handleEndTimeChange\"\r\n        }, {\r\n            \"propName\": \"step\",\r\n            \"methodName\": \"handleStepChange\"\r\n        }, {\r\n            \"propName\": \"disabledHours\",\r\n            \"methodName\": \"handleDisabledHoursChange\"\r\n        }]; }\r\n}\r\nclass parsedHour {\r\n    constructor(hour, minutes, format) {\r\n        this.h = +hour;\r\n        this.m = +minutes;\r\n        this.f = format;\r\n        this.index = -1;\r\n    }\r\n}\r\n"],"mappings":"8EACaA,eAAc,WACvB,SAAAA,EAAAC,G,0EACIC,KAAKC,MAAQ,GAIbD,KAAKE,QAAU,GAIfF,KAAKG,UAAY,WAIjBH,KAAKI,QAAU,WAIfJ,KAAKK,KAAO,EAIZL,KAAKM,cAAgB,GAIrBN,KAAKO,SAAW,MAIhBP,KAAKQ,MAAQ,KAIbR,KAAKS,YAAc,iBAInBT,KAAKU,UAAY,MAIjBV,KAAKW,eAAiB,K,CAE1Bb,EAAAc,UAAAC,oBAAA,WACIb,KAAKE,QAAU,GACfF,KAAKc,MAAQ,GACbd,KAAKe,iB,EAETjB,EAAAc,UAAAI,kBAAA,SAAkBC,GACdjB,KAAKc,MAAQG,C,EAEjBnB,EAAAc,UAAAM,sBAAA,SAAsBD,GAClBjB,KAAKG,UAAYc,EACjBjB,KAAKC,MAAQ,GACbD,KAAKE,QAAU,GACfF,KAAKc,MAAQ,GACbd,KAAKmB,gBACLnB,KAAKe,iB,EAETjB,EAAAc,UAAAQ,oBAAA,SAAoBH,GAChBjB,KAAKI,QAAUa,EACfjB,KAAKC,MAAQ,GACbD,KAAKE,QAAU,GACfF,KAAKc,MAAQ,GACbd,KAAKmB,gBACLnB,KAAKe,iB,EAETjB,EAAAc,UAAAS,iBAAA,WACIrB,KAAKE,QAAU,GACfF,KAAKC,MAAQ,GACbD,KAAKc,MAAQ,GACbd,KAAKmB,gBACLnB,KAAKe,iB,EAETjB,EAAAc,UAAAU,0BAAA,eAAAC,EAAAvB,KACIA,KAAKE,QAAUF,KAAKE,QAAQsB,KAAI,SAAAC,GAC5B,GAAIF,EAAKjB,cAAcoB,SAASD,EAAOX,OAAQ,CAC3CW,EAAOlB,SAAW,I,CAEtB,OAAOkB,C,KAGf3B,EAAAc,UAAAe,kBAAA,WACI3B,KAAKmB,gBACLnB,KAAKe,kBACL,GAAIf,KAAKU,WAAaV,KAAKc,OAASd,KAAKc,QAAU,IAAMd,KAAKc,MAAMc,OAAO,EAAG,GAAGF,SAAS,KACtF1B,KAAKc,MAAQ,IAAAe,OAAI7B,KAAKc,OAC1B,GAAId,KAAKU,WAAaV,KAAKG,aAAeH,KAAKG,UAAUuB,SAAS,OAAS1B,KAAKG,UAAUuB,SAAS,OAC/F1B,KAAKW,eAAiB,I,EAE9Bb,EAAAc,UAAAkB,iBAAA,SAAiBC,GACbA,EAAMC,kBACN,IAAMC,EAAUC,UAAUC,UAAUC,OAAO,aAAe,EAC1D,GAAIL,EAAMM,OAAOvB,OAASiB,EAAMM,OAAOC,UAAYL,EAAQ,CACvD,IAAKjC,KAAKW,gBAAkBoB,EAAMM,OAAOvB,MAAMyB,cAAcb,SAAS,OAASK,EAAMM,OAAOvB,MAAMyB,cAAcb,SAAS,MAAO,CAC5H,IAAKc,MAAMC,OAAOV,EAAMM,OAAOvB,MAAMc,OAAO,EAAG,MAAQa,OAAOV,EAAMM,OAAOvB,MAAMc,OAAO,EAAG,IAAM,GAAKa,OAAOV,EAAMM,OAAOvB,MAAMc,OAAO,EAAG,IAAM,GAAI,CAChJ5B,KAAKc,MAAQ,GAAAe,OAAGE,EAAMM,OAAOvB,MAAMc,OAAO,EAAG,IAAEC,OAAGE,EAAMM,OAAOvB,MAAMyB,cAAcb,SAAS,MAAQ,MAAQK,EAAMM,OAAOvB,MAAMyB,cAAcb,SAAS,MAAQ,MAAQ,G,MAGzK,CACD,GAAIe,OAAOV,EAAMM,OAAOvB,MAAMc,OAAO,EAAG,IAAM,GAAKY,MAAMC,OAAOV,EAAMM,OAAOvB,MAAMc,OAAO,EAAG,KAAM,CAC/F5B,KAAKc,MAAQ,IAAAe,OAAIE,EAAMM,OAAOvB,MAAMc,OAAO,EAAG,IAAEC,OAAG7B,KAAKW,eAAiB,GAAKoB,EAAMM,OAAOvB,MAAMyB,cAAcb,SAAS,MAAQ,MAAQK,EAAMM,OAAOvB,MAAMyB,cAAcb,SAAS,MAAQ,MAAQ,G,CAEtM,IAAKc,MAAMC,OAAOV,EAAMM,OAAOvB,MAAMc,OAAO,EAAG,MAAQa,OAAOV,EAAMM,OAAOvB,MAAMc,OAAO,EAAG,IAAM,GAAKa,OAAOV,EAAMM,OAAOvB,MAAMc,OAAO,EAAG,IAAM,GAAI,CAChJ5B,KAAKc,MAAQ,GAAAe,OAAGE,EAAMM,OAAOvB,MAAMc,OAAO,EAAG,G,EAGrD5B,KAAK0C,WAAWC,KAAK,CAAE7B,MAAOd,KAAKc,MAAO8B,QAAS5C,KAAK4C,QAAQ5C,KAAKc,Q,KAEpE,CACDd,KAAKc,MAAQiB,EAAMM,OAAOvB,MAC1Bd,KAAK0C,WAAWC,KAAK,CAAE7B,MAAOd,KAAKc,MAAO8B,QAAS5C,KAAK4C,QAAQ5C,KAAKc,Q,GAG7EhB,EAAAc,UAAAO,cAAA,WACI,IAAM0B,EAAkB7C,KAAK8C,YAAY9C,KAAKG,WAAY4C,EAAgB/C,KAAK8C,YAAY9C,KAAKI,SAChG,IAAI4C,EAAY,IAAIC,WAAWJ,EAAgB,GAAIA,EAAgB,GAAIA,EAAgB,IACvF,IAAIK,EAAU,IAAID,WAAWF,EAAc,GAAIA,EAAc,GAAIA,EAAc,IAC/E,GAAIC,EAAUG,IAAMC,WAAaF,EAAQC,IAAMC,UAAW,CACtD,GAAIJ,EAAUK,EAAI,EACdL,EAAUK,EAAI,EAClB,GAAIH,EAAQG,EAAI,GACZH,EAAQG,EAAI,GAChBL,EAAUM,MAAQN,EAAUK,EAC5BH,EAAQI,MAAQJ,EAAQG,EACxB,IAAKL,EAAUK,GAAK,IAAML,EAAUK,IAAM,IAAMH,EAAQG,IAAM,EAAG,CAC7DH,EAAQI,MAAQ,E,MAGnB,CACD,GAAIN,EAAUG,IAAM,KAAM,CACtBH,EAAUM,MAAQN,EAAUK,IAAM,GAAK,EAAIL,EAAUK,C,KAEpD,CACDL,EAAUM,MAAQN,EAAUK,IAAM,GAAK,GAAKL,EAAUK,EAAI,E,CAE9D,GAAIH,EAAQC,IAAM,KAAM,CACpBD,EAAQI,MAAQJ,EAAQG,IAAM,GAAK,EAAIH,EAAQG,EAC/C,IAAKL,EAAUG,IAAM,MAAQH,EAAUG,IAAM,MAAQH,EAAUK,IAAM,KAAOH,EAAQG,IAAM,GAAI,CAC1FH,EAAQI,MAAQ,E,MAGnB,CACDJ,EAAQI,MAAQJ,EAAQG,IAAM,GAAK,GAAKH,EAAQG,EAAI,E,EAG5D,IAAIE,EAAgB,MAAOC,EAAmB,MAC9C,IAAK,IAAIC,EAAeT,EAAUM,MAAOG,GAAgBP,EAAQI,MAAOG,IAAgB,CACpF,IAAIC,EAAOD,EAAcE,OAAM,EAAEC,OAAW,EAC5C,GAAIZ,EAAUG,IAAMC,WAAaF,EAAQC,IAAMC,UAAW,CACtDO,EAAS,E,KAER,CACDA,EAASF,EAAe,GAAK,KAAO,I,CAExC,IAAKF,EAAe,CAChBK,EAAc,IAAIX,WAAWD,EAAUK,EAAGL,EAAUa,EAAGb,EAAUG,GACjEI,EAAgB,I,KAEf,CACD,GAAII,IAAW,MAAQD,EAAO,GAAI,CAC9B,GAAIA,IAAS,GAAI,CACbC,EAAS,I,CAEbD,GAAQ,E,MAEP,GAAIC,IAAW,IAAMD,IAAS,GAAI,CACnCA,EAAO,C,CAEXE,EAAc,IAAIX,WAAWS,EAAM,KAAMC,E,CAE7C3D,KAAK8D,SAASF,EAAYP,EAAEU,YAAa,IAAMH,EAAYC,EAAEE,YAAYC,OAAO,GAAIJ,EAAYT,GAChG,GAAInD,KAAKK,KAAO,EAAG,CACf,IAAI4D,OAAO,EAAEC,EAAiB,GAC9B,IAAKV,EAAkB,CACnBS,EAAUL,EAAYC,EAAI7D,KAAKK,KAC/BmD,EAAmB,I,KAElB,CACDS,EAAUjE,KAAKK,I,CAEnB,GAAIoD,IAAiBT,EAAUM,MAAO,CAClCI,EAAOV,EAAUK,C,MAEhB,GAAII,IAAiBP,EAAQI,MAAO,CACrCY,EAAiBhB,EAAQW,C,CAE7B,IAAK,IAAIM,EAAc,EAAGF,GAAWC,EAAgBC,IAAe,CAChE,IAAIC,EAAqB,IAAInB,WAAWS,EAAMO,EAASN,GACvD3D,KAAK8D,SAASM,EAAmBf,EAAEU,YAAa,IAAMK,EAAmBP,EAAEE,YAAYC,OAAO,GAAII,EAAmBjB,GACrHc,GAAWjE,KAAKK,I,KAKhCP,EAAAc,UAAAG,gBAAA,WACI,IAAI6C,EAAc,EAAGS,EAAkB,EAAGC,EAAoB,EAC9D,IAAIpE,EAAU,GACd,IAAK,IAAIqE,EAAI,EAAGA,EAAIvE,KAAKC,MAAMuE,OAAQD,IAAK,CACxC,IAAIE,EAAazE,KAAKU,WAAaV,KAAKC,MAAMsE,GAAG3C,OAAO,EAAG,GAAGF,SAAS,KAAO,GAAAG,OAAG,IAAM7B,KAAKC,MAAMsE,IAAOvE,KAAKC,MAAMsE,GACpH,IAAMG,EAAa1E,KAAK2E,WAAWF,EAAYzE,KAAK4E,SACpD,IAAKF,IAAe1E,KAAK6E,QAAQ7E,KAAK4E,SAAU,CAC5C,IAAME,GAAgBL,EAAWM,MAAM,KAAK,GAC5C,GAAInB,IAAgBkB,EAAc,CAC9BlB,EAAckB,EACdT,G,CAEJI,GAAczE,KAAKgF,eAAeX,EAAkB,EAAGC,EAAmBG,EAAWM,MAAM,KAAK,IAChGT,GAAqBtE,KAAKK,I,CAE9BH,EAAQ+E,KAAK,CACTnE,MAAOd,KAAKU,WAAaV,KAAKC,MAAMsE,GAAG3C,OAAO,EAAG,GAAGF,SAAS,KAAO,GAAAG,OAAG,IAAM7B,KAAKC,MAAMsE,IAAOvE,KAAKC,MAAMsE,GAC1GW,KAAMT,EACNlE,SAAUmE,GAAc1E,KAAKM,cAAc6E,QAAQnF,KAAKC,MAAMsE,KAAO,G,CAG7EvE,KAAKE,QAAUA,C,EAEnBJ,EAAAc,UAAAoE,eAAA,SAAeI,EAAYC,EAAcC,GACrC,GAAIF,IAAe,EAAG,CAClB,MAAO,KAAAvD,OAAKwD,EAAY,S,MAEvB,GAAIA,IAAiB,GAAKD,IAAe,GAAKC,IAAiB,GAAI,CACpE,MAAO,Y,CAEX,MAAO,KAAAxD,OAAKuD,EAAU,KAAAvD,OAAIyD,EAAeC,UAAU,EAAG,GAAE,Q,EAE5DzF,EAAAc,UAAAkC,YAAA,SAAY0C,GACR,OAAOA,EAAKT,MAAM,Q,EAEtBjF,EAAAc,UAAA+D,WAAA,SAAWc,EAAWC,GAClB,OAAO1F,KAAK2F,gBAAgBF,GAAazF,KAAK2F,gBAAgBD,E,EAElE5F,EAAAc,UAAA+E,gBAAA,SAAgB7E,GACZ,OAAO8E,KAAKC,MAAM,cAAAhE,OAAcf,G,EAEpChB,EAAAc,UAAAkD,SAAA,SAAS7D,EAAOgE,EAASN,GAAA,GAAAA,SAAA,GAAAA,EAAA,EAAW,CAChC3D,KAAKC,MAAMgF,KAAK,GAAApD,OAAG5B,EAAK,KAAA4B,OAAIoC,EAAO,KAAApC,OAAI8B,G,EAE3C7D,EAAAc,UAAAiE,QAAA,SAAQ/D,GACJ,OAAOA,IAAU,IAAMA,IAAU,KAAOA,IAAUsC,S,EAEtDtD,EAAAc,UAAAgC,QAAA,SAAQ9B,GACJ,GAAId,KAAKW,eACL,OAAOG,GAASA,EAAMY,SAAS,MAAQZ,EAAM0D,SAAW,IAAMhC,MAAMC,OAAO3B,EAAMc,OAAO,EAAG,OAASY,MAAMC,OAAO3B,EAAMc,OAAO,EAAG,KACrI,OAAOd,GAASA,EAAMY,SAAS,OAASc,MAAMC,OAAO3B,EAAMc,OAAO,EAAG,MAAQd,EAAM0D,SAAW,IAAMhC,MAAMC,OAAO3B,EAAMc,OAAO,EAAG,OAASd,EAAMyB,cAAcb,SAAS,QAAUZ,EAAMyB,cAAcb,SAAS,O,EAElN5B,EAAAc,UAAAkF,OAAA,eAAAvE,EAAAvB,KACI,OAAQqD,EAAE,cAAe,CAAE0C,aAAc,SAAAC,GAAK,OAAAzE,EAAKO,iBAAiBkE,EAAtB,EAA0BC,QAASjG,KAAKW,eAAiB,0BAA4B,cAAeJ,SAAUP,KAAKO,SAAUL,QAASF,KAAKE,QAASY,MAAQoB,UAAUC,UAAUC,OAAO,aAAe,EAAKpC,KAAKc,MAAQd,KAAKc,MAAQd,KAAKc,MAAQd,KAAKW,eAAiB,QAAU,WAAYH,MAAOR,KAAKQ,MAAO0F,KAAMlG,KAAKkG,KAAMzF,YAAcyB,UAAUC,UAAUC,OAAO,aAAe,GAAMpC,KAAKU,UAAYV,KAAKW,eAAiB,QAAU,WAAaX,KAAKS,YAAa0F,MAAOnG,KAAKmG,MAAO,aAAcnG,KAAKU,UAAW0F,WAAY,M,kTAzPxiB,GAygB3B,IAAAnD,WAAA,WACI,SAAAA,EAAYS,EAAMO,EAASN,GACvB3D,KAAKqD,GAAKK,EACV1D,KAAK6D,GAAKI,EACVjE,KAAKmD,EAAIQ,EACT3D,KAAKsD,OAAS,C,UALtB,U"}